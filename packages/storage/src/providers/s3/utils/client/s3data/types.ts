// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/**
 * Generated by scripts/dts-bundler/README.md
 * Manual change contained:
 * * {@link CompatibleHttpResponse}: Add compatible interface for response payload to harmonize AWS SDK and custom
 * 		clients.
 * * {@link GetObjectCommandOutput.Body}: Update the type to `CompatibleHttpResponse` and make it required as fetch
 * 		Response always extends from Body class, the body consumption utilities always presents.
 * * {@link PutObjectRequest.Body}: Remove Node.js specific `Readable` type and add `ArrayBuffer` and `ArrayBufferView`
 * * {@link UploadPartRequest.Body}: Remove Node.js specific `Readable` type and add `ArrayBuffer` and `ArrayBufferView`
 */
import { MetadataBearer as __MetadataBearer } from '@aws-sdk/types';
import {
	HttpResponse,
	ResponseBodyMixin,
} from '@aws-amplify/core/internals/aws-client-utils';

/**
 * Compatible type for S3 streaming body exposed via Amplify public interfaces, like {@link GetObjectCommandOutput}
 * exposed via download API. It's also compatible with the custom transfer handler interface {@link HttpResponse.body}.
 *
 * @internal
 */
export type CompatibleHttpResponse = Omit<HttpResponse, 'body'> & {
	body: ResponseBodyMixin & Blob;
};

declare const ArchiveStatus: {
	readonly ARCHIVE_ACCESS: 'ARCHIVE_ACCESS';
	readonly DEEP_ARCHIVE_ACCESS: 'DEEP_ARCHIVE_ACCESS';
};
declare const ChecksumAlgorithm: {
	readonly CRC32: 'CRC32';
	readonly CRC32C: 'CRC32C';
	readonly CRC64NVME: 'CRC64NVME';
	readonly SHA1: 'SHA1';
	readonly SHA256: 'SHA256';
};
declare const ChecksumMode: {
	readonly ENABLED: 'ENABLED';
};
declare const ChecksumType: {
	readonly COMPOSITE: 'COMPOSITE';
	readonly FULL_OBJECT: 'FULL_OBJECT';
};
declare const EncodingType: {
	readonly url: 'url';
};
declare const MetadataDirective: {
	readonly COPY: 'COPY';
	readonly REPLACE: 'REPLACE';
};
declare const ObjectCannedACL: {
	readonly authenticated_read: 'authenticated-read';
	readonly aws_exec_read: 'aws-exec-read';
	readonly bucket_owner_full_control: 'bucket-owner-full-control';
	readonly bucket_owner_read: 'bucket-owner-read';
	readonly private: 'private';
	readonly public_read: 'public-read';
	readonly public_read_write: 'public-read-write';
};
declare const ObjectLockLegalHoldStatus: {
	readonly OFF: 'OFF';
	readonly ON: 'ON';
};
declare const ObjectLockMode: {
	readonly COMPLIANCE: 'COMPLIANCE';
	readonly GOVERNANCE: 'GOVERNANCE';
};
declare const ObjectStorageClass: {
	readonly DEEP_ARCHIVE: 'DEEP_ARCHIVE';
	readonly EXPRESS_ONEZONE: 'EXPRESS_ONEZONE';
	readonly GLACIER: 'GLACIER';
	readonly GLACIER_IR: 'GLACIER_IR';
	readonly INTELLIGENT_TIERING: 'INTELLIGENT_TIERING';
	readonly ONEZONE_IA: 'ONEZONE_IA';
	readonly OUTPOSTS: 'OUTPOSTS';
	readonly REDUCED_REDUNDANCY: 'REDUCED_REDUNDANCY';
	readonly SNOW: 'SNOW';
	readonly STANDARD: 'STANDARD';
	readonly STANDARD_IA: 'STANDARD_IA';
};
declare const OptionalObjectAttributes: {
	readonly RESTORE_STATUS: 'RestoreStatus';
};
declare const ReplicationStatus: {
	readonly COMPLETE: 'COMPLETE';
	readonly COMPLETED: 'COMPLETED';
	readonly FAILED: 'FAILED';
	readonly PENDING: 'PENDING';
	readonly REPLICA: 'REPLICA';
};
declare const RequestCharged: {
	readonly requester: 'requester';
};
declare const RequestPayer: {
	readonly requester: 'requester';
};
declare const ServerSideEncryption: {
	readonly AES256: 'AES256';
	readonly aws_kms: 'aws:kms';
	readonly aws_kms_dsse: 'aws:kms:dsse';
};
declare const StorageClass: {
	readonly DEEP_ARCHIVE: 'DEEP_ARCHIVE';
	readonly EXPRESS_ONEZONE: 'EXPRESS_ONEZONE';
	readonly GLACIER: 'GLACIER';
	readonly GLACIER_IR: 'GLACIER_IR';
	readonly INTELLIGENT_TIERING: 'INTELLIGENT_TIERING';
	readonly ONEZONE_IA: 'ONEZONE_IA';
	readonly OUTPOSTS: 'OUTPOSTS';
	readonly REDUCED_REDUNDANCY: 'REDUCED_REDUNDANCY';
	readonly SNOW: 'SNOW';
	readonly STANDARD: 'STANDARD';
	readonly STANDARD_IA: 'STANDARD_IA';
};
declare const TaggingDirective: {
	readonly COPY: 'COPY';
	readonly REPLACE: 'REPLACE';
};
/**
 * @public
 *
 * The input for {@link AbortMultipartUploadCommand}.
 */
export interface AbortMultipartUploadCommandInput
	extends AbortMultipartUploadRequest {}
/**
 * @public
 *
 * The output of {@link AbortMultipartUploadCommand}.
 */
export interface AbortMultipartUploadCommandOutput
	extends AbortMultipartUploadOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface AbortMultipartUploadOutput {
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestCharged?: RequestCharged | undefined;
}
/**
 * @public
 */
export interface AbortMultipartUploadRequest {
	/**
	 * <p>The bucket name to which the upload was taking place. </p>
	 *          <p>
	 *             <b>Directory buckets</b> -
	 *          When you use this operation with a directory bucket, you must use virtual-hosted-style requests in the format <code>
	 *                <i>Bucket-name</i>.s3express-<i>zone-id</i>.<i>region-code</i>.amazonaws.com</code>. Path-style requests are not supported.  Directory bucket names must be unique in the chosen Zone (Availability Zone or Local Zone). Bucket names must follow the format <code>
	 *                <i>bucket-base-name</i>--<i>zone-id</i>--x-s3</code> (for example, <code>
	 *                <i>amzn-s3-demo-bucket</i>--<i>usw2-az1</i>--x-s3</code>). For information about bucket naming
	 *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-bucket-naming-rules.html">Directory bucket naming
	 *             rules</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Access points</b> - When you use this action with an access point for general purpose buckets, you must provide the alias of the access point in place of the bucket name or specify the access point ARN. When you use this action with an access point for directory buckets, you must provide the access point name in place of the bucket name. When using the access point ARN, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>Object Lambda access points are not supported by directory buckets.</p>
	 *          </note>
	 *          <p>
	 *             <b>S3 on Outposts</b> - When you use this action with S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the
	 *                      form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts, the destination bucket must be the Outposts access point ARN or the access point alias. For more information about S3 on Outposts, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 * @public
	 */
	Bucket: string | undefined;
	/**
	 * <p>Key of the object for which the multipart upload was initiated.</p>
	 * @public
	 */
	Key: string | undefined;
	/**
	 * <p>Upload ID that identifies the multipart upload.</p>
	 * @public
	 */
	UploadId: string | undefined;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. If either the source or
	 *          destination S3 bucket has Requester Pays enabled, the requester will pay for corresponding
	 *          charges to copy the object. For information about downloading objects from Requester Pays
	 *          buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestPayer?: RequestPayer | undefined;
	/**
	 * <p>The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 * @public
	 */
	ExpectedBucketOwner?: string | undefined;
	/**
	 * <p>If present, this header aborts an in progress multipart upload only if it was initiated on the provided timestamp.
	 *          If the initiated timestamp of the multipart upload does not match the provided value, the operation returns a <code>412 Precondition Failed</code> error.
	 *          If the initiated timestamp matches or if the multipart upload doesnâ€™t exist, the operation returns a <code>204 Success (No Content)</code> response.
	 *       </p>
	 *          <note>
	 *             <p>This functionality is only supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	IfMatchInitiatedTime?: Date | undefined;
}
/**
 * <p>Container for all (if there are any) keys between Prefix and the next occurrence of the
 *          string specified by a delimiter. CommonPrefixes lists keys that act like subdirectories in
 *          the directory specified by Prefix. For example, if the prefix is notes/ and the delimiter
 *          is a slash (/) as in notes/summer/july, the common prefix is notes/summer/. </p>
 * @public
 */
export interface CommonPrefix {
	/**
	 * <p>Container for the specified common prefix.</p>
	 * @public
	 */
	Prefix?: string | undefined;
}
/**
 * @public
 *
 * The input for {@link CompleteMultipartUploadCommand}.
 */
export interface CompleteMultipartUploadCommandInput
	extends CompleteMultipartUploadRequest {}
/**
 * @public
 *
 * The output of {@link CompleteMultipartUploadCommand}.
 */
export interface CompleteMultipartUploadCommandOutput
	extends CompleteMultipartUploadOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface CompleteMultipartUploadOutput {
	/**
	 * <p>The URI that identifies the newly created object.</p>
	 * @public
	 */
	Location?: string | undefined;
	/**
	 * <p>The name of the bucket that contains the newly created object. Does not return the access point
	 *          ARN or access point alias if used.</p>
	 *          <note>
	 *             <p>Access points are not supported by directory buckets.</p>
	 *          </note>
	 * @public
	 */
	Bucket?: string | undefined;
	/**
	 * <p>The object key of the newly created object.</p>
	 * @public
	 */
	Key?: string | undefined;
	/**
	 * <p>If the object expiration is configured, this will contain the expiration date
	 *             (<code>expiry-date</code>) and rule ID (<code>rule-id</code>). The value of
	 *             <code>rule-id</code> is URL-encoded.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	Expiration?: string | undefined;
	/**
	 * <p>Entity tag that identifies the newly created object's data. Objects with different
	 *          object data will have different entity tags. The entity tag is an opaque string. The entity
	 *          tag may or may not be an MD5 digest of the object data. If the entity tag is not an MD5
	 *          digest of the object data, it will contain one or more nonhexadecimal characters and/or
	 *          will consist of less than 32 or more than 32 hexadecimal digits. For more information about
	 *          how the entity tag is calculated, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object
	 *             integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ETag?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32 checksum</code> of the object. This checksum is only be present if the checksum was uploaded
	 *     with the object. When you use an API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32C</code> checksum of the object. This checksum is only present if the checksum was uploaded
	 *     with the object. When you use an API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32C?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is
	 *          the same data that was originally sent. This header specifies the Base64 encoded, 64-bit
	 *             <code>CRC64NVME</code> checksum of the object. The <code>CRC64NVME</code> checksum is
	 *          always a full object checksum. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity
	 *             in the Amazon S3 User Guide</a>. </p>
	 * @public
	 */
	ChecksumCRC64NVME?: string | undefined;
	/**
	 * <p>The Base64 encoded, 160-bit <code>SHA1</code> digest of the object. This will only be present if the object was uploaded
	 *     with the object. When you use the API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA1?: string | undefined;
	/**
	 * <p>The Base64 encoded, 256-bit <code>SHA256</code> digest of the object. This will only be present if the object was uploaded
	 *     with the object. When you use an API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA256?: string | undefined;
	/**
	 * <p>The checksum type, which determines how part-level checksums are combined to create an
	 *          object-level checksum for multipart objects. You can use this header as a data integrity
	 *          check to verify that the checksum type that is received is the same checksum type that was
	 *          specified during the <code>CreateMultipartUpload</code> request. For more information, see
	 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity
	 *             in the Amazon S3 User Guide</a>.</p>
	 * @public
	 */
	ChecksumType?: ChecksumType | undefined;
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
	 *             <code>AES256</code>, <code>aws:kms</code>).</p>
	 * @public
	 */
	ServerSideEncryption?: ServerSideEncryption | undefined;
	/**
	 * <p>Version ID of the newly created object, in case the bucket has versioning turned
	 *          on.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	VersionId?: string | undefined;
	/**
	 * <p>If present, indicates the ID of the KMS key that was used for object encryption.</p>
	 * @public
	 */
	SSEKMSKeyId?: string | undefined;
	/**
	 * <p>Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption
	 *          with Key Management Service (KMS) keys (SSE-KMS).</p>
	 * @public
	 */
	BucketKeyEnabled?: boolean | undefined;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestCharged?: RequestCharged | undefined;
}
/**
 * @public
 */
export interface CompleteMultipartUploadRequest {
	/**
	 * <p>Name of the bucket to which the multipart upload was initiated.</p>
	 *          <p>
	 *             <b>Directory buckets</b> -
	 *          When you use this operation with a directory bucket, you must use virtual-hosted-style requests in the format <code>
	 *                <i>Bucket-name</i>.s3express-<i>zone-id</i>.<i>region-code</i>.amazonaws.com</code>. Path-style requests are not supported.  Directory bucket names must be unique in the chosen Zone (Availability Zone or Local Zone). Bucket names must follow the format <code>
	 *                <i>bucket-base-name</i>--<i>zone-id</i>--x-s3</code> (for example, <code>
	 *                <i>amzn-s3-demo-bucket</i>--<i>usw2-az1</i>--x-s3</code>). For information about bucket naming
	 *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-bucket-naming-rules.html">Directory bucket naming
	 *             rules</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Access points</b> - When you use this action with an access point for general purpose buckets, you must provide the alias of the access point in place of the bucket name or specify the access point ARN. When you use this action with an access point for directory buckets, you must provide the access point name in place of the bucket name. When using the access point ARN, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>Object Lambda access points are not supported by directory buckets.</p>
	 *          </note>
	 *          <p>
	 *             <b>S3 on Outposts</b> - When you use this action with S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the
	 *                      form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts, the destination bucket must be the Outposts access point ARN or the access point alias. For more information about S3 on Outposts, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 * @public
	 */
	Bucket: string | undefined;
	/**
	 * <p>Object key for which the multipart upload was initiated.</p>
	 * @public
	 */
	Key: string | undefined;
	/**
	 * <p>The container for the multipart upload request information.</p>
	 * @public
	 */
	MultipartUpload?: CompletedMultipartUpload | undefined;
	/**
	 * <p>ID for the initiated multipart upload.</p>
	 * @public
	 */
	UploadId: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the Base64 encoded, 32-bit <code>CRC32</code> checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the Base64 encoded, 32-bit <code>CRC32C</code> checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32C?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is
	 *          the same data that was originally sent. This header specifies the Base64 encoded, 64-bit
	 *             <code>CRC64NVME</code> checksum of the object. The <code>CRC64NVME</code> checksum is
	 *          always a full object checksum. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity
	 *             in the Amazon S3 User Guide</a>.</p>
	 * @public
	 */
	ChecksumCRC64NVME?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the Base64 encoded, 160-bit <code>SHA1</code> digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA1?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the Base64 encoded, 256-bit <code>SHA256</code> digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA256?: string | undefined;
	/**
	 * <p>This header specifies the checksum type of the object, which determines how part-level
	 *          checksums are combined to create an object-level checksum for multipart objects. You can
	 *          use this header as a data integrity check to verify that the checksum type that is received
	 *          is the same checksum that was specified. If the checksum type doesnâ€™t match the checksum
	 *          type that was specified for the object during the <code>CreateMultipartUpload</code>
	 *          request, itâ€™ll result in a <code>BadDigest</code> error. For more information, see Checking
	 *          object integrity in the Amazon S3 User Guide. </p>
	 * @public
	 */
	ChecksumType?: ChecksumType | undefined;
	/**
	 * <p> The expected total object size of the multipart upload request. If thereâ€™s a mismatch
	 *          between the specified object size value and the actual object size value, it results in an
	 *             <code>HTTP 400 InvalidRequest</code> error. </p>
	 * @public
	 */
	MpuObjectSize?: number | undefined;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. If either the source or
	 *          destination S3 bucket has Requester Pays enabled, the requester will pay for corresponding
	 *          charges to copy the object. For information about downloading objects from Requester Pays
	 *          buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestPayer?: RequestPayer | undefined;
	/**
	 * <p>The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 * @public
	 */
	ExpectedBucketOwner?: string | undefined;
	/**
	 * <p>Uploads the object only if the ETag (entity tag) value provided during the WRITE
	 *          operation matches the ETag of the object in S3. If the ETag values do not match, the
	 *          operation returns a <code>412 Precondition Failed</code> error.</p>
	 *          <p>If a conflicting operation occurs during the upload S3 returns a <code>409
	 *             ConditionalRequestConflict</code> response. On a 409 failure you should fetch the object's ETag, re-initiate the
	 *          multipart upload with <code>CreateMultipartUpload</code>, and re-upload each part.</p>
	 *          <p>Expects the ETag value as a string.</p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>, or <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/conditional-requests.html">Conditional requests</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	IfMatch?: string | undefined;
	/**
	 * <p>Uploads the object only if the object key name does not already exist in the bucket
	 *          specified. Otherwise, Amazon S3 returns a <code>412 Precondition Failed</code> error.</p>
	 *          <p>If a conflicting operation occurs during the upload S3 returns a <code>409
	 *             ConditionalRequestConflict</code> response. On a 409 failure you should re-initiate the
	 *          multipart upload with <code>CreateMultipartUpload</code> and re-upload each part.</p>
	 *          <p>Expects the '*' (asterisk) character.</p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>, or <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/conditional-requests.html">Conditional requests</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	IfNoneMatch?: string | undefined;
	/**
	 * <p>The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is
	 *          required only when the object was created using a checksum algorithm or if your bucket
	 *          policy requires the use of SSE-C. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html#ssec-require-condition-key">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User
	 *          Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm.
	 *     For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKey?: string | undefined;
	/**
	 * <p>The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum
	 *     algorithm. For more information,
	 *     see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
}
/**
 * <p>The container for the completed multipart upload details.</p>
 * @public
 */
export interface CompletedMultipartUpload {
	/**
	 * <p>Array of CompletedPart data types.</p>
	 *          <p>If you do not supply a valid <code>Part</code> with your request, the service sends back
	 *          an HTTP 400 response.</p>
	 * @public
	 */
	Parts?: CompletedPart[] | undefined;
}
/**
 * <p>Details of the parts that were uploaded.</p>
 * @public
 */
export interface CompletedPart {
	/**
	 * <p>Entity tag returned when the part was uploaded.</p>
	 * @public
	 */
	ETag?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32</code> checksum of the part. This checksum is present
	 *          if the multipart upload request was created with the <code>CRC32</code> checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32C</code> checksum of the part. This checksum is present
	 *          if the multipart upload request was created with the <code>CRC32C</code> checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32C?: string | undefined;
	/**
	 * <p>The Base64 encoded, 64-bit <code>CRC64NVME</code> checksum of the part. This checksum is present
	 *          if the multipart upload request was created with the <code>CRC64NVME</code> checksum algorithm to the uploaded object). For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC64NVME?: string | undefined;
	/**
	 * <p>The Base64 encoded, 160-bit <code>SHA1</code> checksum of the part. This checksum is present
	 *          if the multipart upload request was created with the <code>SHA1</code> checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA1?: string | undefined;
	/**
	 * <p>The Base64 encoded, 256-bit <code>SHA256</code> checksum of the part. This checksum is present
	 *          if the multipart upload request was created with the <code>SHA256</code> checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA256?: string | undefined;
	/**
	 * <p>Part number that identifies the part. This is a positive integer between 1 and
	 *          10,000.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>
	 *                      <b>General purpose buckets</b> - In
	 *                      <code>CompleteMultipartUpload</code>, when a additional checksum (including
	 *                      <code>x-amz-checksum-crc32</code>, <code>x-amz-checksum-crc32c</code>,
	 *                      <code>x-amz-checksum-sha1</code>, or <code>x-amz-checksum-sha256</code>) is
	 *                   applied to each part, the <code>PartNumber</code> must start at 1 and the part
	 *                   numbers must be consecutive. Otherwise, Amazon S3 generates an HTTP <code>400 Bad
	 *                      Request</code> status code and an <code>InvalidPartOrder</code> error
	 *                   code.</p>
	 *                </li>
	 *                <li>
	 *                   <p>
	 *                      <b>Directory buckets</b> - In
	 *                      <code>CompleteMultipartUpload</code>, the <code>PartNumber</code> must start at
	 *                   1 and the part numbers must be consecutive.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	PartNumber?: number | undefined;
}
/**
 * @public
 *
 * The input for {@link CopyObjectCommand}.
 */
export interface CopyObjectCommandInput extends CopyObjectRequest {}
/**
 * @public
 *
 * The output of {@link CopyObjectCommand}.
 */
export interface CopyObjectCommandOutput
	extends CopyObjectOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface CopyObjectOutput {
	/**
	 * <p>Container for all response elements.</p>
	 * @public
	 */
	CopyObjectResult?: CopyObjectResult | undefined;
	/**
	 * <p>If the object expiration is configured, the response includes this header.</p>
	 *          <note>
	 *             <p>Object expiration information is not returned in directory buckets and this header returns the value "<code>NotImplemented</code>" in all responses for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	Expiration?: string | undefined;
	/**
	 * <p>Version ID of the source object that was copied.</p>
	 *          <note>
	 *             <p>This functionality is not supported when the source object is in a directory bucket.</p>
	 *          </note>
	 * @public
	 */
	CopySourceVersionId?: string | undefined;
	/**
	 * <p>Version ID of the newly created copy.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	VersionId?: string | undefined;
	/**
	 * <p>The server-side encryption algorithm used when you store this object in Amazon S3 (for
	 *          example, <code>AES256</code>, <code>aws:kms</code>, <code>aws:kms:dsse</code>).</p>
	 * @public
	 */
	ServerSideEncryption?: ServerSideEncryption | undefined;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to confirm the encryption algorithm that's used.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide the round-trip message integrity verification
	 *          of the customer-provided encryption key.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>If present, indicates the ID of the KMS key that was used for object encryption.</p>
	 * @public
	 */
	SSEKMSKeyId?: string | undefined;
	/**
	 * <p>If present, indicates the Amazon Web Services KMS Encryption Context to use for object encryption. The
	 *          value of this header is a Base64 encoded UTF-8 string holding JSON with the encryption
	 *          context key-value pairs.</p>
	 * @public
	 */
	SSEKMSEncryptionContext?: string | undefined;
	/**
	 * <p>Indicates whether the copied object uses an S3 Bucket Key for server-side encryption
	 *          with Key Management Service (KMS) keys (SSE-KMS).</p>
	 * @public
	 */
	BucketKeyEnabled?: boolean | undefined;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestCharged?: RequestCharged | undefined;
}
/**
 * @public
 */
export interface CopyObjectRequest {
	/**
	 * <p>The canned access control list (ACL) to apply to the object.</p>
	 *          <p>When you copy an object, the ACL metadata is not preserved and is set to
	 *             <code>private</code> by default. Only the owner has full access control. To override the
	 *          default ACL setting, specify a new ACL when you generate a copy request. For more
	 *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html">Using ACLs</a>. </p>
	 *          <p>If the destination bucket that you're copying objects to uses the bucket owner enforced
	 *          setting for S3 Object Ownership, ACLs are disabled and no longer affect permissions.
	 *          Buckets that use this setting only accept <code>PUT</code> requests that don't specify an
	 *          ACL or <code>PUT</code> requests that specify bucket owner full control ACLs, such as the
	 *             <code>bucket-owner-full-control</code> canned ACL or an equivalent form of this ACL
	 *          expressed in the XML format. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html">Controlling ownership of
	 *             objects and disabling ACLs</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>If your destination bucket uses the bucket owner enforced setting for Object
	 *                   Ownership, all objects written to the bucket by any account will be owned by the
	 *                   bucket owner.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	ACL?: ObjectCannedACL | undefined;
	/**
	 * <p>The name of the destination bucket.</p>
	 *          <p>
	 *             <b>Directory buckets</b> - When you use this operation with a directory bucket, you must use virtual-hosted-style requests in the format <code>
	 *                <i>Bucket-name</i>.s3express-<i>zone-id</i>.<i>region-code</i>.amazonaws.com</code>. Path-style requests are not supported.  Directory bucket names must be unique in the chosen Zone (Availability Zone or Local Zone). Bucket names must follow the format <code>
	 *                <i>bucket-base-name</i>--<i>zone-id</i>--x-s3</code> (for example, <code>
	 *                <i>amzn-s3-demo-bucket</i>--<i>usw2-az1</i>--x-s3</code>). For information about bucket naming
	 *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-bucket-naming-rules.html">Directory bucket naming
	 *             rules</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>Copying objects across different Amazon Web Services Regions isn't supported when the source or destination bucket is in Amazon Web Services Local Zones. The source and destination buckets must have the same parent Amazon Web Services Region. Otherwise,
	 *       you get an HTTP <code>400 Bad Request</code> error with the error code <code>InvalidRequest</code>.</p>
	 *          </note>
	 *          <p>
	 *             <b>Access points</b> - When you use this action with an access point for general purpose buckets, you must provide the alias of the access point in place of the bucket name or specify the access point ARN. When you use this action with an access point for directory buckets, you must provide the access point name in place of the bucket name. When using the access point ARN, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>Object Lambda access points are not supported by directory buckets.</p>
	 *          </note>
	 *          <p>
	 *             <b>S3 on Outposts</b> - When you use this action with S3 on Outposts, you must use the Outpost bucket access point ARN or the access point alias for the destination bucket.
	 *
	 *          You can only copy objects within the same Outpost bucket. It's not supported to copy objects across different Amazon Web Services Outposts, between buckets on the same Outposts, or between Outposts buckets and any other bucket types.
	 *          For more information about S3 on Outposts, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>S3 on Outposts guide</i>.
	 *          When you use this action with S3 on Outposts through the REST API, you must direct requests to the S3 on Outposts hostname, in the format
	 *          <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. The hostname isn't required when you use the Amazon Web Services CLI or SDKs.
	 *       </p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 * @public
	 */
	Bucket: string | undefined;
	/**
	 * <p>Specifies the caching behavior along the request/reply chain.</p>
	 * @public
	 */
	CacheControl?: string | undefined;
	/**
	 * <p>Indicates the algorithm that you want Amazon S3 to use to create the checksum for the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in
	 *     the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you copy an object, if the source object has a checksum, that checksum value will
	 *          be copied to the new object by default. If the <code>CopyObject</code> request does not
	 *          include this <code>x-amz-checksum-algorithm</code> header, the checksum algorithm will be
	 *          copied from the source object to the destination object (if it's present on the source
	 *          object). You can optionally specify a different checksum algorithm to use with the
	 *             <code>x-amz-checksum-algorithm</code> header. Unrecognized or unsupported values will
	 *          respond with the HTTP status code <code>400 Bad Request</code>.</p>
	 *          <note>
	 *             <p>For directory buckets, when you use Amazon Web Services SDKs, <code>CRC32</code> is the default checksum algorithm that's used for performance.</p>
	 *          </note>
	 * @public
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm | undefined;
	/**
	 * <p>Specifies presentational information for the object. Indicates whether an object should
	 *          be displayed in a web browser or downloaded as a file. It allows specifying the desired
	 *          filename for the downloaded file.</p>
	 * @public
	 */
	ContentDisposition?: string | undefined;
	/**
	 * <p>Specifies what content encodings have been applied to the object and thus what decoding
	 *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header
	 *          field.</p>
	 *          <note>
	 *             <p>For directory buckets, only the <code>aws-chunked</code> value is supported in this header field.</p>
	 *          </note>
	 * @public
	 */
	ContentEncoding?: string | undefined;
	/**
	 * <p>The language the content is in.</p>
	 * @public
	 */
	ContentLanguage?: string | undefined;
	/**
	 * <p>A standard MIME type that describes the format of the object data.</p>
	 * @public
	 */
	ContentType?: string | undefined;
	/**
	 * <p>Specifies the source object for the copy operation. The source object can be up to 5 GB.
	 *          If the source object is an object that was uploaded by using a multipart upload, the object
	 *          copy will be a single part object after the source object is copied to the destination
	 *          bucket.</p>
	 *          <p>You specify the value of the copy source in one of two formats, depending on whether you
	 *          want to access the source object through an <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">access point</a>:</p>
	 *          <ul>
	 *             <li>
	 *                <p>For objects not accessed through an access point, specify the name of the source bucket
	 *                and the key of the source object, separated by a slash (/). For example, to copy the
	 *                object <code>reports/january.pdf</code> from the general purpose bucket
	 *                   <code>awsexamplebucket</code>, use
	 *                   <code>awsexamplebucket/reports/january.pdf</code>. The value must be URL-encoded.
	 *                To copy the object <code>reports/january.pdf</code> from the directory bucket
	 *                   <code>awsexamplebucket--use1-az5--x-s3</code>, use
	 *                   <code>awsexamplebucket--use1-az5--x-s3/reports/january.pdf</code>. The value must
	 *                be URL-encoded.</p>
	 *             </li>
	 *             <li>
	 *                <p>For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format <code>arn:aws:s3:<Region>:<account-id>:accesspoint/<access-point-name>/object/<key></code>. For example, to copy the object <code>reports/january.pdf</code> through access point <code>my-access-point</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/reports/january.pdf</code>. The value must be URL encoded.</p>
	 *                <note>
	 *                   <ul>
	 *                      <li>
	 *                         <p>Amazon S3 supports copy operations using Access points only when the source and destination buckets are in the same Amazon Web Services Region.</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Access points are not supported by directory buckets.</p>
	 *                      </li>
	 *                   </ul>
	 *                </note>
	 *                <p>Alternatively, for objects accessed through Amazon S3 on Outposts, specify the ARN of the object as accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/object/<key></code>. For example, to copy the object <code>reports/january.pdf</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/object/reports/january.pdf</code>. The value must be URL-encoded.  </p>
	 *             </li>
	 *          </ul>
	 *          <p>If your source bucket versioning is enabled, the <code>x-amz-copy-source</code> header
	 *          by default identifies the current version of an object to copy. If the current version is a
	 *          delete marker, Amazon S3 behaves as if the object was deleted. To copy a different version, use
	 *          the <code>versionId</code> query parameter. Specifically, append
	 *             <code>?versionId=<version-id></code> to the value (for example,
	 *             <code>awsexamplebucket/reports/january.pdf?versionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893</code>).
	 *          If you don't specify a version ID, Amazon S3 copies the latest version of the source
	 *          object.</p>
	 *          <p>If you enable versioning on the destination bucket, Amazon S3 generates a unique version ID
	 *          for the copied object. This version ID is different from the version ID of the source
	 *          object. Amazon S3 returns the version ID of the copied object in the
	 *             <code>x-amz-version-id</code> response header in the response.</p>
	 *          <p>If you do not enable versioning or suspend it on the destination bucket, the version ID
	 *          that Amazon S3 generates in the <code>x-amz-version-id</code> response header is always
	 *          null.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> -
	 *             S3 Versioning isn't enabled and supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	CopySource: string | undefined;
	/**
	 * <p>Copies the object if its entity tag (ETag) matches the specified tag.</p>
	 *          <p> If both the <code>x-amz-copy-source-if-match</code> and
	 *             <code>x-amz-copy-source-if-unmodified-since</code> headers are present in the request
	 *          and evaluate as follows, Amazon S3 returns <code>200 OK</code> and copies the data:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-copy-source-if-match</code> condition evaluates to true</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-copy-source-if-unmodified-since</code> condition evaluates to
	 *                false</p>
	 *             </li>
	 *          </ul>
	 * @public
	 */
	CopySourceIfMatch?: string | undefined;
	/**
	 * <p>Copies the object if it has been modified since the specified time.</p>
	 *          <p>If both the <code>x-amz-copy-source-if-none-match</code> and
	 *             <code>x-amz-copy-source-if-modified-since</code> headers are present in the request and
	 *          evaluate as follows, Amazon S3 returns the <code>412 Precondition Failed</code> response
	 *          code:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-copy-source-if-none-match</code> condition evaluates to false</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-copy-source-if-modified-since</code> condition evaluates to
	 *                true</p>
	 *             </li>
	 *          </ul>
	 * @public
	 */
	CopySourceIfModifiedSince?: Date | undefined;
	/**
	 * <p>Copies the object if its entity tag (ETag) is different than the specified ETag.</p>
	 *          <p>If both the <code>x-amz-copy-source-if-none-match</code> and
	 *             <code>x-amz-copy-source-if-modified-since</code> headers are present in the request and
	 *          evaluate as follows, Amazon S3 returns the <code>412 Precondition Failed</code> response
	 *          code:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-copy-source-if-none-match</code> condition evaluates to false</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-copy-source-if-modified-since</code> condition evaluates to
	 *                true</p>
	 *             </li>
	 *          </ul>
	 * @public
	 */
	CopySourceIfNoneMatch?: string | undefined;
	/**
	 * <p>Copies the object if it hasn't been modified since the specified time.</p>
	 *          <p> If both the <code>x-amz-copy-source-if-match</code> and
	 *             <code>x-amz-copy-source-if-unmodified-since</code> headers are present in the request
	 *          and evaluate as follows, Amazon S3 returns <code>200 OK</code> and copies the data:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-copy-source-if-match</code> condition evaluates to true</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-copy-source-if-unmodified-since</code> condition evaluates to
	 *                false</p>
	 *             </li>
	 *          </ul>
	 * @public
	 */
	CopySourceIfUnmodifiedSince?: Date | undefined;
	/**
	 * <p>The date and time at which the object is no longer cacheable.</p>
	 * @public
	 */
	Expires?: Date | undefined;
	/**
	 * <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	GrantFullControl?: string | undefined;
	/**
	 * <p>Allows grantee to read the object data and its metadata.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	GrantRead?: string | undefined;
	/**
	 * <p>Allows grantee to read the object ACL.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	GrantReadACP?: string | undefined;
	/**
	 * <p>Allows grantee to write the ACL for the applicable object.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	GrantWriteACP?: string | undefined;
	/**
	 * <p>The key of the destination object.</p>
	 * @public
	 */
	Key: string | undefined;
	/**
	 * <p>A map of metadata to store with the object in S3.</p>
	 * @public
	 */
	Metadata?: Record<string, string> | undefined;
	/**
	 * <p>Specifies whether the metadata is copied from the source object or replaced with
	 *          metadata that's provided in the request. When copying an object, you can preserve all
	 *          metadata (the default) or specify new metadata. If this header isnâ€™t specified,
	 *             <code>COPY</code> is the default behavior. </p>
	 *          <p>
	 *             <b>General purpose bucket</b> - For general purpose buckets, when you
	 *          grant permissions, you can use the <code>s3:x-amz-metadata-directive</code> condition key
	 *          to enforce certain metadata behavior when objects are uploaded. For more information, see
	 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/amazon-s3-policy-keys.html">Amazon S3
	 *             condition key examples</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>
	 *                <code>x-amz-website-redirect-location</code> is unique to each object and is not
	 *             copied when using the <code>x-amz-metadata-directive</code> header. To copy the value,
	 *             you must specify <code>x-amz-website-redirect-location</code> in the request
	 *             header.</p>
	 *          </note>
	 * @public
	 */
	MetadataDirective?: MetadataDirective | undefined;
	/**
	 * <p>Specifies whether the object tag-set is copied from the source object or replaced with
	 *          the tag-set that's provided in the request.</p>
	 *          <p>The default value is <code>COPY</code>.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> - For directory buckets in a <code>CopyObject</code> operation, only the empty tag-set is supported. Any requests that attempt to write non-empty tags into directory buckets will receive a <code>501 Not Implemented</code> status code.
	 * When the destination bucket is a directory bucket, you will receive a <code>501 Not Implemented</code> response in any of the following situations:</p>
	 *             <ul>
	 *                <li>
	 *                   <p>When you attempt to <code>COPY</code> the tag-set from an S3 source object that has non-empty tags.</p>
	 *                </li>
	 *                <li>
	 *                   <p>When you attempt to <code>REPLACE</code> the tag-set of a source object and set a non-empty value to <code>x-amz-tagging</code>.</p>
	 *                </li>
	 *                <li>
	 *                   <p>When you don't set the <code>x-amz-tagging-directive</code> header and the source object has non-empty tags. This is because the default value of <code>x-amz-tagging-directive</code> is <code>COPY</code>.</p>
	 *                </li>
	 *             </ul>
	 *             <p>Because only the empty tag-set is supported for directory buckets in a <code>CopyObject</code> operation, the following situations are allowed:</p>
	 *             <ul>
	 *                <li>
	 *                   <p>When you attempt to <code>COPY</code> the tag-set from a directory bucket source object that has no tags to a general purpose bucket. It copies an empty tag-set to the destination object.</p>
	 *                </li>
	 *                <li>
	 *                   <p>When you attempt to <code>REPLACE</code> the tag-set of a directory bucket source object and set the <code>x-amz-tagging</code> value of the directory bucket destination object to empty.</p>
	 *                </li>
	 *                <li>
	 *                   <p>When you attempt to <code>REPLACE</code> the tag-set of a general purpose bucket source object that has non-empty tags and set the <code>x-amz-tagging</code> value of the directory bucket destination object to empty.</p>
	 *                </li>
	 *                <li>
	 *                   <p>When you attempt to <code>REPLACE</code> the tag-set of a directory bucket source object and don't set the <code>x-amz-tagging</code> value of the directory bucket destination object. This is because the default value of <code>x-amz-tagging</code> is the empty value.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	TaggingDirective?: TaggingDirective | undefined;
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3. Unrecognized
	 *          or unsupported values wonâ€™t write a destination object and will receive a <code>400 Bad
	 *             Request</code> response. </p>
	 *          <p>Amazon S3 automatically encrypts all new objects that are copied to an S3 bucket. When
	 *          copying an object, if you don't specify encryption information in your copy request, the
	 *          encryption setting of the target object is set to the default encryption configuration of
	 *          the destination bucket. By default, all buckets have a base level of encryption
	 *          configuration that uses server-side encryption with Amazon S3 managed keys (SSE-S3). If the
	 *          destination bucket has a different default encryption configuration, Amazon S3 uses the
	 *          corresponding encryption key to encrypt the target object copy.</p>
	 *          <p>With server-side encryption, Amazon S3 encrypts your data as it writes your data to disks in
	 *          its data centers and decrypts the data when you access it. For more information about
	 *          server-side encryption, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html">Using Server-Side Encryption</a>
	 *          in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>General purpose buckets </b>
	 *          </p>
	 *          <ul>
	 *             <li>
	 *                <p>For general purpose buckets, there are the following supported options for server-side
	 *                encryption: server-side encryption with Key Management Service (KMS) keys (SSE-KMS), dual-layer
	 *                server-side encryption with Amazon Web Services KMS keys (DSSE-KMS), and server-side encryption
	 *                with customer-provided encryption keys (SSE-C). Amazon S3 uses the corresponding
	 *                KMS key, or a customer-provided key to encrypt the target object copy.</p>
	 *             </li>
	 *             <li>
	 *                <p>When you perform a <code>CopyObject</code> operation, if you want to use a
	 *                different type of encryption setting for the target object, you can specify
	 *                appropriate encryption-related headers to encrypt the target object with an Amazon S3
	 *                managed key, a KMS key, or a customer-provided key. If the encryption setting in
	 *                your request is different from the default encryption configuration of the
	 *                destination bucket, the encryption setting in your request takes precedence. </p>
	 *             </li>
	 *          </ul>
	 *          <p>
	 *             <b>Directory buckets </b>
	 *          </p>
	 *          <ul>
	 *             <li>
	 *                <p>For directory buckets, there are only two supported options for server-side encryption: server-side encryption with Amazon S3 managed keys (SSE-S3) (<code>AES256</code>) and server-side encryption with KMS keys (SSE-KMS) (<code>aws:kms</code>). We recommend that the bucket's default encryption uses the desired encryption configuration and you don't override the bucket default encryption in your
	 *             <code>CreateSession</code> requests or <code>PUT</code> object requests. Then, new objects
	 *  are automatically encrypted with the desired encryption settings. For more
	 *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-serv-side-encryption.html">Protecting data with server-side encryption</a> in the <i>Amazon S3 User Guide</i>. For more information about the encryption overriding behaviors in directory buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-specifying-kms-encryption.html">Specifying server-side encryption with KMS for new object uploads</a>.</p>
	 *             </li>
	 *             <li>
	 *                <p>To encrypt new object copies to a directory bucket with SSE-KMS, we recommend you
	 *                specify SSE-KMS as the directory bucket's default encryption configuration with
	 *                a KMS key (specifically, a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer managed key</a>).
	 *                The <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">Amazon Web Services managed key</a> (<code>aws/s3</code>) isn't supported. Your SSE-KMS
	 *                configuration can only support 1 <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer managed key</a> per
	 *                directory bucket for the lifetime of the bucket. After you specify a customer managed key for
	 *                SSE-KMS, you can't override the customer managed key for the bucket's SSE-KMS
	 *                configuration. Then, when you perform a <code>CopyObject</code> operation and want to
	 *                specify server-side encryption settings for new object copies with SSE-KMS in the
	 *                encryption-related request headers, you must ensure the encryption key is the same
	 *                customer managed key that you specified for the directory bucket's default encryption
	 *                configuration.
	 *                </p>
	 *             </li>
	 *          </ul>
	 * @public
	 */
	ServerSideEncryption?: ServerSideEncryption | undefined;
	/**
	 * <p>If the <code>x-amz-storage-class</code> header is not used, the copied object will be
	 *          stored in the <code>STANDARD</code> Storage Class by default. The <code>STANDARD</code>
	 *          storage class provides high durability and high availability. Depending on performance
	 *          needs, you can specify a different Storage Class. </p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>
	 *                      <b>Directory buckets </b> -
	 *                   Directory buckets only support <code>EXPRESS_ONEZONE</code> (the S3 Express One Zone storage class) in Availability Zones and <code>ONEZONE_IA</code> (the S3 One Zone-Infrequent Access storage class) in Dedicated Local Zones.
	 * Unsupported storage class values won't write a destination object and will respond with the HTTP status code <code>400 Bad Request</code>.</p>
	 *                </li>
	 *                <li>
	 *                   <p>
	 *                      <b>Amazon S3 on Outposts </b> - S3 on Outposts only
	 *                   uses the <code>OUTPOSTS</code> Storage Class.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 *          <p>You can use the <code>CopyObject</code> action to change the storage class of an object
	 *          that is already stored in Amazon S3 by using the <code>x-amz-storage-class</code> header. For
	 *          more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 *          <p>Before using an object as a source object for the copy operation, you must restore a
	 *          copy of it if it meets any of the following conditions:</p>
	 *          <ul>
	 *             <li>
	 *                <p>The storage class of the source object is <code>GLACIER</code> or
	 *                   <code>DEEP_ARCHIVE</code>.</p>
	 *             </li>
	 *             <li>
	 *                <p>The storage class of the source object is <code>INTELLIGENT_TIERING</code> and
	 *                it's <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/intelligent-tiering-overview.html#intel-tiering-tier-definition">S3 Intelligent-Tiering access tier</a> is <code>Archive Access</code> or
	 *                   <code>Deep Archive Access</code>.</p>
	 *             </li>
	 *          </ul>
	 *          <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html">RestoreObject</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/CopyingObjectsExamples.html">Copying
	 *             Objects</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	StorageClass?: StorageClass | undefined;
	/**
	 * <p>If the destination bucket is configured as a website, redirects requests for this object
	 *          copy to another object in the same bucket or to an external URL. Amazon S3 stores the value of
	 *          this header in the object metadata. This value is unique to each object and is not copied
	 *          when using the <code>x-amz-metadata-directive</code> header. Instead, you may opt to
	 *          provide this header in combination with the <code>x-amz-metadata-directive</code>
	 *          header.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	WebsiteRedirectLocation?: string | undefined;
	/**
	 * <p>Specifies the algorithm to use when encrypting the object (for example,
	 *             <code>AES256</code>).</p>
	 *          <p>When you perform a <code>CopyObject</code> operation, if you want to use a different
	 *          type of encryption setting for the target object, you can specify appropriate
	 *          encryption-related headers to encrypt the target object with an Amazon S3 managed key, a
	 *          KMS key, or a customer-provided key. If the encryption setting in your request is
	 *          different from the default encryption configuration of the destination bucket, the
	 *          encryption setting in your request takes precedence. </p>
	 *          <note>
	 *             <p>This functionality is not supported when the destination bucket is a directory bucket.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This
	 *          value is used to store the object and then it is discarded. Amazon S3 does not store the
	 *          encryption key. The key must be appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
	 *          <note>
	 *             <p>This functionality is not supported when the destination bucket is a directory bucket.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKey?: string | undefined;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 *          <note>
	 *             <p>This functionality is not supported when the destination bucket is a directory bucket.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>Specifies the KMS key ID (Key ID, Key ARN, or Key Alias) to use for object encryption.
	 *          All GET and PUT requests for an object protected by KMS will fail if they're not made via
	 *          SSL or using SigV4. For information about configuring any of the officially supported Amazon Web Services
	 *          SDKs and Amazon Web Services CLI, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version">Specifying the
	 *             Signature Version in Request Authentication</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Directory buckets</b> -
	 *          To encrypt data using SSE-KMS, it's recommended to specify the
	 * <code>x-amz-server-side-encryption</code> header to <code>aws:kms</code>. Then, the <code>x-amz-server-side-encryption-aws-kms-key-id</code> header implicitly uses
	 * the bucket's default KMS customer managed key ID. If you want to explicitly set the <code>
	 *          x-amz-server-side-encryption-aws-kms-key-id</code> header, it must match the bucket's default customer managed key (using key ID or ARN, not alias). Your SSE-KMS configuration can only support 1 <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer managed key</a> per directory bucket's lifetime.
	 * The <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">Amazon Web Services managed key</a> (<code>aws/s3</code>) isn't supported.
	 *
	 *  Incorrect key specification results in an HTTP <code>400 Bad Request</code> error. </p>
	 * @public
	 */
	SSEKMSKeyId?: string | undefined;
	/**
	 * <p>Specifies the Amazon Web Services KMS Encryption Context as an additional encryption context to use
	 *          for the destination object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.</p>
	 *          <p>
	 *             <b>General purpose buckets</b> - This value must be explicitly
	 *          added to specify encryption context for <code>CopyObject</code> requests if you want an
	 *          additional encryption context for your destination object. The additional encryption
	 *          context of the source object won't be copied to the destination object. For more
	 *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html#encryption-context">Encryption
	 *             context</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Directory buckets</b> - You can optionally provide an explicit encryption context value. The value must match the default encryption context - the bucket Amazon Resource Name (ARN). An additional encryption context value is not supported. </p>
	 * @public
	 */
	SSEKMSEncryptionContext?: string | undefined;
	/**
	 * <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with
	 *          server-side encryption using Key Management Service (KMS) keys (SSE-KMS). If a target object uses
	 *          SSE-KMS, you can enable an S3 Bucket Key for the object.</p>
	 *          <p>Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object
	 *          encryption with SSE-KMS. Specifying this header with a COPY action doesnâ€™t affect
	 *          bucket-level settings for S3 Bucket Key.</p>
	 *          <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html">Amazon S3 Bucket Keys</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> -
	 *             S3 Bucket Keys aren't supported, when you copy SSE-KMS encrypted objects from general purpose buckets
	 * to directory buckets, from directory buckets to general purpose buckets, or between directory buckets, through <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html">CopyObject</a>. In this case, Amazon S3 makes a call to KMS every time a copy request is made for a KMS-encrypted object.</p>
	 *          </note>
	 * @public
	 */
	BucketKeyEnabled?: boolean | undefined;
	/**
	 * <p>Specifies the algorithm to use when decrypting the source object (for example,
	 *             <code>AES256</code>).</p>
	 *          <p>If the source object for the copy is stored in Amazon S3 using SSE-C, you must provide the
	 *          necessary encryption information in your request so that Amazon S3 can decrypt the object for
	 *          copying.</p>
	 *          <note>
	 *             <p>This functionality is not supported when the source object is in a directory bucket.</p>
	 *          </note>
	 * @public
	 */
	CopySourceSSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source
	 *          object. The encryption key provided in this header must be the same one that was used when
	 *          the source object was created.</p>
	 *          <p>If the source object for the copy is stored in Amazon S3 using SSE-C, you must provide the
	 *          necessary encryption information in your request so that Amazon S3 can decrypt the object for
	 *          copying.</p>
	 *          <note>
	 *             <p>This functionality is not supported when the source object is in a directory bucket.</p>
	 *          </note>
	 * @public
	 */
	CopySourceSSECustomerKey?: string | undefined;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 *          <p>If the source object for the copy is stored in Amazon S3 using SSE-C, you must provide the
	 *          necessary encryption information in your request so that Amazon S3 can decrypt the object for
	 *          copying.</p>
	 *          <note>
	 *             <p>This functionality is not supported when the source object is in a directory bucket.</p>
	 *          </note>
	 * @public
	 */
	CopySourceSSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. If either the source or
	 *          destination S3 bucket has Requester Pays enabled, the requester will pay for corresponding
	 *          charges to copy the object. For information about downloading objects from Requester Pays
	 *          buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestPayer?: RequestPayer | undefined;
	/**
	 * <p>The tag-set for the object copy in the destination bucket. This value must be used in
	 *          conjunction with the <code>x-amz-tagging-directive</code> if you choose
	 *             <code>REPLACE</code> for the <code>x-amz-tagging-directive</code>. If you choose
	 *             <code>COPY</code> for the <code>x-amz-tagging-directive</code>, you don't need to set
	 *          the <code>x-amz-tagging</code> header, because the tag-set will be copied from the source
	 *          object directly. The tag-set must be encoded as URL Query parameters.</p>
	 *          <p>The default value is the empty value.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> - For directory buckets in a <code>CopyObject</code> operation, only the empty tag-set is supported. Any requests that attempt to write non-empty tags into directory buckets will receive a <code>501 Not Implemented</code> status code.
	 * When the destination bucket is a directory bucket, you will receive a <code>501 Not Implemented</code> response in any of the following situations:</p>
	 *             <ul>
	 *                <li>
	 *                   <p>When you attempt to <code>COPY</code> the tag-set from an S3 source object that has non-empty tags.</p>
	 *                </li>
	 *                <li>
	 *                   <p>When you attempt to <code>REPLACE</code> the tag-set of a source object and set a non-empty value to <code>x-amz-tagging</code>.</p>
	 *                </li>
	 *                <li>
	 *                   <p>When you don't set the <code>x-amz-tagging-directive</code> header and the source object has non-empty tags. This is because the default value of <code>x-amz-tagging-directive</code> is <code>COPY</code>.</p>
	 *                </li>
	 *             </ul>
	 *             <p>Because only the empty tag-set is supported for directory buckets in a <code>CopyObject</code> operation, the following situations are allowed:</p>
	 *             <ul>
	 *                <li>
	 *                   <p>When you attempt to <code>COPY</code> the tag-set from a directory bucket source object that has no tags to a general purpose bucket. It copies an empty tag-set to the destination object.</p>
	 *                </li>
	 *                <li>
	 *                   <p>When you attempt to <code>REPLACE</code> the tag-set of a directory bucket source object and set the <code>x-amz-tagging</code> value of the directory bucket destination object to empty.</p>
	 *                </li>
	 *                <li>
	 *                   <p>When you attempt to <code>REPLACE</code> the tag-set of a general purpose bucket source object that has non-empty tags and set the <code>x-amz-tagging</code> value of the directory bucket destination object to empty.</p>
	 *                </li>
	 *                <li>
	 *                   <p>When you attempt to <code>REPLACE</code> the tag-set of a directory bucket source object and don't set the <code>x-amz-tagging</code> value of the directory bucket destination object. This is because the default value of <code>x-amz-tagging</code> is the empty value.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	Tagging?: string | undefined;
	/**
	 * <p>The Object Lock mode that you want to apply to the object copy.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockMode?: ObjectLockMode | undefined;
	/**
	 * <p>The date and time when you want the Object Lock of the object copy to expire.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockRetainUntilDate?: Date | undefined;
	/**
	 * <p>Specifies whether you want to apply a legal hold to the object copy.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | undefined;
	/**
	 * <p>The account ID of the expected destination bucket owner. If the account ID that you provide does not match the actual owner of the destination bucket, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 * @public
	 */
	ExpectedBucketOwner?: string | undefined;
	/**
	 * <p>The account ID of the expected source bucket owner. If the account ID that you provide does not match the actual owner of the source bucket, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 * @public
	 */
	ExpectedSourceBucketOwner?: string | undefined;
}
/**
 * <p>Container for all response elements.</p>
 * @public
 */
export interface CopyObjectResult {
	/**
	 * <p>Returns the ETag of the new object. The ETag reflects only changes to the contents of an
	 *          object, not its metadata.</p>
	 * @public
	 */
	ETag?: string | undefined;
	/**
	 * <p>Creation date of the object.</p>
	 * @public
	 */
	LastModified?: Date | undefined;
	/**
	 * <p>The checksum type that is used to calculate the objectâ€™s
	 *          checksum value. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumType?: ChecksumType | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32</code> checksum of the object. This checksum is only present if the object was uploaded
	 *     with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32C</code> checksum of the object. This will only be present if the object was uploaded
	 *     with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32C?: string | undefined;
	/**
	 * <p>The Base64 encoded, 64-bit <code>CRC64NVME</code> checksum of the object. This checksum is present
	 *          if the object being copied was uploaded with the <code>CRC64NVME</code> checksum algorithm, or if the object was uploaded without a
	 *          checksum (and Amazon S3 added the default checksum, <code>CRC64NVME</code>, to the uploaded object). For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC64NVME?: string | undefined;
	/**
	 * <p>The Base64 encoded, 160-bit <code>SHA1</code> digest of the object. This will only be present if the object was uploaded
	 *     with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA1?: string | undefined;
	/**
	 * <p>The Base64 encoded, 256-bit <code>SHA256</code> digest of the object. This will only be present if the object was uploaded
	 *     with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA256?: string | undefined;
}
/**
 * @public
 *
 * The input for {@link CreateMultipartUploadCommand}.
 */
export interface CreateMultipartUploadCommandInput
	extends CreateMultipartUploadRequest {}
/**
 * @public
 *
 * The output of {@link CreateMultipartUploadCommand}.
 */
export interface CreateMultipartUploadCommandOutput
	extends CreateMultipartUploadOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface CreateMultipartUploadOutput {
	/**
	 * <p>If the bucket has a lifecycle rule configured with an action to abort incomplete
	 *          multipart uploads and the prefix in the lifecycle rule matches the object name in the
	 *          request, the response includes this header. The header indicates when the initiated
	 *          multipart upload becomes eligible for an abort operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config">
	 *             Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Configuration</a> in
	 *          the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>The response also includes the <code>x-amz-abort-rule-id</code> header that provides the
	 *          ID of the lifecycle configuration rule that defines the abort action.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	AbortDate?: Date | undefined;
	/**
	 * <p>This header is returned along with the <code>x-amz-abort-date</code> header. It
	 *          identifies the applicable lifecycle configuration rule that defines the action to abort
	 *          incomplete multipart uploads.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	AbortRuleId?: string | undefined;
	/**
	 * <p>The name of the bucket to which the multipart upload was initiated. Does not return the
	 *          access point ARN or access point alias if used.</p>
	 *          <note>
	 *             <p>Access points are not supported by directory buckets.</p>
	 *          </note>
	 * @public
	 */
	Bucket?: string | undefined;
	/**
	 * <p>Object key for which the multipart upload was initiated.</p>
	 * @public
	 */
	Key?: string | undefined;
	/**
	 * <p>ID for the initiated multipart upload.</p>
	 * @public
	 */
	UploadId?: string | undefined;
	/**
	 * <p>The server-side encryption algorithm used when you store this object in Amazon S3 (for
	 *          example, <code>AES256</code>, <code>aws:kms</code>).</p>
	 * @public
	 */
	ServerSideEncryption?: ServerSideEncryption | undefined;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to confirm the encryption algorithm that's used.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide the round-trip message integrity verification
	 *          of the customer-provided encryption key.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>If present, indicates the ID of the KMS key that was used for object encryption.</p>
	 * @public
	 */
	SSEKMSKeyId?: string | undefined;
	/**
	 * <p>If present, indicates the Amazon Web Services KMS Encryption Context to use for object encryption. The value of
	 *          this header is a Base64 encoded string of a UTF-8 encoded JSON, which contains the encryption context as key-value pairs.</p>
	 * @public
	 */
	SSEKMSEncryptionContext?: string | undefined;
	/**
	 * <p>Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption
	 *          with Key Management Service (KMS) keys (SSE-KMS).</p>
	 * @public
	 */
	BucketKeyEnabled?: boolean | undefined;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestCharged?: RequestCharged | undefined;
	/**
	 * <p>The algorithm that was used to create a checksum of the object.</p>
	 * @public
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm | undefined;
	/**
	 * <p> Indicates the checksum type that you want Amazon S3 to use to calculate the objectâ€™s
	 *          checksum value. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity
	 *             in the Amazon S3 User Guide</a>.</p>
	 * @public
	 */
	ChecksumType?: ChecksumType | undefined;
}
/**
 * @public
 */
export interface CreateMultipartUploadRequest {
	/**
	 * <p>The canned ACL to apply to the object. Amazon S3 supports a set of predefined ACLs, known as
	 *             <i>canned ACLs</i>. Each canned ACL has a predefined set of grantees and
	 *          permissions. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned ACL</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 *          <p>By default, all objects are private. Only the owner has full access control. When
	 *          uploading an object, you can grant access permissions to individual Amazon Web Services accounts or to
	 *          predefined groups defined by Amazon S3. These permissions are then added to the access control
	 *          list (ACL) on the new object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html">Using ACLs</a>. One way to grant
	 *          the permissions using the request headers is to specify a canned ACL with the
	 *             <code>x-amz-acl</code> request header.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	ACL?: ObjectCannedACL | undefined;
	/**
	 * <p>The name of the bucket where the multipart upload is initiated and where the object is
	 *          uploaded.</p>
	 *          <p>
	 *             <b>Directory buckets</b> -
	 *          When you use this operation with a directory bucket, you must use virtual-hosted-style requests in the format <code>
	 *                <i>Bucket-name</i>.s3express-<i>zone-id</i>.<i>region-code</i>.amazonaws.com</code>. Path-style requests are not supported.  Directory bucket names must be unique in the chosen Zone (Availability Zone or Local Zone). Bucket names must follow the format <code>
	 *                <i>bucket-base-name</i>--<i>zone-id</i>--x-s3</code> (for example, <code>
	 *                <i>amzn-s3-demo-bucket</i>--<i>usw2-az1</i>--x-s3</code>). For information about bucket naming
	 *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-bucket-naming-rules.html">Directory bucket naming
	 *             rules</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Access points</b> - When you use this action with an access point for general purpose buckets, you must provide the alias of the access point in place of the bucket name or specify the access point ARN. When you use this action with an access point for directory buckets, you must provide the access point name in place of the bucket name. When using the access point ARN, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>Object Lambda access points are not supported by directory buckets.</p>
	 *          </note>
	 *          <p>
	 *             <b>S3 on Outposts</b> - When you use this action with S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the
	 *                      form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts, the destination bucket must be the Outposts access point ARN or the access point alias. For more information about S3 on Outposts, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 * @public
	 */
	Bucket: string | undefined;
	/**
	 * <p>Specifies caching behavior along the request/reply chain.</p>
	 * @public
	 */
	CacheControl?: string | undefined;
	/**
	 * <p>Specifies presentational information for the object.</p>
	 * @public
	 */
	ContentDisposition?: string | undefined;
	/**
	 * <p>Specifies what content encodings have been applied to the object and thus what decoding
	 *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header
	 *          field.</p>
	 *          <note>
	 *             <p>For directory buckets, only the <code>aws-chunked</code> value is supported in this header field.</p>
	 *          </note>
	 * @public
	 */
	ContentEncoding?: string | undefined;
	/**
	 * <p>The language that the content is in.</p>
	 * @public
	 */
	ContentLanguage?: string | undefined;
	/**
	 * <p>A standard MIME type describing the format of the object data.</p>
	 * @public
	 */
	ContentType?: string | undefined;
	/**
	 * <p>The date and time at which the object is no longer cacheable.</p>
	 * @public
	 */
	Expires?: Date | undefined;
	/**
	 * <p>Specify access permissions explicitly to give the grantee READ, READ_ACP, and WRITE_ACP
	 *          permissions on the object.</p>
	 *          <p>By default, all objects are private. Only the owner has full access control. When
	 *          uploading an object, you can use this header to explicitly grant access permissions to
	 *          specific Amazon Web Services accounts or groups. This header maps to specific permissions that Amazon S3
	 *          supports in an ACL. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a>
	 *          in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>You specify each grantee as a type=value pair, where the type is one of the
	 *          following:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>id</code> â€“ if the value specified is the canonical user ID of an
	 *                Amazon Web Services account</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>uri</code> â€“ if you are granting permissions to a predefined group</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>emailAddress</code> â€“ if the value specified is the email address of an
	 *                Amazon Web Services account</p>
	 *                <note>
	 *                   <p>Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: </p>
	 *                   <ul>
	 *                      <li>
	 *                         <p>US East (N. Virginia)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>US West (N. California)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p> US West (Oregon)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p> Asia Pacific (Singapore)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Asia Pacific (Sydney)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Asia Pacific (Tokyo)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Europe (Ireland)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>South America (SÃ£o Paulo)</p>
	 *                      </li>
	 *                   </ul>
	 *                   <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p>
	 *                </note>
	 *             </li>
	 *          </ul>
	 *          <p>For example, the following <code>x-amz-grant-read</code> header grants the Amazon Web Services accounts identified by account IDs permissions to read object data and its metadata:</p>
	 *          <p>
	 *             <code>x-amz-grant-read: id="11112222333", id="444455556666" </code>
	 *          </p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	GrantFullControl?: string | undefined;
	/**
	 * <p>Specify access permissions explicitly to allow grantee to read the object data and its
	 *          metadata.</p>
	 *          <p>By default, all objects are private. Only the owner has full access control. When
	 *          uploading an object, you can use this header to explicitly grant access permissions to
	 *          specific Amazon Web Services accounts or groups. This header maps to specific permissions that Amazon S3
	 *          supports in an ACL. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a>
	 *          in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>You specify each grantee as a type=value pair, where the type is one of the
	 *          following:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>id</code> â€“ if the value specified is the canonical user ID of an
	 *                Amazon Web Services account</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>uri</code> â€“ if you are granting permissions to a predefined group</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>emailAddress</code> â€“ if the value specified is the email address of an
	 *                Amazon Web Services account</p>
	 *                <note>
	 *                   <p>Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: </p>
	 *                   <ul>
	 *                      <li>
	 *                         <p>US East (N. Virginia)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>US West (N. California)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p> US West (Oregon)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p> Asia Pacific (Singapore)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Asia Pacific (Sydney)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Asia Pacific (Tokyo)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Europe (Ireland)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>South America (SÃ£o Paulo)</p>
	 *                      </li>
	 *                   </ul>
	 *                   <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p>
	 *                </note>
	 *             </li>
	 *          </ul>
	 *          <p>For example, the following <code>x-amz-grant-read</code> header grants the Amazon Web Services accounts identified by account IDs permissions to read object data and its metadata:</p>
	 *          <p>
	 *             <code>x-amz-grant-read: id="11112222333", id="444455556666" </code>
	 *          </p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	GrantRead?: string | undefined;
	/**
	 * <p>Specify access permissions explicitly to allows grantee to read the object ACL.</p>
	 *          <p>By default, all objects are private. Only the owner has full access control. When
	 *          uploading an object, you can use this header to explicitly grant access permissions to
	 *          specific Amazon Web Services accounts or groups. This header maps to specific permissions that Amazon S3
	 *          supports in an ACL. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a>
	 *          in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>You specify each grantee as a type=value pair, where the type is one of the
	 *          following:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>id</code> â€“ if the value specified is the canonical user ID of an
	 *                Amazon Web Services account</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>uri</code> â€“ if you are granting permissions to a predefined group</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>emailAddress</code> â€“ if the value specified is the email address of an
	 *                Amazon Web Services account</p>
	 *                <note>
	 *                   <p>Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: </p>
	 *                   <ul>
	 *                      <li>
	 *                         <p>US East (N. Virginia)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>US West (N. California)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p> US West (Oregon)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p> Asia Pacific (Singapore)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Asia Pacific (Sydney)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Asia Pacific (Tokyo)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Europe (Ireland)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>South America (SÃ£o Paulo)</p>
	 *                      </li>
	 *                   </ul>
	 *                   <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p>
	 *                </note>
	 *             </li>
	 *          </ul>
	 *          <p>For example, the following <code>x-amz-grant-read</code> header grants the Amazon Web Services accounts identified by account IDs permissions to read object data and its metadata:</p>
	 *          <p>
	 *             <code>x-amz-grant-read: id="11112222333", id="444455556666" </code>
	 *          </p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	GrantReadACP?: string | undefined;
	/**
	 * <p>Specify access permissions explicitly to allows grantee to allow grantee to write the
	 *          ACL for the applicable object.</p>
	 *          <p>By default, all objects are private. Only the owner has full access control. When
	 *          uploading an object, you can use this header to explicitly grant access permissions to
	 *          specific Amazon Web Services accounts or groups. This header maps to specific permissions that Amazon S3
	 *          supports in an ACL. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a>
	 *          in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>You specify each grantee as a type=value pair, where the type is one of the
	 *          following:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>id</code> â€“ if the value specified is the canonical user ID of an
	 *                Amazon Web Services account</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>uri</code> â€“ if you are granting permissions to a predefined group</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>emailAddress</code> â€“ if the value specified is the email address of an
	 *                Amazon Web Services account</p>
	 *                <note>
	 *                   <p>Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: </p>
	 *                   <ul>
	 *                      <li>
	 *                         <p>US East (N. Virginia)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>US West (N. California)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p> US West (Oregon)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p> Asia Pacific (Singapore)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Asia Pacific (Sydney)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Asia Pacific (Tokyo)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>Europe (Ireland)</p>
	 *                      </li>
	 *                      <li>
	 *                         <p>South America (SÃ£o Paulo)</p>
	 *                      </li>
	 *                   </ul>
	 *                   <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p>
	 *                </note>
	 *             </li>
	 *          </ul>
	 *          <p>For example, the following <code>x-amz-grant-read</code> header grants the Amazon Web Services accounts identified by account IDs permissions to read object data and its metadata:</p>
	 *          <p>
	 *             <code>x-amz-grant-read: id="11112222333", id="444455556666" </code>
	 *          </p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	GrantWriteACP?: string | undefined;
	/**
	 * <p>Object key for which the multipart upload is to be initiated.</p>
	 * @public
	 */
	Key: string | undefined;
	/**
	 * <p>A map of metadata to store with the object in S3.</p>
	 * @public
	 */
	Metadata?: Record<string, string> | undefined;
	/**
	 * <p>The server-side encryption algorithm used when you store this object in Amazon S3 (for
	 *          example, <code>AES256</code>, <code>aws:kms</code>).</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <b>Directory buckets </b> -
	 *                For directory buckets, there are only two supported options for server-side encryption: server-side encryption with Amazon S3 managed keys (SSE-S3) (<code>AES256</code>) and server-side encryption with KMS keys (SSE-KMS) (<code>aws:kms</code>). We recommend that the bucket's default encryption uses the desired encryption configuration and you don't override the bucket default encryption in your
	 *             <code>CreateSession</code> requests or <code>PUT</code> object requests. Then, new objects
	 *  are automatically encrypted with the desired encryption settings. For more
	 *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-serv-side-encryption.html">Protecting data with server-side encryption</a> in the <i>Amazon S3 User Guide</i>. For more information about the encryption overriding behaviors in directory buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-specifying-kms-encryption.html">Specifying server-side encryption with KMS for new object uploads</a>. </p>
	 *                <p>In the Zonal endpoint API calls (except <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html">CopyObject</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html">UploadPartCopy</a>) using the REST API, the encryption request headers must match the encryption settings that are specified in the <code>CreateSession</code> request.
	 *                             You can't override the values of the encryption settings (<code>x-amz-server-side-encryption</code>, <code>x-amz-server-side-encryption-aws-kms-key-id</code>, <code>x-amz-server-side-encryption-context</code>, and <code>x-amz-server-side-encryption-bucket-key-enabled</code>) that are specified in the <code>CreateSession</code> request.
	 *                             You don't need to explicitly specify these encryption settings values in Zonal endpoint API calls, and
	 *                             Amazon S3 will use the encryption settings values from the <code>CreateSession</code> request to protect new objects in the directory bucket.
	 *                            </p>
	 *                <note>
	 *                   <p>When you use the CLI or the Amazon Web Services SDKs, for <code>CreateSession</code>, the session token refreshes automatically to avoid service interruptions when a session expires. The CLI or the Amazon Web Services SDKs use the bucket's default encryption configuration for the
	 *                             <code>CreateSession</code> request. It's not supported to override the encryption settings values in the <code>CreateSession</code> request.
	 *                             So in the Zonal endpoint API calls (except <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html">CopyObject</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html">UploadPartCopy</a>),
	 *           the encryption request headers must match the default encryption configuration of the directory bucket.
	 *
	 * </p>
	 *                </note>
	 *             </li>
	 *          </ul>
	 * @public
	 */
	ServerSideEncryption?: ServerSideEncryption | undefined;
	/**
	 * <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The
	 *          STANDARD storage class provides high durability and high availability. Depending on
	 *          performance needs, you can specify a different Storage Class. For more information, see
	 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage
	 *             Classes</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>Directory buckets only support <code>EXPRESS_ONEZONE</code> (the S3 Express One Zone storage class) in Availability Zones and <code>ONEZONE_IA</code> (the S3 One Zone-Infrequent Access storage class) in Dedicated Local Zones.</p>
	 *                </li>
	 *                <li>
	 *                   <p>Amazon S3 on Outposts only uses the OUTPOSTS Storage Class.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	StorageClass?: StorageClass | undefined;
	/**
	 * <p>If the bucket is configured as a website, redirects requests for this object to another
	 *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
	 *          the object metadata.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	WebsiteRedirectLocation?: string | undefined;
	/**
	 * <p>Specifies the algorithm to use when encrypting the object (for example, AES256).</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This
	 *          value is used to store the object and then it is discarded; Amazon S3 does not store the
	 *          encryption key. The key must be appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKey?: string | undefined;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the customer-provided encryption key according to
	 *          RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption
	 *          key was transmitted without error.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>Specifies the KMS key ID (Key ID, Key ARN, or Key Alias) to use for object encryption. If the KMS key doesn't exist in the same
	 *          account that's issuing the command, you must use the full Key ARN not the Key ID.</p>
	 *          <p>
	 *             <b>General purpose buckets</b> - If you specify <code>x-amz-server-side-encryption</code> with <code>aws:kms</code> or <code>aws:kms:dsse</code>, this header specifies the ID (Key ID, Key ARN, or Key Alias) of the KMS
	 *          key to use. If you specify
	 *          <code>x-amz-server-side-encryption:aws:kms</code> or
	 *          <code>x-amz-server-side-encryption:aws:kms:dsse</code>, but do not provide <code>x-amz-server-side-encryption-aws-kms-key-id</code>, Amazon S3 uses the Amazon Web Services managed key
	 *          (<code>aws/s3</code>) to protect the data.</p>
	 *          <p>
	 *             <b>Directory buckets</b> - To encrypt data using SSE-KMS, it's recommended to specify the
	 * <code>x-amz-server-side-encryption</code> header to <code>aws:kms</code>. Then, the <code>x-amz-server-side-encryption-aws-kms-key-id</code> header implicitly uses
	 * the bucket's default KMS customer managed key ID. If you want to explicitly set the <code>
	 *          x-amz-server-side-encryption-aws-kms-key-id</code> header, it must match the bucket's default customer managed key (using key ID or ARN, not alias). Your SSE-KMS configuration can only support 1 <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer managed key</a> per directory bucket's lifetime.
	 * The <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">Amazon Web Services managed key</a> (<code>aws/s3</code>) isn't supported.
	 *
	 *  Incorrect key specification results in an HTTP <code>400 Bad Request</code> error. </p>
	 * @public
	 */
	SSEKMSKeyId?: string | undefined;
	/**
	 * <p>Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of
	 *          this header is a Base64 encoded string of a UTF-8 encoded JSON, which contains the encryption context as key-value pairs.</p>
	 *          <p>
	 *             <b>Directory buckets</b> - You can optionally provide an explicit encryption context value. The value must match the default encryption context - the bucket Amazon Resource Name (ARN). An additional encryption context value is not supported. </p>
	 * @public
	 */
	SSEKMSEncryptionContext?: string | undefined;
	/**
	 * <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with
	 *          server-side encryption using Key Management Service (KMS) keys (SSE-KMS).</p>
	 *          <p>
	 *             <b>General purpose buckets</b> - Setting this header to
	 *             <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with
	 *          SSE-KMS. Also, specifying this header with a PUT action doesn't affect bucket-level settings for S3
	 *          Bucket Key.</p>
	 *          <p>
	 *             <b>Directory buckets</b> - S3 Bucket Keys are always enabled for <code>GET</code> and <code>PUT</code> operations in a directory bucket and canâ€™t be disabled. S3 Bucket Keys aren't supported, when you copy SSE-KMS encrypted objects from general purpose buckets
	 * to directory buckets, from directory buckets to general purpose buckets, or between directory buckets, through <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html">CopyObject</a>, <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html">UploadPartCopy</a>, <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-buckets-objects-Batch-Ops">the Copy operation in Batch Operations</a>, or
	 *                             <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-import-job">the import jobs</a>. In this case, Amazon S3 makes a call to KMS every time a copy request is made for a KMS-encrypted object.</p>
	 * @public
	 */
	BucketKeyEnabled?: boolean | undefined;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. If either the source or
	 *          destination S3 bucket has Requester Pays enabled, the requester will pay for corresponding
	 *          charges to copy the object. For information about downloading objects from Requester Pays
	 *          buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestPayer?: RequestPayer | undefined;
	/**
	 * <p>The tag-set for the object. The tag-set must be encoded as URL Query parameters.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	Tagging?: string | undefined;
	/**
	 * <p>Specifies the Object Lock mode that you want to apply to the uploaded object.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockMode?: ObjectLockMode | undefined;
	/**
	 * <p>Specifies the date and time when you want the Object Lock to expire.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockRetainUntilDate?: Date | undefined;
	/**
	 * <p>Specifies whether you want to apply a legal hold to the uploaded object.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | undefined;
	/**
	 * <p>The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 * @public
	 */
	ExpectedBucketOwner?: string | undefined;
	/**
	 * <p>Indicates the algorithm that you want Amazon S3 to use to create the checksum for the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in
	 *     the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm | undefined;
	/**
	 * <p>Indicates the checksum type that you want Amazon S3 to use to calculate the objectâ€™s
	 *          checksum value. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity
	 *             in the Amazon S3 User Guide</a>.</p>
	 * @public
	 */
	ChecksumType?: ChecksumType | undefined;
}
/**
 * @public
 *
 * The input for {@link DeleteObjectCommand}.
 */
export interface DeleteObjectCommandInput extends DeleteObjectRequest {}
/**
 * @public
 *
 * The output of {@link DeleteObjectCommand}.
 */
export interface DeleteObjectCommandOutput
	extends DeleteObjectOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface DeleteObjectOutput {
	/**
	 * <p>Indicates whether the specified object version that was permanently deleted was (true)
	 *          or was not (false) a delete marker before deletion. In a simple DELETE, this header
	 *          indicates whether (true) or not (false) the current version of the object is a delete
	 *          marker. To learn more about delete markers, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/DeleteMarker.html">Working with delete markers</a>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	DeleteMarker?: boolean | undefined;
	/**
	 * <p>Returns the version ID of the delete marker created as a result of the DELETE
	 *          operation.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	VersionId?: string | undefined;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestCharged?: RequestCharged | undefined;
}
/**
 * @public
 */
export interface DeleteObjectRequest {
	/**
	 * <p>The bucket name of the bucket containing the object. </p>
	 *          <p>
	 *             <b>Directory buckets</b> -
	 *          When you use this operation with a directory bucket, you must use virtual-hosted-style requests in the format <code>
	 *                <i>Bucket-name</i>.s3express-<i>zone-id</i>.<i>region-code</i>.amazonaws.com</code>. Path-style requests are not supported.  Directory bucket names must be unique in the chosen Zone (Availability Zone or Local Zone). Bucket names must follow the format <code>
	 *                <i>bucket-base-name</i>--<i>zone-id</i>--x-s3</code> (for example, <code>
	 *                <i>amzn-s3-demo-bucket</i>--<i>usw2-az1</i>--x-s3</code>). For information about bucket naming
	 *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-bucket-naming-rules.html">Directory bucket naming
	 *             rules</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Access points</b> - When you use this action with an access point for general purpose buckets, you must provide the alias of the access point in place of the bucket name or specify the access point ARN. When you use this action with an access point for directory buckets, you must provide the access point name in place of the bucket name. When using the access point ARN, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>Object Lambda access points are not supported by directory buckets.</p>
	 *          </note>
	 *          <p>
	 *             <b>S3 on Outposts</b> - When you use this action with S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the
	 *                      form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts, the destination bucket must be the Outposts access point ARN or the access point alias. For more information about S3 on Outposts, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 * @public
	 */
	Bucket: string | undefined;
	/**
	 * <p>Key name of the object to delete.</p>
	 * @public
	 */
	Key: string | undefined;
	/**
	 * <p>The concatenation of the authentication device's serial number, a space, and the value
	 *          that is displayed on your authentication device. Required to permanently delete a versioned
	 *          object if versioning is configured with MFA delete enabled.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	MFA?: string | undefined;
	/**
	 * <p>Version ID used to reference a specific version of the object.</p>
	 *          <note>
	 *             <p>For directory buckets in this API operation, only the <code>null</code> value of the version ID is supported.</p>
	 *          </note>
	 * @public
	 */
	VersionId?: string | undefined;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. If either the source or
	 *          destination S3 bucket has Requester Pays enabled, the requester will pay for corresponding
	 *          charges to copy the object. For information about downloading objects from Requester Pays
	 *          buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestPayer?: RequestPayer | undefined;
	/**
	 * <p>Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process
	 *          this operation. To use this header, you must have the
	 *             <code>s3:BypassGovernanceRetention</code> permission.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	BypassGovernanceRetention?: boolean | undefined;
	/**
	 * <p>The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 * @public
	 */
	ExpectedBucketOwner?: string | undefined;
	/**
	 * <p>The <code>If-Match</code> header field makes the request method conditional on ETags. If the ETag value does not match, the operation returns
	 *          a <code>412 Precondition Failed</code> error. If the ETag matches or if the object doesn't exist, the operation will return a <code>204 Success (No
	 *          Content) response</code>.</p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p>
	 *          <note>
	 *             <p>This functionality is only supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	IfMatch?: string | undefined;
	/**
	 * <p>If present, the object is deleted only if its modification times matches the provided
	 *             <code>Timestamp</code>. If the <code>Timestamp</code> values do not match, the operation
	 *          returns a <code>412 Precondition Failed</code> error. If the <code>Timestamp</code> matches
	 *          or if the object doesnâ€™t exist, the operation returns a <code>204 Success (No
	 *             Content)</code> response.</p>
	 *          <note>
	 *             <p>This functionality is only supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	IfMatchLastModifiedTime?: Date | undefined;
	/**
	 * <p>If present, the object is deleted only if its size matches the provided size in bytes. If the <code>Size</code> value does not match, the operation returns a <code>412 Precondition Failed</code> error. If the <code>Size</code> matches or if the object doesnâ€™t exist,
	 *          the operation returns a <code>204 Success (No Content)</code> response.</p>
	 *          <note>
	 *             <p>This functionality is only supported for directory buckets.</p>
	 *          </note>
	 *          <important>
	 *             <p>You can use the <code>If-Match</code>, <code>x-amz-if-match-last-modified-time</code> and <code>x-amz-if-match-size</code>
	 *          conditional headers in conjunction with each-other or individually.</p>
	 *          </important>
	 * @public
	 */
	IfMatchSize?: number | undefined;
}
/**
 * @public
 *
 * The input for {@link GetObjectCommand}.
 */
export interface GetObjectCommandInput extends GetObjectRequest {}
/**
 * @public
 *
 * The output of {@link GetObjectCommand}.
 */
export interface GetObjectCommandOutput
	extends Omit<GetObjectOutput, 'Body'>,
		__MetadataBearer {
	Body: CompatibleHttpResponse['body'];
}
/**
 * @public
 */
export interface GetObjectOutput {
	/**
	 * <p>Object data.</p>
	 * @public
	 */
	Body?: CompatibleHttpResponse['body'];
	/**
	 * <p>Indicates whether the object retrieved was (true) or was not (false) a Delete Marker. If
	 *          false, this response header does not appear in the response.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>If the current version of the object is a delete marker, Amazon S3 behaves as if the
	 *                   object was deleted and includes <code>x-amz-delete-marker: true</code> in the
	 *                   response.</p>
	 *                </li>
	 *                <li>
	 *                   <p>If the specified version in the request is a delete marker, the response
	 *                   returns a <code>405 Method Not Allowed</code> error and the <code>Last-Modified:
	 *                      timestamp</code> response header.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	DeleteMarker?: boolean | undefined;
	/**
	 * <p>Indicates that a range of bytes was specified in the request.</p>
	 * @public
	 */
	AcceptRanges?: string | undefined;
	/**
	 * <p>If the object expiration is configured (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">
	 *                <code>PutBucketLifecycleConfiguration</code>
	 *             </a>), the response includes this
	 *          header. It includes the <code>expiry-date</code> and <code>rule-id</code> key-value pairs
	 *          providing object expiration information. The value of the <code>rule-id</code> is
	 *          URL-encoded.</p>
	 *          <note>
	 *             <p>Object expiration information is not returned in directory buckets and this header returns the value "<code>NotImplemented</code>" in all responses for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	Expiration?: string | undefined;
	/**
	 * <p>Provides information about object restoration action and expiration time of the restored
	 *          object copy.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.
	 *             Directory buckets only support <code>EXPRESS_ONEZONE</code> (the S3 Express One Zone storage class) in Availability Zones and <code>ONEZONE_IA</code> (the S3 One Zone-Infrequent Access storage class) in Dedicated Local Zones.</p>
	 *          </note>
	 * @public
	 */
	Restore?: string | undefined;
	/**
	 * <p>Date and time when the object was last modified.</p>
	 *          <p>
	 *             <b>General purpose buckets </b> - When you specify a
	 *             <code>versionId</code> of the object in your request, if the specified version in the
	 *          request is a delete marker, the response returns a <code>405 Method Not Allowed</code>
	 *          error and the <code>Last-Modified: timestamp</code> response header.</p>
	 * @public
	 */
	LastModified?: Date | undefined;
	/**
	 * <p>Size of the body in bytes.</p>
	 * @public
	 */
	ContentLength?: number | undefined;
	/**
	 * <p>An entity tag (ETag) is an opaque identifier assigned by a web server to a specific
	 *          version of a resource found at a URL.</p>
	 * @public
	 */
	ETag?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32</code> checksum of the object. This checksum is only present if the object was uploaded
	 *     with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32C</code> checksum of the object. This will only be present if the object was uploaded
	 *     with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32C?: string | undefined;
	/**
	 * <p>The Base64 encoded, 64-bit <code>CRC64NVME</code> checksum of the object. For more
	 *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity
	 *             in the Amazon S3 User Guide</a>.</p>
	 * @public
	 */
	ChecksumCRC64NVME?: string | undefined;
	/**
	 * <p>The Base64 encoded, 160-bit <code>SHA1</code> digest of the object. This will only be present if the object was uploaded
	 *     with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA1?: string | undefined;
	/**
	 * <p>The Base64 encoded, 256-bit <code>SHA256</code> digest of the object. This will only be present if the object was uploaded
	 *     with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA256?: string | undefined;
	/**
	 * <p>The checksum type, which determines how part-level checksums are combined to create an
	 *          object-level checksum for multipart objects. You can use this header response to verify
	 *          that the checksum type that is received is the same checksum type that was specified in the
	 *             <code>CreateMultipartUpload</code> request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumType?: ChecksumType | undefined;
	/**
	 * <p>This is set to the number of metadata entries not returned in the headers that are
	 *          prefixed with <code>x-amz-meta-</code>. This can happen if you create metadata using an API
	 *          like SOAP that supports more flexible metadata than the REST API. For example, using SOAP,
	 *          you can create metadata whose values are not legal HTTP headers.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	MissingMeta?: number | undefined;
	/**
	 * <p>Version ID of the object.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	VersionId?: string | undefined;
	/**
	 * <p>Specifies caching behavior along the request/reply chain.</p>
	 * @public
	 */
	CacheControl?: string | undefined;
	/**
	 * <p>Specifies presentational information for the object.</p>
	 * @public
	 */
	ContentDisposition?: string | undefined;
	/**
	 * <p>Indicates what content encodings have been applied to the object and thus what decoding
	 *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header
	 *          field.</p>
	 * @public
	 */
	ContentEncoding?: string | undefined;
	/**
	 * <p>The language the content is in.</p>
	 * @public
	 */
	ContentLanguage?: string | undefined;
	/**
	 * <p>The portion of the object returned in the response.</p>
	 * @public
	 */
	ContentRange?: string | undefined;
	/**
	 * <p>A standard MIME type describing the format of the object data.</p>
	 * @public
	 */
	ContentType?: string | undefined;
	/**
	 * Deprecated in favor of ExpiresString.
	 *
	 * @deprecated
	 * @public
	 */
	Expires?: Date | undefined;
	/**
	 * <p>The date and time at which the object is no longer cacheable.</p>
	 * @public
	 */
	ExpiresString?: string | undefined;
	/**
	 * <p>If the bucket is configured as a website, redirects requests for this object to another
	 *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
	 *          the object metadata.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	WebsiteRedirectLocation?: string | undefined;
	/**
	 * <p>The server-side encryption algorithm used when you store this object in Amazon S3.</p>
	 * @public
	 */
	ServerSideEncryption?: ServerSideEncryption | undefined;
	/**
	 * <p>A map of metadata to store with the object in S3.</p>
	 * @public
	 */
	Metadata?: Record<string, string> | undefined;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to confirm the encryption algorithm that's used.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide the round-trip message integrity verification
	 *          of the customer-provided encryption key.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>If present, indicates the ID of the KMS key that was used for object encryption.</p>
	 * @public
	 */
	SSEKMSKeyId?: string | undefined;
	/**
	 * <p>Indicates whether the object uses an S3 Bucket Key for server-side encryption with
	 *          Key Management Service (KMS) keys (SSE-KMS).</p>
	 * @public
	 */
	BucketKeyEnabled?: boolean | undefined;
	/**
	 * <p>Provides storage class information of the object. Amazon S3 returns this header for all
	 *          objects except for S3 Standard storage class objects.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets </b> -
	 *             Directory buckets only support <code>EXPRESS_ONEZONE</code> (the S3 Express One Zone storage class) in Availability Zones and <code>ONEZONE_IA</code> (the S3 One Zone-Infrequent Access storage class) in Dedicated Local Zones.</p>
	 *          </note>
	 * @public
	 */
	StorageClass?: StorageClass | undefined;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestCharged?: RequestCharged | undefined;
	/**
	 * <p>Amazon S3 can return this if your request involves a bucket that is either a source or
	 *          destination in a replication rule.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ReplicationStatus?: ReplicationStatus | undefined;
	/**
	 * <p>The count of parts this object has. This value is only returned if you specify
	 *             <code>partNumber</code> in your request and the object was uploaded as a multipart
	 *          upload.</p>
	 * @public
	 */
	PartsCount?: number | undefined;
	/**
	 * <p>The number of tags, if any, on the object, when you have the relevant permission to read
	 *          object tags.</p>
	 *          <p>You can use <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html">GetObjectTagging</a> to retrieve
	 *          the tag set associated with an object.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	TagCount?: number | undefined;
	/**
	 * <p>The Object Lock mode that's currently in place for this object.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockMode?: ObjectLockMode | undefined;
	/**
	 * <p>The date and time when this object's Object Lock will expire.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockRetainUntilDate?: Date | undefined;
	/**
	 * <p>Indicates whether this object has an active legal hold. This field is only returned if
	 *          you have permission to view an object's legal hold status. </p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | undefined;
}
/**
 * @public
 */
export interface GetObjectRequest {
	/**
	 * <p>The bucket name containing the object. </p>
	 *          <p>
	 *             <b>Directory buckets</b> -
	 *          When you use this operation with a directory bucket, you must use virtual-hosted-style requests in the format <code>
	 *                <i>Bucket-name</i>.s3express-<i>zone-id</i>.<i>region-code</i>.amazonaws.com</code>. Path-style requests are not supported.  Directory bucket names must be unique in the chosen Zone (Availability Zone or Local Zone). Bucket names must follow the format <code>
	 *                <i>bucket-base-name</i>--<i>zone-id</i>--x-s3</code> (for example, <code>
	 *                <i>amzn-s3-demo-bucket</i>--<i>usw2-az1</i>--x-s3</code>). For information about bucket naming
	 *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-bucket-naming-rules.html">Directory bucket naming
	 *             rules</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Access points</b> - When you use this action with an access point for general purpose buckets, you must provide the alias of the access point in place of the bucket name or specify the access point ARN. When you use this action with an access point for directory buckets, you must provide the access point name in place of the bucket name. When using the access point ARN, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Object Lambda access points</b> - When you use this action with an Object Lambda access point, you must direct requests to the Object Lambda access point hostname. The Object Lambda access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-object-lambda.<i>Region</i>.amazonaws.com.</p>
	 *          <note>
	 *             <p>Object Lambda access points are not supported by directory buckets.</p>
	 *          </note>
	 *          <p>
	 *             <b>S3 on Outposts</b> - When you use this action with S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the
	 *                      form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts, the destination bucket must be the Outposts access point ARN or the access point alias. For more information about S3 on Outposts, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 * @public
	 */
	Bucket: string | undefined;
	/**
	 * <p>Return the object only if its entity tag (ETag) is the same as the one specified in this
	 *          header; otherwise, return a <code>412 Precondition Failed</code> error.</p>
	 *          <p>If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code> headers are
	 *          present in the request as follows: <code>If-Match</code> condition evaluates to
	 *             <code>true</code>, and; <code>If-Unmodified-Since</code> condition evaluates to
	 *             <code>false</code>; then, S3 returns <code>200 OK</code> and the data requested. </p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p>
	 * @public
	 */
	IfMatch?: string | undefined;
	/**
	 * <p>Return the object only if it has been modified since the specified time; otherwise,
	 *          return a <code>304 Not Modified</code> error.</p>
	 *          <p>If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code> headers are
	 *          present in the request as follows:<code> If-None-Match</code> condition evaluates to
	 *             <code>false</code>, and; <code>If-Modified-Since</code> condition evaluates to
	 *             <code>true</code>; then, S3 returns <code>304 Not Modified</code> status code.</p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p>
	 * @public
	 */
	IfModifiedSince?: Date | undefined;
	/**
	 * <p>Return the object only if its entity tag (ETag) is different from the one specified in
	 *          this header; otherwise, return a <code>304 Not Modified</code> error.</p>
	 *          <p>If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code> headers are
	 *          present in the request as follows:<code> If-None-Match</code> condition evaluates to
	 *             <code>false</code>, and; <code>If-Modified-Since</code> condition evaluates to
	 *             <code>true</code>; then, S3 returns <code>304 Not Modified</code> HTTP status
	 *          code.</p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p>
	 * @public
	 */
	IfNoneMatch?: string | undefined;
	/**
	 * <p>Return the object only if it has not been modified since the specified time; otherwise,
	 *          return a <code>412 Precondition Failed</code> error.</p>
	 *          <p>If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code> headers are
	 *          present in the request as follows: <code>If-Match</code> condition evaluates to
	 *             <code>true</code>, and; <code>If-Unmodified-Since</code> condition evaluates to
	 *             <code>false</code>; then, S3 returns <code>200 OK</code> and the data requested. </p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p>
	 * @public
	 */
	IfUnmodifiedSince?: Date | undefined;
	/**
	 * <p>Key of the object to get.</p>
	 * @public
	 */
	Key: string | undefined;
	/**
	 * <p>Downloads the specified byte range of an object. For more information about the HTTP
	 *          Range header, see <a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-range">https://www.rfc-editor.org/rfc/rfc9110.html#name-range</a>.</p>
	 *          <note>
	 *             <p>Amazon S3 doesn't support retrieving multiple ranges of data per <code>GET</code>
	 *             request.</p>
	 *          </note>
	 * @public
	 */
	Range?: string | undefined;
	/**
	 * <p>Sets the <code>Cache-Control</code> header of the response.</p>
	 * @public
	 */
	ResponseCacheControl?: string | undefined;
	/**
	 * <p>Sets the <code>Content-Disposition</code> header of the response.</p>
	 * @public
	 */
	ResponseContentDisposition?: string | undefined;
	/**
	 * <p>Sets the <code>Content-Encoding</code> header of the response.</p>
	 * @public
	 */
	ResponseContentEncoding?: string | undefined;
	/**
	 * <p>Sets the <code>Content-Language</code> header of the response.</p>
	 * @public
	 */
	ResponseContentLanguage?: string | undefined;
	/**
	 * <p>Sets the <code>Content-Type</code> header of the response.</p>
	 * @public
	 */
	ResponseContentType?: string | undefined;
	/**
	 * <p>Sets the <code>Expires</code> header of the response.</p>
	 * @public
	 */
	ResponseExpires?: Date | undefined;
	/**
	 * <p>Version ID used to reference a specific version of the object.</p>
	 *          <p>By default, the <code>GetObject</code> operation returns the current version of an
	 *          object. To return a different version, use the <code>versionId</code> subresource.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>If you include a <code>versionId</code> in your request header, you must have
	 *                   the <code>s3:GetObjectVersion</code> permission to access a specific version of an
	 *                   object. The <code>s3:GetObject</code> permission is not required in this
	 *                   scenario.</p>
	 *                </li>
	 *                <li>
	 *                   <p>If you request the current version of an object without a specific
	 *                      <code>versionId</code> in the request header, only the
	 *                      <code>s3:GetObject</code> permission is required. The
	 *                      <code>s3:GetObjectVersion</code> permission is not required in this
	 *                   scenario.</p>
	 *                </li>
	 *                <li>
	 *                   <p>
	 *                      <b>Directory buckets</b> -
	 *                   S3 Versioning isn't enabled and supported for directory buckets. For this API operation, only the <code>null</code> value of the version ID is supported by directory buckets. You can only specify <code>null</code> to the
	 *                      <code>versionId</code> query parameter in the request.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 *          <p>For more information about versioning, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html">PutBucketVersioning</a>.</p>
	 * @public
	 */
	VersionId?: string | undefined;
	/**
	 * <p>Specifies the algorithm to use when decrypting the object (for example,
	 *             <code>AES256</code>).</p>
	 *          <p>If you encrypt an object by using server-side encryption with customer-provided
	 *          encryption keys (SSE-C) when you store the object in Amazon S3, then when you GET the object,
	 *          you must use the following headers:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-server-side-encryption-customer-algorithm</code>
	 *                </p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-server-side-encryption-customer-key</code>
	 *                </p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-server-side-encryption-customer-key-MD5</code>
	 *                </p>
	 *             </li>
	 *          </ul>
	 *          <p>For more information about SSE-C, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption
	 *             (Using Customer-Provided Encryption Keys)</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>Specifies the customer-provided encryption key that you originally provided for Amazon S3 to
	 *          encrypt the data before storing it. This value is used to decrypt the object when
	 *          recovering it and must match the one used when storing the data. The key must be
	 *          appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
	 *          <p>If you encrypt an object by using server-side encryption with customer-provided
	 *          encryption keys (SSE-C) when you store the object in Amazon S3, then when you GET the object,
	 *          you must use the following headers:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-server-side-encryption-customer-algorithm</code>
	 *                </p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-server-side-encryption-customer-key</code>
	 *                </p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-server-side-encryption-customer-key-MD5</code>
	 *                </p>
	 *             </li>
	 *          </ul>
	 *          <p>For more information about SSE-C, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption
	 *             (Using Customer-Provided Encryption Keys)</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKey?: string | undefined;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the customer-provided encryption key according to
	 *          RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption
	 *          key was transmitted without error.</p>
	 *          <p>If you encrypt an object by using server-side encryption with customer-provided
	 *          encryption keys (SSE-C) when you store the object in Amazon S3, then when you GET the object,
	 *          you must use the following headers:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-server-side-encryption-customer-algorithm</code>
	 *                </p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-server-side-encryption-customer-key</code>
	 *                </p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>x-amz-server-side-encryption-customer-key-MD5</code>
	 *                </p>
	 *             </li>
	 *          </ul>
	 *          <p>For more information about SSE-C, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption
	 *             (Using Customer-Provided Encryption Keys)</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. If either the source or
	 *          destination S3 bucket has Requester Pays enabled, the requester will pay for corresponding
	 *          charges to copy the object. For information about downloading objects from Requester Pays
	 *          buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestPayer?: RequestPayer | undefined;
	/**
	 * <p>Part number of the object being read. This is a positive integer between 1 and 10,000.
	 *          Effectively performs a 'ranged' GET request for the part specified. Useful for downloading
	 *          just a part of an object.</p>
	 * @public
	 */
	PartNumber?: number | undefined;
	/**
	 * <p>The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 * @public
	 */
	ExpectedBucketOwner?: string | undefined;
	/**
	 * <p>To retrieve the checksum, this mode must be enabled.</p>
	 * @public
	 */
	ChecksumMode?: ChecksumMode | undefined;
}
/**
 * @public
 *
 * The input for {@link HeadObjectCommand}.
 */
export interface HeadObjectCommandInput extends HeadObjectRequest {}
/**
 * @public
 *
 * The output of {@link HeadObjectCommand}.
 */
export interface HeadObjectCommandOutput
	extends HeadObjectOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface HeadObjectOutput {
	/**
	 * <p>Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If
	 *          false, this response header does not appear in the response.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	DeleteMarker?: boolean | undefined;
	/**
	 * <p>Indicates that a range of bytes was specified.</p>
	 * @public
	 */
	AcceptRanges?: string | undefined;
	/**
	 * <p>If the object expiration is configured (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">
	 *                <code>PutBucketLifecycleConfiguration</code>
	 *             </a>), the response includes this
	 *          header. It includes the <code>expiry-date</code> and <code>rule-id</code> key-value pairs
	 *          providing object expiration information. The value of the <code>rule-id</code> is
	 *          URL-encoded.</p>
	 *          <note>
	 *             <p>Object expiration information is not returned in directory buckets and this header returns the value "<code>NotImplemented</code>" in all responses for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	Expiration?: string | undefined;
	/**
	 * <p>If the object is an archived object (an object whose storage class is GLACIER), the
	 *          response includes this header if either the archive restoration is in progress (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html">RestoreObject</a> or an archive copy is already restored.</p>
	 *          <p> If an archive copy is already restored, the header value indicates when Amazon S3 is
	 *          scheduled to delete the object copy. For example:</p>
	 *          <p>
	 *             <code>x-amz-restore: ongoing-request="false", expiry-date="Fri, 21 Dec 2012 00:00:00
	 *             GMT"</code>
	 *          </p>
	 *          <p>If the object restoration is in progress, the header returns the value
	 *             <code>ongoing-request="true"</code>.</p>
	 *          <p>For more information about archiving objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html#lifecycle-transition-general-considerations">Transitioning Objects: General Considerations</a>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.
	 *             Directory buckets only support <code>EXPRESS_ONEZONE</code> (the S3 Express One Zone storage class) in Availability Zones and <code>ONEZONE_IA</code> (the S3 One Zone-Infrequent Access storage class) in Dedicated Local Zones.</p>
	 *          </note>
	 * @public
	 */
	Restore?: string | undefined;
	/**
	 * <p>The archive state of the head object.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ArchiveStatus?: ArchiveStatus | undefined;
	/**
	 * <p>Date and time when the object was last modified.</p>
	 * @public
	 */
	LastModified?: Date | undefined;
	/**
	 * <p>Size of the body in bytes.</p>
	 * @public
	 */
	ContentLength?: number | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32 checksum</code> of the object. This checksum is only be present if the checksum was uploaded
	 *     with the object. When you use an API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32C</code> checksum of the object. This checksum is only present if the checksum was uploaded
	 *     with the object. When you use an API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32C?: string | undefined;
	/**
	 * <p>The Base64 encoded, 64-bit <code>CRC64NVME</code> checksum of the object. For more
	 *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity
	 *             in the Amazon S3 User Guide</a>.</p>
	 * @public
	 */
	ChecksumCRC64NVME?: string | undefined;
	/**
	 * <p>The Base64 encoded, 160-bit <code>SHA1</code> digest of the object. This will only be present if the object was uploaded
	 *     with the object. When you use the API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA1?: string | undefined;
	/**
	 * <p>The Base64 encoded, 256-bit <code>SHA256</code> digest of the object. This will only be present if the object was uploaded
	 *     with the object. When you use an API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA256?: string | undefined;
	/**
	 * <p>The checksum type, which determines how part-level checksums are combined to create an
	 *          object-level checksum for multipart objects. You can use this header response to verify
	 *          that the checksum type that is received is the same checksum type that was specified in
	 *          <code>CreateMultipartUpload</code> request. For more
	 *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity
	 *             in the Amazon S3 User Guide</a>.</p>
	 * @public
	 */
	ChecksumType?: ChecksumType | undefined;
	/**
	 * <p>An entity tag (ETag) is an opaque identifier assigned by a web server to a specific
	 *          version of a resource found at a URL.</p>
	 * @public
	 */
	ETag?: string | undefined;
	/**
	 * <p>This is set to the number of metadata entries not returned in <code>x-amz-meta</code>
	 *          headers. This can happen if you create metadata using an API like SOAP that supports more
	 *          flexible metadata than the REST API. For example, using SOAP, you can create metadata whose
	 *          values are not legal HTTP headers.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	MissingMeta?: number | undefined;
	/**
	 * <p>Version ID of the object.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	VersionId?: string | undefined;
	/**
	 * <p>Specifies caching behavior along the request/reply chain.</p>
	 * @public
	 */
	CacheControl?: string | undefined;
	/**
	 * <p>Specifies presentational information for the object.</p>
	 * @public
	 */
	ContentDisposition?: string | undefined;
	/**
	 * <p>Indicates what content encodings have been applied to the object and thus what decoding
	 *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header
	 *          field.</p>
	 * @public
	 */
	ContentEncoding?: string | undefined;
	/**
	 * <p>The language the content is in.</p>
	 * @public
	 */
	ContentLanguage?: string | undefined;
	/**
	 * <p>A standard MIME type describing the format of the object data.</p>
	 * @public
	 */
	ContentType?: string | undefined;
	/**
	 * <p>The portion of the object returned in the response for a <code>GET</code> request.</p>
	 * @public
	 */
	ContentRange?: string | undefined;
	/**
	 * Deprecated in favor of ExpiresString.
	 *
	 * @deprecated
	 * @public
	 */
	Expires?: Date | undefined;
	/**
	 * <p>The date and time at which the object is no longer cacheable.</p>
	 * @public
	 */
	ExpiresString?: string | undefined;
	/**
	 * <p>If the bucket is configured as a website, redirects requests for this object to another
	 *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
	 *          the object metadata.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	WebsiteRedirectLocation?: string | undefined;
	/**
	 * <p>The server-side encryption algorithm used when you store this object in Amazon S3 (for
	 *          example, <code>AES256</code>, <code>aws:kms</code>, <code>aws:kms:dsse</code>).</p>
	 * @public
	 */
	ServerSideEncryption?: ServerSideEncryption | undefined;
	/**
	 * <p>A map of metadata to store with the object in S3.</p>
	 * @public
	 */
	Metadata?: Record<string, string> | undefined;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to confirm the encryption algorithm that's used.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide the round-trip message integrity verification
	 *          of the customer-provided encryption key.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>If present, indicates the ID of the KMS key that was used for object encryption.</p>
	 * @public
	 */
	SSEKMSKeyId?: string | undefined;
	/**
	 * <p>Indicates whether the object uses an S3 Bucket Key for server-side encryption with
	 *          Key Management Service (KMS) keys (SSE-KMS).</p>
	 * @public
	 */
	BucketKeyEnabled?: boolean | undefined;
	/**
	 * <p>Provides storage class information of the object. Amazon S3 returns this header for all
	 *          objects except for S3 Standard storage class objects.</p>
	 *          <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a>.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets </b> -
	 *             Directory buckets only support <code>EXPRESS_ONEZONE</code> (the S3 Express One Zone storage class) in Availability Zones and <code>ONEZONE_IA</code> (the S3 One Zone-Infrequent Access storage class) in Dedicated Local Zones.</p>
	 *          </note>
	 * @public
	 */
	StorageClass?: StorageClass | undefined;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestCharged?: RequestCharged | undefined;
	/**
	 * <p>Amazon S3 can return this header if your request involves a bucket that is either a source or
	 *          a destination in a replication rule.</p>
	 *          <p>In replication, you have a source bucket on which you configure replication and
	 *          destination bucket or buckets where Amazon S3 stores object replicas. When you request an object
	 *             (<code>GetObject</code>) or object metadata (<code>HeadObject</code>) from these
	 *          buckets, Amazon S3 will return the <code>x-amz-replication-status</code> header in the response
	 *          as follows:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <b>If requesting an object from the source bucket</b>,
	 *                Amazon S3 will return the <code>x-amz-replication-status</code> header if the object in
	 *                your request is eligible for replication.</p>
	 *                <p> For example, suppose that in your replication configuration, you specify object
	 *                prefix <code>TaxDocs</code> requesting Amazon S3 to replicate objects with key prefix
	 *                   <code>TaxDocs</code>. Any objects you upload with this key name prefix, for
	 *                example <code>TaxDocs/document1.pdf</code>, are eligible for replication. For any
	 *                object request with this key name prefix, Amazon S3 will return the
	 *                   <code>x-amz-replication-status</code> header with value PENDING, COMPLETED or
	 *                FAILED indicating object replication status.</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <b>If requesting an object from a destination
	 *                bucket</b>, Amazon S3 will return the <code>x-amz-replication-status</code> header
	 *                with value REPLICA if the object in your request is a replica that Amazon S3 created and
	 *                there is no replica modification replication in progress.</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <b>When replicating objects to multiple destination
	 *                   buckets</b>, the <code>x-amz-replication-status</code> header acts
	 *                differently. The header of the source object will only return a value of COMPLETED
	 *                when replication is successful to all destinations. The header will remain at value
	 *                PENDING until replication has completed for all destinations. If one or more
	 *                destinations fails replication the header will return FAILED. </p>
	 *             </li>
	 *          </ul>
	 *          <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Replication</a>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ReplicationStatus?: ReplicationStatus | undefined;
	/**
	 * <p>The count of parts this object has. This value is only returned if you specify
	 *             <code>partNumber</code> in your request and the object was uploaded as a multipart
	 *          upload.</p>
	 * @public
	 */
	PartsCount?: number | undefined;
	/**
	 * <p>The Object Lock mode, if any, that's in effect for this object. This header is only
	 *          returned if the requester has the <code>s3:GetObjectRetention</code> permission. For more
	 *          information about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Object Lock</a>. </p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockMode?: ObjectLockMode | undefined;
	/**
	 * <p>The date and time when the Object Lock retention period expires. This header is only
	 *          returned if the requester has the <code>s3:GetObjectRetention</code> permission.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockRetainUntilDate?: Date | undefined;
	/**
	 * <p>Specifies whether a legal hold is in effect for this object. This header is only
	 *          returned if the requester has the <code>s3:GetObjectLegalHold</code> permission. This
	 *          header is not returned if the specified version of this object has never had a legal hold
	 *          applied. For more information about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Object Lock</a>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | undefined;
}
/**
 * @public
 */
export interface HeadObjectRequest {
	/**
	 * <p>The name of the bucket that contains the object.</p>
	 *          <p>
	 *             <b>Directory buckets</b> -
	 *          When you use this operation with a directory bucket, you must use virtual-hosted-style requests in the format <code>
	 *                <i>Bucket-name</i>.s3express-<i>zone-id</i>.<i>region-code</i>.amazonaws.com</code>. Path-style requests are not supported.  Directory bucket names must be unique in the chosen Zone (Availability Zone or Local Zone). Bucket names must follow the format <code>
	 *                <i>bucket-base-name</i>--<i>zone-id</i>--x-s3</code> (for example, <code>
	 *                <i>amzn-s3-demo-bucket</i>--<i>usw2-az1</i>--x-s3</code>). For information about bucket naming
	 *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-bucket-naming-rules.html">Directory bucket naming
	 *             rules</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Access points</b> - When you use this action with an access point for general purpose buckets, you must provide the alias of the access point in place of the bucket name or specify the access point ARN. When you use this action with an access point for directory buckets, you must provide the access point name in place of the bucket name. When using the access point ARN, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>Object Lambda access points are not supported by directory buckets.</p>
	 *          </note>
	 *          <p>
	 *             <b>S3 on Outposts</b> - When you use this action with S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the
	 *                      form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts, the destination bucket must be the Outposts access point ARN or the access point alias. For more information about S3 on Outposts, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 * @public
	 */
	Bucket: string | undefined;
	/**
	 * <p>Return the object only if its entity tag (ETag) is the same as the one specified;
	 *          otherwise, return a 412 (precondition failed) error.</p>
	 *          <p>If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code> headers are
	 *          present in the request as follows:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>If-Match</code> condition evaluates to <code>true</code>, and;</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>If-Unmodified-Since</code> condition evaluates to <code>false</code>;</p>
	 *             </li>
	 *          </ul>
	 *          <p>Then Amazon S3 returns <code>200 OK</code> and the data requested.</p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p>
	 * @public
	 */
	IfMatch?: string | undefined;
	/**
	 * <p>Return the object only if it has been modified since the specified time; otherwise,
	 *          return a 304 (not modified) error.</p>
	 *          <p>If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code> headers are
	 *          present in the request as follows:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>If-None-Match</code> condition evaluates to <code>false</code>, and;</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>If-Modified-Since</code> condition evaluates to <code>true</code>;</p>
	 *             </li>
	 *          </ul>
	 *          <p>Then Amazon S3 returns the <code>304 Not Modified</code> response code.</p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p>
	 * @public
	 */
	IfModifiedSince?: Date | undefined;
	/**
	 * <p>Return the object only if its entity tag (ETag) is different from the one specified;
	 *          otherwise, return a 304 (not modified) error.</p>
	 *          <p>If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code> headers are
	 *          present in the request as follows:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>If-None-Match</code> condition evaluates to <code>false</code>, and;</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>If-Modified-Since</code> condition evaluates to <code>true</code>;</p>
	 *             </li>
	 *          </ul>
	 *          <p>Then Amazon S3 returns the <code>304 Not Modified</code> response code.</p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p>
	 * @public
	 */
	IfNoneMatch?: string | undefined;
	/**
	 * <p>Return the object only if it has not been modified since the specified time; otherwise,
	 *          return a 412 (precondition failed) error.</p>
	 *          <p>If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code> headers are
	 *          present in the request as follows:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>If-Match</code> condition evaluates to <code>true</code>, and;</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>If-Unmodified-Since</code> condition evaluates to <code>false</code>;</p>
	 *             </li>
	 *          </ul>
	 *          <p>Then Amazon S3 returns <code>200 OK</code> and the data requested.</p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>.</p>
	 * @public
	 */
	IfUnmodifiedSince?: Date | undefined;
	/**
	 * <p>The object key.</p>
	 * @public
	 */
	Key: string | undefined;
	/**
	 * <p>HeadObject returns only the metadata for an object. If the Range is satisfiable, only
	 *          the <code>ContentLength</code> is affected in the response. If the Range is not
	 *          satisfiable, S3 returns a <code>416 - Requested Range Not Satisfiable</code> error.</p>
	 * @public
	 */
	Range?: string | undefined;
	/**
	 * <p>Sets the <code>Cache-Control</code> header of the response.</p>
	 * @public
	 */
	ResponseCacheControl?: string | undefined;
	/**
	 * <p>Sets the <code>Content-Disposition</code> header of the response.</p>
	 * @public
	 */
	ResponseContentDisposition?: string | undefined;
	/**
	 * <p>Sets the <code>Content-Encoding</code> header of the response.</p>
	 * @public
	 */
	ResponseContentEncoding?: string | undefined;
	/**
	 * <p>Sets the <code>Content-Language</code> header of the response.</p>
	 * @public
	 */
	ResponseContentLanguage?: string | undefined;
	/**
	 * <p>Sets the <code>Content-Type</code> header of the response.</p>
	 * @public
	 */
	ResponseContentType?: string | undefined;
	/**
	 * <p>Sets the <code>Expires</code> header of the response.</p>
	 * @public
	 */
	ResponseExpires?: Date | undefined;
	/**
	 * <p>Version ID used to reference a specific version of the object.</p>
	 *          <note>
	 *             <p>For directory buckets in this API operation, only the <code>null</code> value of the version ID is supported.</p>
	 *          </note>
	 * @public
	 */
	VersionId?: string | undefined;
	/**
	 * <p>Specifies the algorithm to use when encrypting the object (for example, AES256).</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This
	 *          value is used to store the object and then it is discarded; Amazon S3 does not store the
	 *          encryption key. The key must be appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKey?: string | undefined;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. If either the source or
	 *          destination S3 bucket has Requester Pays enabled, the requester will pay for corresponding
	 *          charges to copy the object. For information about downloading objects from Requester Pays
	 *          buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestPayer?: RequestPayer | undefined;
	/**
	 * <p>Part number of the object being read. This is a positive integer between 1 and 10,000.
	 *          Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about
	 *          the size of the part and the number of parts in this object.</p>
	 * @public
	 */
	PartNumber?: number | undefined;
	/**
	 * <p>The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 * @public
	 */
	ExpectedBucketOwner?: string | undefined;
	/**
	 * <p>To retrieve the checksum, this parameter must be enabled.</p>
	 *          <p>
	 *             <b>General purpose buckets</b> -
	 *          If you enable checksum mode and the object is uploaded with a
	 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_Checksum.html">checksum</a>
	 *          and encrypted with an Key Management Service (KMS) key, you must have permission to use the
	 *             <code>kms:Decrypt</code> action to retrieve the checksum.</p>
	 *          <p>
	 *             <b>Directory buckets</b> - If you enable
	 *             <code>ChecksumMode</code> and the object is encrypted with Amazon Web Services Key Management Service
	 *          (Amazon Web Services KMS), you must also have the <code>kms:GenerateDataKey</code> and
	 *             <code>kms:Decrypt</code> permissions in IAM identity-based policies and KMS key
	 *          policies for the KMS key to retrieve the checksum of the object.</p>
	 * @public
	 */
	ChecksumMode?: ChecksumMode | undefined;
}
/**
 * <p>Container element that identifies who initiated the multipart upload. </p>
 * @public
 */
export interface Initiator {
	/**
	 * <p>If the principal is an Amazon Web Services account, it provides the Canonical User ID. If the
	 *          principal is an IAM User, it provides a user ARN value.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> - If the principal is an
	 *             Amazon Web Services account, it provides the Amazon Web Services account ID. If the principal is an IAM User, it
	 *             provides a user ARN value.</p>
	 *          </note>
	 * @public
	 */
	ID?: string | undefined;
	/**
	 * <p>Name of the Principal.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	DisplayName?: string | undefined;
}
/**
 * @public
 *
 * The input for {@link ListObjectsV2Command}.
 */
export interface ListObjectsV2CommandInput extends ListObjectsV2Request {}
/**
 * @public
 *
 * The output of {@link ListObjectsV2Command}.
 */
export interface ListObjectsV2CommandOutput
	extends ListObjectsV2Output,
		__MetadataBearer {}
/**
 * @public
 */
export interface ListObjectsV2Output {
	/**
	 * <p>Set to <code>false</code> if all of the results were returned. Set to <code>true</code>
	 *          if more keys are available to return. If the number of results exceeds that specified by
	 *             <code>MaxKeys</code>, all of the results might not be returned.</p>
	 * @public
	 */
	IsTruncated?: boolean | undefined;
	/**
	 * <p>Metadata about each object returned.</p>
	 * @public
	 */
	Contents?: _Object[] | undefined;
	/**
	 * <p>The bucket name.</p>
	 * @public
	 */
	Name?: string | undefined;
	/**
	 * <p>Keys that begin with the indicated prefix.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> - For directory buckets, only prefixes that end in a delimiter (<code>/</code>) are supported.</p>
	 *          </note>
	 * @public
	 */
	Prefix?: string | undefined;
	/**
	 * <p>Causes keys that contain the same string between the <code>prefix</code> and the first
	 *          occurrence of the delimiter to be rolled up into a single result element in the
	 *             <code>CommonPrefixes</code> collection. These rolled-up keys are not returned elsewhere
	 *          in the response. Each rolled-up result counts as only one return against the
	 *             <code>MaxKeys</code> value.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> - For directory buckets, <code>/</code> is the only supported delimiter.</p>
	 *          </note>
	 * @public
	 */
	Delimiter?: string | undefined;
	/**
	 * <p>Sets the maximum number of keys returned in the response. By default, the action returns
	 *          up to 1,000 key names. The response might contain fewer keys but will never contain
	 *          more.</p>
	 * @public
	 */
	MaxKeys?: number | undefined;
	/**
	 * <p>All of the keys (up to 1,000) that share the same prefix are grouped together. When
	 *          counting the total numbers of returns by this API operation, this group of keys is
	 *          considered as one item.</p>
	 *          <p>A response can contain <code>CommonPrefixes</code> only if you specify a
	 *          delimiter.</p>
	 *          <p>
	 *             <code>CommonPrefixes</code> contains all (if there are any) keys between
	 *             <code>Prefix</code> and the next occurrence of the string specified by a
	 *          delimiter.</p>
	 *          <p>
	 *             <code>CommonPrefixes</code> lists keys that act like subdirectories in the directory
	 *          specified by <code>Prefix</code>.</p>
	 *          <p>For example, if the prefix is <code>notes/</code> and the delimiter is a slash
	 *             (<code>/</code>) as in <code>notes/summer/july</code>, the common prefix is
	 *             <code>notes/summer/</code>. All of the keys that roll up into a common prefix count as a
	 *          single return when calculating the number of returns. </p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>
	 *                      <b>Directory buckets</b> - For directory buckets, only prefixes that end in a delimiter (<code>/</code>) are supported.</p>
	 *                </li>
	 *                <li>
	 *                   <p>
	 *                      <b>Directory buckets </b> - When you query
	 *                      <code>ListObjectsV2</code> with a delimiter during in-progress multipart
	 *                   uploads, the <code>CommonPrefixes</code> response parameter contains the prefixes
	 *                   that are associated with the in-progress multipart uploads. For more information
	 *                   about multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html">Multipart Upload Overview</a> in
	 *                   the <i>Amazon S3 User Guide</i>.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	CommonPrefixes?: CommonPrefix[] | undefined;
	/**
	 * <p>Encoding type used by Amazon S3 to encode object key names in the XML response.</p>
	 *          <p>If you specify the <code>encoding-type</code> request parameter, Amazon S3 includes this
	 *          element in the response, and returns encoded key name values in the following response
	 *          elements:</p>
	 *          <p>
	 *             <code>Delimiter, Prefix, Key,</code> and <code>StartAfter</code>.</p>
	 * @public
	 */
	EncodingType?: EncodingType | undefined;
	/**
	 * <p>
	 *             <code>KeyCount</code> is the number of keys returned with this request.
	 *             <code>KeyCount</code> will always be less than or equal to the <code>MaxKeys</code>
	 *          field. For example, if you ask for 50 keys, your result will include 50 keys or
	 *          fewer.</p>
	 * @public
	 */
	KeyCount?: number | undefined;
	/**
	 * <p> If <code>ContinuationToken</code> was sent with the request, it is included in the
	 *          response. You can use the returned <code>ContinuationToken</code> for pagination of the
	 *          list response. You can use this <code>ContinuationToken</code> for pagination of the list
	 *          results. </p>
	 * @public
	 */
	ContinuationToken?: string | undefined;
	/**
	 * <p>
	 *             <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which
	 *          means there are more keys in the bucket that can be listed. The next list requests to Amazon S3
	 *          can be continued with this <code>NextContinuationToken</code>.
	 *             <code>NextContinuationToken</code> is obfuscated and is not a real key</p>
	 * @public
	 */
	NextContinuationToken?: string | undefined;
	/**
	 * <p>If StartAfter was sent with the request, it is included in the response.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	StartAfter?: string | undefined;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestCharged?: RequestCharged | undefined;
}
/**
 * @public
 */
export interface ListObjectsV2Request {
	/**
	 * <p>
	 *             <b>Directory buckets</b> -
	 *          When you use this operation with a directory bucket, you must use virtual-hosted-style requests in the format <code>
	 *                <i>Bucket-name</i>.s3express-<i>zone-id</i>.<i>region-code</i>.amazonaws.com</code>. Path-style requests are not supported.  Directory bucket names must be unique in the chosen Zone (Availability Zone or Local Zone). Bucket names must follow the format <code>
	 *                <i>bucket-base-name</i>--<i>zone-id</i>--x-s3</code> (for example, <code>
	 *                <i>amzn-s3-demo-bucket</i>--<i>usw2-az1</i>--x-s3</code>). For information about bucket naming
	 *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-bucket-naming-rules.html">Directory bucket naming
	 *             rules</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Access points</b> - When you use this action with an access point for general purpose buckets, you must provide the alias of the access point in place of the bucket name or specify the access point ARN. When you use this action with an access point for directory buckets, you must provide the access point name in place of the bucket name. When using the access point ARN, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>Object Lambda access points are not supported by directory buckets.</p>
	 *          </note>
	 *          <p>
	 *             <b>S3 on Outposts</b> - When you use this action with S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the
	 *                      form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts, the destination bucket must be the Outposts access point ARN or the access point alias. For more information about S3 on Outposts, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 * @public
	 */
	Bucket: string | undefined;
	/**
	 * <p>A delimiter is a character that you use to group keys.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>
	 *                      <b>Directory buckets</b> - For directory buckets, <code>/</code> is the only supported delimiter.</p>
	 *                </li>
	 *                <li>
	 *                   <p>
	 *                      <b>Directory buckets </b> - When you query
	 *                      <code>ListObjectsV2</code> with a delimiter during in-progress multipart
	 *                   uploads, the <code>CommonPrefixes</code> response parameter contains the prefixes
	 *                   that are associated with the in-progress multipart uploads. For more information
	 *                   about multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html">Multipart Upload Overview</a> in
	 *                   the <i>Amazon S3 User Guide</i>.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	Delimiter?: string | undefined;
	/**
	 * <p>Encoding type used by Amazon S3 to encode the <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html">object keys</a> in the response.
	 *          Responses are encoded only in UTF-8. An object key can contain any Unicode character.
	 *          However, the XML 1.0 parser can't parse certain characters, such as characters with an
	 *          ASCII value from 0 to 10. For characters that aren't supported in XML 1.0, you can add this
	 *          parameter to request that Amazon S3 encode the keys in the response. For more information about
	 *          characters to avoid in object key names, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-guidelines">Object key naming
	 *             guidelines</a>.</p>
	 *          <note>
	 *             <p>When using the URL encoding type, non-ASCII characters that are used in an object's
	 *             key name will be percent-encoded according to UTF-8 code values. For example, the object
	 *                <code>test_file(3).png</code> will appear as
	 *             <code>test_file%283%29.png</code>.</p>
	 *          </note>
	 * @public
	 */
	EncodingType?: EncodingType | undefined;
	/**
	 * <p>Sets the maximum number of keys returned in the response. By default, the action returns
	 *          up to 1,000 key names. The response might contain fewer keys but will never contain
	 *          more.</p>
	 * @public
	 */
	MaxKeys?: number | undefined;
	/**
	 * <p>Limits the response to keys that begin with the specified prefix.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> - For directory buckets, only prefixes that end in a delimiter (<code>/</code>) are supported.</p>
	 *          </note>
	 * @public
	 */
	Prefix?: string | undefined;
	/**
	 * <p>
	 *             <code>ContinuationToken</code> indicates to Amazon S3 that the list is being continued on
	 *          this bucket with a token. <code>ContinuationToken</code> is obfuscated and is not a real
	 *          key. You can use this <code>ContinuationToken</code> for pagination of the list results.
	 *       </p>
	 * @public
	 */
	ContinuationToken?: string | undefined;
	/**
	 * <p>The owner field is not present in <code>ListObjectsV2</code> by default. If you want to
	 *          return the owner field with each key in the result, then set the <code>FetchOwner</code>
	 *          field to <code>true</code>.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> - For directory buckets,
	 *             the bucket owner is returned as the object owner for all objects.</p>
	 *          </note>
	 * @public
	 */
	FetchOwner?: boolean | undefined;
	/**
	 * <p>StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this
	 *          specified key. StartAfter can be any key in the bucket.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	StartAfter?: string | undefined;
	/**
	 * <p>Confirms that the requester knows that she or he will be charged for the list objects
	 *          request in V2 style. Bucket owners need not specify this parameter in their
	 *          requests.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestPayer?: RequestPayer | undefined;
	/**
	 * <p>The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 * @public
	 */
	ExpectedBucketOwner?: string | undefined;
	/**
	 * <p>Specifies the optional fields that you want returned in the response. Fields that you do
	 *          not specify are not returned.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	OptionalObjectAttributes?: OptionalObjectAttributes[] | undefined;
}
/**
 * @public
 *
 * The input for {@link ListPartsCommand}.
 */
export interface ListPartsCommandInput extends ListPartsRequest {}
/**
 * @public
 *
 * The output of {@link ListPartsCommand}.
 */
export interface ListPartsCommandOutput
	extends ListPartsOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface ListPartsOutput {
	/**
	 * <p>If the bucket has a lifecycle rule configured with an action to abort incomplete
	 *          multipart uploads and the prefix in the lifecycle rule matches the object name in the
	 *          request, then the response includes this header indicating when the initiated multipart
	 *          upload will become eligible for abort operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config">Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle
	 *          Configuration</a>.</p>
	 *          <p>The response will also include the <code>x-amz-abort-rule-id</code> header that will
	 *          provide the ID of the lifecycle configuration rule that defines this action.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	AbortDate?: Date | undefined;
	/**
	 * <p>This header is returned along with the <code>x-amz-abort-date</code> header. It
	 *          identifies applicable lifecycle configuration rule that defines the action to abort
	 *          incomplete multipart uploads.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	AbortRuleId?: string | undefined;
	/**
	 * <p>The name of the bucket to which the multipart upload was initiated. Does not return the
	 *          access point ARN or access point alias if used.</p>
	 * @public
	 */
	Bucket?: string | undefined;
	/**
	 * <p>Object key for which the multipart upload was initiated.</p>
	 * @public
	 */
	Key?: string | undefined;
	/**
	 * <p>Upload ID identifying the multipart upload whose parts are being listed.</p>
	 * @public
	 */
	UploadId?: string | undefined;
	/**
	 * <p>Specifies the part after which listing should begin. Only parts with higher part numbers
	 *          will be listed.</p>
	 * @public
	 */
	PartNumberMarker?: string | undefined;
	/**
	 * <p>When a list is truncated, this element specifies the last part in the list, as well as
	 *          the value to use for the <code>part-number-marker</code> request parameter in a subsequent
	 *          request.</p>
	 * @public
	 */
	NextPartNumberMarker?: string | undefined;
	/**
	 * <p>Maximum number of parts that were allowed in the response.</p>
	 * @public
	 */
	MaxParts?: number | undefined;
	/**
	 * <p> Indicates whether the returned list of parts is truncated. A true value indicates that
	 *          the list was truncated. A list can be truncated if the number of parts exceeds the limit
	 *          returned in the MaxParts element.</p>
	 * @public
	 */
	IsTruncated?: boolean | undefined;
	/**
	 * <p>Container for elements related to a particular part. A response can contain zero or more
	 *             <code>Part</code> elements.</p>
	 * @public
	 */
	Parts?: Part[] | undefined;
	/**
	 * <p>Container element that identifies who initiated the multipart upload. If the initiator
	 *          is an Amazon Web Services account, this element provides the same information as the <code>Owner</code>
	 *          element. If the initiator is an IAM User, this element provides the user ARN and display
	 *          name.</p>
	 * @public
	 */
	Initiator?: Initiator | undefined;
	/**
	 * <p>Container element that identifies the object owner, after the object is created. If
	 *          multipart upload is initiated by an IAM user, this element provides the parent account ID
	 *          and display name.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> - The bucket owner is
	 *             returned as the object owner for all the parts.</p>
	 *          </note>
	 * @public
	 */
	Owner?: Owner | undefined;
	/**
	 * <p>The class of storage used to store the uploaded object.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> -
	 *             Directory buckets only support <code>EXPRESS_ONEZONE</code> (the S3 Express One Zone storage class) in Availability Zones and <code>ONEZONE_IA</code> (the S3 One Zone-Infrequent Access storage class) in Dedicated Local Zones.</p>
	 *          </note>
	 * @public
	 */
	StorageClass?: StorageClass | undefined;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestCharged?: RequestCharged | undefined;
	/**
	 * <p>The algorithm that was used to create a checksum of the object.</p>
	 * @public
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm | undefined;
	/**
	 * <p>The checksum type, which determines how part-level checksums are combined to create an
	 *          object-level checksum for multipart objects. You can use this header response to verify
	 *          that the checksum type that is received is the same checksum type that was specified in
	 *          <code>CreateMultipartUpload</code> request. For more
	 *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity
	 *             in the Amazon S3 User Guide</a>.</p>
	 * @public
	 */
	ChecksumType?: ChecksumType | undefined;
}
/**
 * @public
 */
export interface ListPartsRequest {
	/**
	 * <p>The name of the bucket to which the parts are being uploaded. </p>
	 *          <p>
	 *             <b>Directory buckets</b> -
	 *          When you use this operation with a directory bucket, you must use virtual-hosted-style requests in the format <code>
	 *                <i>Bucket-name</i>.s3express-<i>zone-id</i>.<i>region-code</i>.amazonaws.com</code>. Path-style requests are not supported.  Directory bucket names must be unique in the chosen Zone (Availability Zone or Local Zone). Bucket names must follow the format <code>
	 *                <i>bucket-base-name</i>--<i>zone-id</i>--x-s3</code> (for example, <code>
	 *                <i>amzn-s3-demo-bucket</i>--<i>usw2-az1</i>--x-s3</code>). For information about bucket naming
	 *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-bucket-naming-rules.html">Directory bucket naming
	 *             rules</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Access points</b> - When you use this action with an access point for general purpose buckets, you must provide the alias of the access point in place of the bucket name or specify the access point ARN. When you use this action with an access point for directory buckets, you must provide the access point name in place of the bucket name. When using the access point ARN, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>Object Lambda access points are not supported by directory buckets.</p>
	 *          </note>
	 *          <p>
	 *             <b>S3 on Outposts</b> - When you use this action with S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the
	 *                      form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts, the destination bucket must be the Outposts access point ARN or the access point alias. For more information about S3 on Outposts, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 * @public
	 */
	Bucket: string | undefined;
	/**
	 * <p>Object key for which the multipart upload was initiated.</p>
	 * @public
	 */
	Key: string | undefined;
	/**
	 * <p>Sets the maximum number of parts to return.</p>
	 * @public
	 */
	MaxParts?: number | undefined;
	/**
	 * <p>Specifies the part after which listing should begin. Only parts with higher part numbers
	 *          will be listed.</p>
	 * @public
	 */
	PartNumberMarker?: string | undefined;
	/**
	 * <p>Upload ID identifying the multipart upload whose parts are being listed.</p>
	 * @public
	 */
	UploadId: string | undefined;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. If either the source or
	 *          destination S3 bucket has Requester Pays enabled, the requester will pay for corresponding
	 *          charges to copy the object. For information about downloading objects from Requester Pays
	 *          buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestPayer?: RequestPayer | undefined;
	/**
	 * <p>The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 * @public
	 */
	ExpectedBucketOwner?: string | undefined;
	/**
	 * <p>The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created
	 *     using a checksum algorithm. For more information,
	 *     see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm.
	 *     For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKey?: string | undefined;
	/**
	 * <p>The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum
	 *     algorithm. For more information,
	 *     see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
}
/**
 * <p>Container for the owner's display name and ID.</p>
 * @public
 */
export interface Owner {
	/**
	 * <p>Container for the display name of the owner. This value is only supported in the
	 *          following Amazon Web Services Regions:</p>
	 *          <ul>
	 *             <li>
	 *                <p>US East (N. Virginia)</p>
	 *             </li>
	 *             <li>
	 *                <p>US West (N. California)</p>
	 *             </li>
	 *             <li>
	 *                <p>US West (Oregon)</p>
	 *             </li>
	 *             <li>
	 *                <p>Asia Pacific (Singapore)</p>
	 *             </li>
	 *             <li>
	 *                <p>Asia Pacific (Sydney)</p>
	 *             </li>
	 *             <li>
	 *                <p>Asia Pacific (Tokyo)</p>
	 *             </li>
	 *             <li>
	 *                <p>Europe (Ireland)</p>
	 *             </li>
	 *             <li>
	 *                <p>South America (SÃ£o Paulo)</p>
	 *             </li>
	 *          </ul>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	DisplayName?: string | undefined;
	/**
	 * <p>Container for the ID of the owner.</p>
	 * @public
	 */
	ID?: string | undefined;
}
/**
 * <p>Container for elements related to a part.</p>
 * @public
 */
export interface Part {
	/**
	 * <p>Part number identifying the part. This is a positive integer between 1 and
	 *          10,000.</p>
	 * @public
	 */
	PartNumber?: number | undefined;
	/**
	 * <p>Date and time at which the part was uploaded.</p>
	 * @public
	 */
	LastModified?: Date | undefined;
	/**
	 * <p>Entity tag returned when the part was uploaded.</p>
	 * @public
	 */
	ETag?: string | undefined;
	/**
	 * <p>Size in bytes of the uploaded part data.</p>
	 * @public
	 */
	Size?: number | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32</code> checksum of the part. This checksum is present
	 *          if the object was uploaded with the <code>CRC32</code> checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32C</code> checksum of the part. This checksum is present
	 *          if the object was uploaded with the <code>CRC32C</code> checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32C?: string | undefined;
	/**
	 * <p>The Base64 encoded, 64-bit <code>CRC64NVME</code> checksum of the part. This checksum is present
	 *          if the multipart upload request was created with the <code>CRC64NVME</code> checksum algorithm, or if the object was uploaded without a
	 *          checksum (and Amazon S3 added the default checksum, <code>CRC64NVME</code>, to the uploaded object). For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC64NVME?: string | undefined;
	/**
	 * <p>The Base64 encoded, 160-bit <code>SHA1</code> checksum of the part. This checksum is present
	 *          if the object was uploaded with the <code>SHA1</code> checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA1?: string | undefined;
	/**
	 * <p>The Base64 encoded, 256-bit <code>SHA256</code> checksum of the part. This checksum is present
	 *          if the object was uploaded with the <code>SHA256</code> checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA256?: string | undefined;
}
/**
 * @public
 *
 * The input for {@link PutObjectCommand}.
 */
export interface PutObjectCommandInput extends Omit<PutObjectRequest, 'Body'> {
	/**
	 * For *`PutObjectRequest["Body"]`*, see {@link PutObjectRequest.Body}.
	 */
	Body?: string | Blob | ArrayBuffer | ArrayBufferView;
}
/**
 * @public
 *
 * The output of {@link PutObjectCommand}.
 */
export interface PutObjectCommandOutput
	extends PutObjectOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface PutObjectOutput {
	/**
	 * <p>If the expiration is configured for the object (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a>) in the <i>Amazon S3 User Guide</i>,
	 *          the response includes this header. It includes the <code>expiry-date</code> and
	 *             <code>rule-id</code> key-value pairs that provide information about object expiration.
	 *          The value of the <code>rule-id</code> is URL-encoded.</p>
	 *          <note>
	 *             <p>Object expiration information is not returned in directory buckets and this header returns the value "<code>NotImplemented</code>" in all responses for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	Expiration?: string | undefined;
	/**
	 * <p>Entity tag for the uploaded object.</p>
	 *          <p>
	 *             <b>General purpose buckets </b> - To ensure that data is not
	 *          corrupted traversing the network, for objects where the ETag is the MD5 digest of the
	 *          object, you can calculate the MD5 while putting an object to Amazon S3 and compare the returned
	 *          ETag to the calculated MD5 value.</p>
	 *          <p>
	 *             <b>Directory buckets </b> - The ETag for the object in
	 *          a directory bucket isn't the MD5 digest of the object.</p>
	 * @public
	 */
	ETag?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32 checksum</code> of the object. This checksum is only be present if the checksum was uploaded
	 *     with the object. When you use an API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32C</code> checksum of the object. This checksum is only present if the checksum was uploaded
	 *     with the object. When you use an API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32C?: string | undefined;
	/**
	 * <p>The Base64 encoded, 64-bit <code>CRC64NVME</code> checksum of the object. This header
	 *          is present if the object was uploaded with the <code>CRC64NVME</code> checksum algorithm, or if it
	 *          was uploaded without a checksum (and Amazon S3 added the default checksum,
	 *             <code>CRC64NVME</code>, to the uploaded object). For more information about how
	 *          checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity
	 *             in the Amazon S3 User Guide</a>.</p>
	 * @public
	 */
	ChecksumCRC64NVME?: string | undefined;
	/**
	 * <p>The Base64 encoded, 160-bit <code>SHA1</code> digest of the object. This will only be present if the object was uploaded
	 *     with the object. When you use the API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA1?: string | undefined;
	/**
	 * <p>The Base64 encoded, 256-bit <code>SHA256</code> digest of the object. This will only be present if the object was uploaded
	 *     with the object. When you use an API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA256?: string | undefined;
	/**
	 * <p>This header specifies the checksum type of the object, which determines how part-level
	 *          checksums are combined to create an object-level checksum for multipart objects. For
	 *          <code>PutObject</code> uploads, the checksum type is always <code>FULL_OBJECT</code>. You can use this header as a
	 *          data integrity check to verify that the checksum type that is received is the same checksum
	 *          that was specified. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumType?: ChecksumType | undefined;
	/**
	 * <p>The server-side encryption algorithm used when you store this object in Amazon S3.</p>
	 * @public
	 */
	ServerSideEncryption?: ServerSideEncryption | undefined;
	/**
	 * <p>Version ID of the object.</p>
	 *          <p>If you enable versioning for a bucket, Amazon S3 automatically generates a unique version ID
	 *          for the object being stored. Amazon S3 returns this ID in the response. When you enable
	 *          versioning for a bucket, if Amazon S3 receives multiple write requests for the same object
	 *          simultaneously, it stores all of the objects. For more information about versioning, see
	 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/AddingObjectstoVersioningEnabledBuckets.html">Adding Objects to
	 *             Versioning-Enabled Buckets</a> in the <i>Amazon S3 User Guide</i>. For
	 *          information about returning the versioning state of a bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html">GetBucketVersioning</a>. </p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	VersionId?: string | undefined;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to confirm the encryption algorithm that's used.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide the round-trip message integrity verification
	 *          of the customer-provided encryption key.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>If present, indicates the ID of the KMS key that was used for object encryption.</p>
	 * @public
	 */
	SSEKMSKeyId?: string | undefined;
	/**
	 * <p>If present, indicates the Amazon Web Services KMS Encryption Context to use for object encryption. The value of
	 *          this header is a Base64 encoded string of a UTF-8 encoded JSON, which contains the encryption context as key-value pairs.
	 *          This value is stored as object metadata and automatically gets
	 *          passed on to Amazon Web Services KMS for future <code>GetObject</code>
	 *          operations on this object.</p>
	 * @public
	 */
	SSEKMSEncryptionContext?: string | undefined;
	/**
	 * <p>Indicates whether the uploaded object uses an S3 Bucket Key for server-side encryption
	 *          with Key Management Service (KMS) keys (SSE-KMS).</p>
	 * @public
	 */
	BucketKeyEnabled?: boolean | undefined;
	/**
	 * <p>
	 *          The size of the object in bytes. This value is only be present if you append to an object.
	 *       </p>
	 *          <note>
	 *             <p>This functionality is only supported for objects in the Amazon S3 Express One Zone storage class in directory buckets.</p>
	 *          </note>
	 * @public
	 */
	Size?: number | undefined;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestCharged?: RequestCharged | undefined;
}
/**
 * @public
 */
export interface PutObjectRequest {
	/**
	 * <p>The canned ACL to apply to the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned
	 *             ACL</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When adding a new object, you can use headers to grant ACL-based permissions to
	 *          individual Amazon Web Services accounts or to predefined groups defined by Amazon S3. These permissions are
	 *          then added to the ACL on the object. By default, all objects are private. Only the owner
	 *          has full access control. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List (ACL) Overview</a>
	 *          and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-using-rest-api.html">Managing
	 *             ACLs Using the REST API</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>If the bucket that you're uploading objects to uses the bucket owner enforced setting
	 *          for S3 Object Ownership, ACLs are disabled and no longer affect permissions. Buckets that
	 *          use this setting only accept PUT requests that don't specify an ACL or PUT requests that
	 *          specify bucket owner full control ACLs, such as the <code>bucket-owner-full-control</code>
	 *          canned ACL or an equivalent form of this ACL expressed in the XML format. PUT requests that
	 *          contain other ACLs (for example, custom grants to certain Amazon Web Services accounts) fail and return a
	 *             <code>400</code> error with the error code <code>AccessControlListNotSupported</code>.
	 *          For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html"> Controlling ownership of
	 *             objects and disabling ACLs</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	ACL?: ObjectCannedACL | undefined;
	/**
	 * <p>Object data.</p>
	 * @public
	 */
	Body?: ReadableStream | Blob;
	/**
	 * <p>The bucket name to which the PUT action was initiated. </p>
	 *          <p>
	 *             <b>Directory buckets</b> -
	 *          When you use this operation with a directory bucket, you must use virtual-hosted-style requests in the format <code>
	 *                <i>Bucket-name</i>.s3express-<i>zone-id</i>.<i>region-code</i>.amazonaws.com</code>. Path-style requests are not supported.  Directory bucket names must be unique in the chosen Zone (Availability Zone or Local Zone). Bucket names must follow the format <code>
	 *                <i>bucket-base-name</i>--<i>zone-id</i>--x-s3</code> (for example, <code>
	 *                <i>amzn-s3-demo-bucket</i>--<i>usw2-az1</i>--x-s3</code>). For information about bucket naming
	 *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-bucket-naming-rules.html">Directory bucket naming
	 *             rules</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Access points</b> - When you use this action with an access point for general purpose buckets, you must provide the alias of the access point in place of the bucket name or specify the access point ARN. When you use this action with an access point for directory buckets, you must provide the access point name in place of the bucket name. When using the access point ARN, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>Object Lambda access points are not supported by directory buckets.</p>
	 *          </note>
	 *          <p>
	 *             <b>S3 on Outposts</b> - When you use this action with S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the
	 *                      form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts, the destination bucket must be the Outposts access point ARN or the access point alias. For more information about S3 on Outposts, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 * @public
	 */
	Bucket: string | undefined;
	/**
	 * <p>Can be used to specify caching behavior along the request/reply chain. For more
	 *          information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p>
	 * @public
	 */
	CacheControl?: string | undefined;
	/**
	 * <p>Specifies presentational information for the object. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc6266#section-4">https://www.rfc-editor.org/rfc/rfc6266#section-4</a>.</p>
	 * @public
	 */
	ContentDisposition?: string | undefined;
	/**
	 * <p>Specifies what content encodings have been applied to the object and thus what decoding
	 *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header
	 *          field. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc9110.html#field.content-encoding">https://www.rfc-editor.org/rfc/rfc9110.html#field.content-encoding</a>.</p>
	 * @public
	 */
	ContentEncoding?: string | undefined;
	/**
	 * <p>The language the content is in.</p>
	 * @public
	 */
	ContentLanguage?: string | undefined;
	/**
	 * <p>Size of the body in bytes. This parameter is useful when the size of the body cannot be
	 *          determined automatically. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-content-length">https://www.rfc-editor.org/rfc/rfc9110.html#name-content-length</a>.</p>
	 * @public
	 */
	ContentLength?: number | undefined;
	/**
	 * <p>The Base64 encoded 128-bit <code>MD5</code> digest of the message (without the headers) according to
	 *          RFC 1864. This header can be used as a message integrity check to verify that the data is
	 *          the same data that was originally sent. Although it is optional, we recommend using the
	 *          Content-MD5 mechanism as an end-to-end integrity check. For more information about REST
	 *          request authentication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">REST Authentication</a>.</p>
	 *          <note>
	 *             <p>The <code>Content-MD5</code> or <code>x-amz-sdk-checksum-algorithm</code> header is
	 *             required for any request to upload an object with a retention period configured using
	 *             Amazon S3 Object Lock. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-put-object">Uploading objects to an Object Lock enabled bucket </a> in the
	 *                <i>Amazon S3 User Guide</i>.</p>
	 *          </note>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ContentMD5?: string | undefined;
	/**
	 * <p>A standard MIME type describing the format of the contents. For more information, see
	 *             <a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-content-type">https://www.rfc-editor.org/rfc/rfc9110.html#name-content-type</a>.</p>
	 * @public
	 */
	ContentType?: string | undefined;
	/**
	 * <p>Indicates the algorithm used to create the checksum for the object when you use the SDK. This header will not provide any
	 *     additional functionality if you don't use the SDK. When you send this header, there must be a corresponding <code>x-amz-checksum-<i>algorithm</i>
	 *             </code> or
	 *     <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>.</p>
	 *          <p>For the <code>x-amz-checksum-<i>algorithm</i>
	 *             </code> header, replace <code>
	 *                <i>algorithm</i>
	 *             </code> with the supported algorithm from the following list: </p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>CRC32</code>
	 *                </p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>CRC32C</code>
	 *                </p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>CRC64NVME</code>
	 *                </p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>SHA1</code>
	 *                </p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>SHA256</code>
	 *                </p>
	 *             </li>
	 *          </ul>
	 *          <p>For more
	 *     information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in
	 *     the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>If the individual checksum value you provide through <code>x-amz-checksum-<i>algorithm</i>
	 *             </code> doesn't match the checksum algorithm you set through <code>x-amz-sdk-checksum-algorithm</code>, Amazon S3 fails the request with a <code>BadDigest</code> error.</p>
	 *          <note>
	 *             <p>The <code>Content-MD5</code> or <code>x-amz-sdk-checksum-algorithm</code> header is
	 *             required for any request to upload an object with a retention period configured using
	 *             Amazon S3 Object Lock. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-put-object">Uploading objects to an Object Lock enabled bucket </a> in the
	 *                <i>Amazon S3 User Guide</i>.</p>
	 *          </note>
	 *          <p>For directory buckets, when you use Amazon Web Services SDKs, <code>CRC32</code> is the default checksum algorithm that's used for performance.</p>
	 * @public
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the Base64 encoded, 32-bit <code>CRC32</code> checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the Base64 encoded, 32-bit <code>CRC32C</code> checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32C?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is
	 *          the same data that was originally sent. This header specifies the Base64 encoded, 64-bit
	 *             <code>CRC64NVME</code> checksum of the object. The <code>CRC64NVME</code> checksum is
	 *          always a full object checksum. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity
	 *             in the Amazon S3 User Guide</a>.</p>
	 * @public
	 */
	ChecksumCRC64NVME?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the Base64 encoded, 160-bit <code>SHA1</code> digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA1?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the Base64 encoded, 256-bit <code>SHA256</code> digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA256?: string | undefined;
	/**
	 * <p>The date and time at which the object is no longer cacheable. For more information, see
	 *             <a href="https://www.rfc-editor.org/rfc/rfc7234#section-5.3">https://www.rfc-editor.org/rfc/rfc7234#section-5.3</a>.</p>
	 * @public
	 */
	Expires?: Date | undefined;
	/**
	 * <p>Uploads the object only if the ETag (entity tag) value provided during the WRITE
	 *          operation matches the ETag of the object in S3. If the ETag values do not match, the
	 *          operation returns a <code>412 Precondition Failed</code> error.</p>
	 *          <p>If a conflicting operation occurs during the upload S3 returns a <code>409 ConditionalRequestConflict</code> response. On a 409 failure you should fetch the object's ETag and retry the upload.</p>
	 *          <p>Expects the ETag value as a string.</p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>, or <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/conditional-requests.html">Conditional requests</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	IfMatch?: string | undefined;
	/**
	 * <p>Uploads the object only if the object key name does not already exist in the bucket
	 *          specified. Otherwise, Amazon S3 returns a <code>412 Precondition Failed</code> error.</p>
	 *          <p>If a conflicting operation occurs during the upload S3 returns a <code>409
	 *             ConditionalRequestConflict</code> response. On a 409 failure you should retry the
	 *          upload.</p>
	 *          <p>Expects the '*' (asterisk) character.</p>
	 *          <p>For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC 7232</a>, or <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/conditional-requests.html">Conditional requests</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	IfNoneMatch?: string | undefined;
	/**
	 * <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	GrantFullControl?: string | undefined;
	/**
	 * <p>Allows grantee to read the object data and its metadata.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	GrantRead?: string | undefined;
	/**
	 * <p>Allows grantee to read the object ACL.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	GrantReadACP?: string | undefined;
	/**
	 * <p>Allows grantee to write the ACL for the applicable object.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>This functionality is not supported for directory buckets.</p>
	 *                </li>
	 *                <li>
	 *                   <p>This functionality is not supported for Amazon S3 on Outposts.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	GrantWriteACP?: string | undefined;
	/**
	 * <p>Object key for which the PUT action was initiated.</p>
	 * @public
	 */
	Key: string | undefined;
	/**
	 * <p>
	 *          Specifies the offset for appending data to existing objects in bytes.
	 *          The offset must be equal to the size of the existing object being appended to.
	 *          If no object exists, setting this header to 0 will create a new object.
	 *       </p>
	 *          <note>
	 *             <p>This functionality is only supported for objects in the Amazon S3 Express One Zone storage class in directory buckets.</p>
	 *          </note>
	 * @public
	 */
	WriteOffsetBytes?: number | undefined;
	/**
	 * <p>A map of metadata to store with the object in S3.</p>
	 * @public
	 */
	Metadata?: Record<string, string> | undefined;
	/**
	 * <p>The server-side encryption algorithm that was used when you store this object in Amazon S3
	 *          (for example, <code>AES256</code>, <code>aws:kms</code>, <code>aws:kms:dsse</code>).</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <b>General purpose buckets </b> - You have four mutually
	 *                exclusive options to protect data using server-side encryption in Amazon S3, depending on
	 *                how you choose to manage the encryption keys. Specifically, the encryption key
	 *                options are Amazon S3 managed keys (SSE-S3), Amazon Web Services KMS keys (SSE-KMS or DSSE-KMS), and
	 *                customer-provided keys (SSE-C). Amazon S3 encrypts data with server-side encryption by
	 *                using Amazon S3 managed keys (SSE-S3) by default. You can optionally tell Amazon S3 to encrypt
	 *                data at rest by using server-side encryption with other key options. For more
	 *                information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html">Using Server-Side
	 *                   Encryption</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <b>Directory buckets </b> -
	 *                For directory buckets, there are only two supported options for server-side encryption: server-side encryption with Amazon S3 managed keys (SSE-S3) (<code>AES256</code>) and server-side encryption with KMS keys (SSE-KMS) (<code>aws:kms</code>). We recommend that the bucket's default encryption uses the desired encryption configuration and you don't override the bucket default encryption in your
	 *             <code>CreateSession</code> requests or <code>PUT</code> object requests. Then, new objects
	 *  are automatically encrypted with the desired encryption settings. For more
	 *          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-serv-side-encryption.html">Protecting data with server-side encryption</a> in the <i>Amazon S3 User Guide</i>. For more information about the encryption overriding behaviors in directory buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-specifying-kms-encryption.html">Specifying server-side encryption with KMS for new object uploads</a>. </p>
	 *                <p>In the Zonal endpoint API calls (except <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html">CopyObject</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html">UploadPartCopy</a>) using the REST API, the encryption request headers must match the encryption settings that are specified in the <code>CreateSession</code> request.
	 *                             You can't override the values of the encryption settings (<code>x-amz-server-side-encryption</code>, <code>x-amz-server-side-encryption-aws-kms-key-id</code>, <code>x-amz-server-side-encryption-context</code>, and <code>x-amz-server-side-encryption-bucket-key-enabled</code>) that are specified in the <code>CreateSession</code> request.
	 *                             You don't need to explicitly specify these encryption settings values in Zonal endpoint API calls, and
	 *                             Amazon S3 will use the encryption settings values from the <code>CreateSession</code> request to protect new objects in the directory bucket.
	 *                            </p>
	 *                <note>
	 *                   <p>When you use the CLI or the Amazon Web Services SDKs, for <code>CreateSession</code>, the session token refreshes automatically to avoid service interruptions when a session expires. The CLI or the Amazon Web Services SDKs use the bucket's default encryption configuration for the
	 *                             <code>CreateSession</code> request. It's not supported to override the encryption settings values in the <code>CreateSession</code> request.
	 *                             So in the Zonal endpoint API calls (except <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html">CopyObject</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html">UploadPartCopy</a>),
	 *           the encryption request headers must match the default encryption configuration of the directory bucket.
	 *
	 * </p>
	 *                </note>
	 *             </li>
	 *          </ul>
	 * @public
	 */
	ServerSideEncryption?: ServerSideEncryption | undefined;
	/**
	 * <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The
	 *          STANDARD storage class provides high durability and high availability. Depending on
	 *          performance needs, you can specify a different Storage Class. For more information, see
	 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage
	 *             Classes</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <ul>
	 *                <li>
	 *                   <p>Directory buckets only support <code>EXPRESS_ONEZONE</code> (the S3 Express One Zone storage class) in Availability Zones and <code>ONEZONE_IA</code> (the S3 One Zone-Infrequent Access storage class) in Dedicated Local Zones.</p>
	 *                </li>
	 *                <li>
	 *                   <p>Amazon S3 on Outposts only uses the OUTPOSTS Storage Class.</p>
	 *                </li>
	 *             </ul>
	 *          </note>
	 * @public
	 */
	StorageClass?: StorageClass | undefined;
	/**
	 * <p>If the bucket is configured as a website, redirects requests for this object to another
	 *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
	 *          the object metadata. For information about object metadata, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html">Object Key and Metadata</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 *          <p>In the following example, the request header sets the redirect to an object
	 *          (anotherPage.html) in the same bucket:</p>
	 *          <p>
	 *             <code>x-amz-website-redirect-location: /anotherPage.html</code>
	 *          </p>
	 *          <p>In the following example, the request header sets the object redirect to another
	 *          website:</p>
	 *          <p>
	 *             <code>x-amz-website-redirect-location: http://www.example.com/</code>
	 *          </p>
	 *          <p>For more information about website hosting in Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting Websites on Amazon S3</a> and
	 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html">How to
	 *             Configure Website Page Redirects</a> in the <i>Amazon S3 User Guide</i>. </p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	WebsiteRedirectLocation?: string | undefined;
	/**
	 * <p>Specifies the algorithm to use when encrypting the object (for example,
	 *             <code>AES256</code>).</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This
	 *          value is used to store the object and then it is discarded; Amazon S3 does not store the
	 *          encryption key. The key must be appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKey?: string | undefined;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>Specifies the KMS key ID (Key ID, Key ARN, or Key Alias) to use for object encryption. If the KMS key doesn't exist in the same
	 *          account that's issuing the command, you must use the full Key ARN not the Key ID.</p>
	 *          <p>
	 *             <b>General purpose buckets</b> - If you specify <code>x-amz-server-side-encryption</code> with <code>aws:kms</code> or <code>aws:kms:dsse</code>, this header specifies the ID (Key ID, Key ARN, or Key Alias) of the KMS
	 *          key to use. If you specify
	 *          <code>x-amz-server-side-encryption:aws:kms</code> or
	 *          <code>x-amz-server-side-encryption:aws:kms:dsse</code>, but do not provide <code>x-amz-server-side-encryption-aws-kms-key-id</code>, Amazon S3 uses the Amazon Web Services managed key
	 *          (<code>aws/s3</code>) to protect the data.</p>
	 *          <p>
	 *             <b>Directory buckets</b> - To encrypt data using SSE-KMS, it's recommended to specify the
	 * <code>x-amz-server-side-encryption</code> header to <code>aws:kms</code>. Then, the <code>x-amz-server-side-encryption-aws-kms-key-id</code> header implicitly uses
	 * the bucket's default KMS customer managed key ID. If you want to explicitly set the <code>
	 *          x-amz-server-side-encryption-aws-kms-key-id</code> header, it must match the bucket's default customer managed key (using key ID or ARN, not alias). Your SSE-KMS configuration can only support 1 <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer managed key</a> per directory bucket's lifetime.
	 * The <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">Amazon Web Services managed key</a> (<code>aws/s3</code>) isn't supported.
	 *
	 *  Incorrect key specification results in an HTTP <code>400 Bad Request</code> error. </p>
	 * @public
	 */
	SSEKMSKeyId?: string | undefined;
	/**
	 * <p>Specifies the Amazon Web Services KMS Encryption Context as an additional encryption context to use for object encryption. The value of
	 *          this header is a Base64 encoded string of a UTF-8 encoded JSON, which contains the encryption context as key-value pairs.
	 *          This value is stored as object metadata and automatically gets passed on
	 *          to Amazon Web Services KMS for future <code>GetObject</code> operations on
	 *          this object.</p>
	 *          <p>
	 *             <b>General purpose buckets</b> - This value must be explicitly added during <code>CopyObject</code> operations if you want an additional encryption context for your object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html#encryption-context">Encryption context</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Directory buckets</b> - You can optionally provide an explicit encryption context value. The value must match the default encryption context - the bucket Amazon Resource Name (ARN). An additional encryption context value is not supported. </p>
	 * @public
	 */
	SSEKMSEncryptionContext?: string | undefined;
	/**
	 * <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with
	 *          server-side encryption using Key Management Service (KMS) keys (SSE-KMS).</p>
	 *          <p>
	 *             <b>General purpose buckets</b> - Setting this header to
	 *             <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with
	 *          SSE-KMS. Also, specifying this header with a PUT action doesn't affect bucket-level settings for S3
	 *          Bucket Key.</p>
	 *          <p>
	 *             <b>Directory buckets</b> - S3 Bucket Keys are always enabled for <code>GET</code> and <code>PUT</code> operations in a directory bucket and canâ€™t be disabled. S3 Bucket Keys aren't supported, when you copy SSE-KMS encrypted objects from general purpose buckets
	 * to directory buckets, from directory buckets to general purpose buckets, or between directory buckets, through <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html">CopyObject</a>, <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html">UploadPartCopy</a>, <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-buckets-objects-Batch-Ops">the Copy operation in Batch Operations</a>, or
	 *                             <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-import-job">the import jobs</a>. In this case, Amazon S3 makes a call to KMS every time a copy request is made for a KMS-encrypted object.</p>
	 * @public
	 */
	BucketKeyEnabled?: boolean | undefined;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. If either the source or
	 *          destination S3 bucket has Requester Pays enabled, the requester will pay for corresponding
	 *          charges to copy the object. For information about downloading objects from Requester Pays
	 *          buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestPayer?: RequestPayer | undefined;
	/**
	 * <p>The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For
	 *          example, "Key1=Value1")</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	Tagging?: string | undefined;
	/**
	 * <p>The Object Lock mode that you want to apply to this object.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockMode?: ObjectLockMode | undefined;
	/**
	 * <p>The date and time when you want this object's Object Lock to expire. Must be formatted
	 *          as a timestamp parameter.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockRetainUntilDate?: Date | undefined;
	/**
	 * <p>Specifies whether a legal hold will be applied to this object. For more information
	 *          about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Object Lock</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | undefined;
	/**
	 * <p>The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 * @public
	 */
	ExpectedBucketOwner?: string | undefined;
}
/**
 * <p>Specifies the restoration status of an object. Objects in certain storage classes must
 *          be restored before they can be retrieved. For more information about these storage classes
 *          and how to work with archived objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/archived-objects.html"> Working with archived
 *             objects</a> in the <i>Amazon S3 User Guide</i>.</p>
 *          <note>
 *             <p>This functionality is not supported for directory buckets.
 *             Directory buckets only support <code>EXPRESS_ONEZONE</code> (the S3 Express One Zone storage class) in Availability Zones and <code>ONEZONE_IA</code> (the S3 One Zone-Infrequent Access storage class) in Dedicated Local Zones.</p>
 *          </note>
 * @public
 */
export interface RestoreStatus {
	/**
	 * <p>Specifies whether the object is currently being restored. If the object restoration is
	 *          in progress, the header returns the value <code>TRUE</code>. For example:</p>
	 *          <p>
	 *             <code>x-amz-optional-object-attributes: IsRestoreInProgress="true"</code>
	 *          </p>
	 *          <p>If the object restoration has completed, the header returns the value
	 *          <code>FALSE</code>. For example:</p>
	 *          <p>
	 *             <code>x-amz-optional-object-attributes: IsRestoreInProgress="false",
	 *             RestoreExpiryDate="2012-12-21T00:00:00.000Z"</code>
	 *          </p>
	 *          <p>If the object hasn't been restored, there is no header response.</p>
	 * @public
	 */
	IsRestoreInProgress?: boolean | undefined;
	/**
	 * <p>Indicates when the restored copy will expire. This value is populated only if the object
	 *          has already been restored. For example:</p>
	 *          <p>
	 *             <code>x-amz-optional-object-attributes: IsRestoreInProgress="false",
	 *             RestoreExpiryDate="2012-12-21T00:00:00.000Z"</code>
	 *          </p>
	 * @public
	 */
	RestoreExpiryDate?: Date | undefined;
}
/**
 * @public
 *
 * The input for {@link UploadPartCommand}.
 */
export interface UploadPartCommandInput
	extends Omit<UploadPartRequest, 'Body'> {
	/**
	 * For *`UploadPartRequest["Body"]`*, see {@link UploadPartRequest.Body}.
	 */
	Body?: string | Blob | ArrayBuffer | ArrayBufferView;
}
/**
 * @public
 *
 * The output of {@link UploadPartCommand}.
 */
export interface UploadPartCommandOutput
	extends UploadPartOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface UploadPartOutput {
	/**
	 * <p>The server-side encryption algorithm used when you store this object in Amazon S3 (for
	 *          example, <code>AES256</code>, <code>aws:kms</code>).</p>
	 * @public
	 */
	ServerSideEncryption?: ServerSideEncryption | undefined;
	/**
	 * <p>Entity tag for the uploaded object.</p>
	 * @public
	 */
	ETag?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32 checksum</code> of the object. This checksum is only be present if the checksum was uploaded
	 *     with the object. When you use an API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32?: string | undefined;
	/**
	 * <p>The Base64 encoded, 32-bit <code>CRC32C</code> checksum of the object. This checksum is only present if the checksum was uploaded
	 *     with the object. When you use an API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32C?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is
	 *          the same data that was originally sent. This header specifies the Base64 encoded, 64-bit
	 *          <code>CRC64NVME</code> checksum of the part. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC64NVME?: string | undefined;
	/**
	 * <p>The Base64 encoded, 160-bit <code>SHA1</code> digest of the object. This will only be present if the object was uploaded
	 *     with the object. When you use the API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA1?: string | undefined;
	/**
	 * <p>The Base64 encoded, 256-bit <code>SHA256</code> digest of the object. This will only be present if the object was uploaded
	 *     with the object. When you use an API operation on an object that was uploaded using multipart uploads, this value may not be a direct checksum value of the full object. Instead, it's a calculation based on the checksum values of each individual part. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA256?: string | undefined;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to confirm the encryption algorithm that's used.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide the round-trip message integrity verification
	 *          of the customer-provided encryption key.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>If present, indicates the ID of the KMS key that was used for object encryption.</p>
	 * @public
	 */
	SSEKMSKeyId?: string | undefined;
	/**
	 * <p>Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption
	 *          with Key Management Service (KMS) keys (SSE-KMS).</p>
	 * @public
	 */
	BucketKeyEnabled?: boolean | undefined;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestCharged?: RequestCharged | undefined;
}
/**
 * @public
 */
export interface UploadPartRequest {
	/**
	 * <p>Object data.</p>
	 * @public
	 */
	Body?: ReadableStream | Blob;
	/**
	 * <p>The name of the bucket to which the multipart upload was initiated.</p>
	 *          <p>
	 *             <b>Directory buckets</b> -
	 *          When you use this operation with a directory bucket, you must use virtual-hosted-style requests in the format <code>
	 *                <i>Bucket-name</i>.s3express-<i>zone-id</i>.<i>region-code</i>.amazonaws.com</code>. Path-style requests are not supported.  Directory bucket names must be unique in the chosen Zone (Availability Zone or Local Zone). Bucket names must follow the format <code>
	 *                <i>bucket-base-name</i>--<i>zone-id</i>--x-s3</code> (for example, <code>
	 *                <i>amzn-s3-demo-bucket</i>--<i>usw2-az1</i>--x-s3</code>). For information about bucket naming
	 *          restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-bucket-naming-rules.html">Directory bucket naming
	 *             rules</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>
	 *             <b>Access points</b> - When you use this action with an access point for general purpose buckets, you must provide the alias of the access point in place of the bucket name or specify the access point ARN. When you use this action with an access point for directory buckets, you must provide the access point name in place of the bucket name. When using the access point ARN, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>Object Lambda access points are not supported by directory buckets.</p>
	 *          </note>
	 *          <p>
	 *             <b>S3 on Outposts</b> - When you use this action with S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the
	 *                      form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts, the destination bucket must be the Outposts access point ARN or the access point alias. For more information about S3 on Outposts, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts?</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 * @public
	 */
	Bucket: string | undefined;
	/**
	 * <p>Size of the body in bytes. This parameter is useful when the size of the body cannot be
	 *          determined automatically.</p>
	 * @public
	 */
	ContentLength?: number | undefined;
	/**
	 * <p>The Base64 encoded 128-bit MD5 digest of the part data. This parameter is auto-populated
	 *          when using the command from the CLI. This parameter is required if object lock parameters
	 *          are specified.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ContentMD5?: string | undefined;
	/**
	 * <p>Indicates the algorithm used to create the checksum for the object when you use the SDK. This header will not provide any
	 *     additional functionality if you don't use the SDK. When you send this header, there must be a corresponding <code>x-amz-checksum</code> or
	 *     <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more
	 *     information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in
	 *     the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>If you provide an individual checksum, Amazon S3 ignores any provided
	 *             <code>ChecksumAlgorithm</code> parameter.</p>
	 *          <p>This checksum algorithm must be the same for all parts and it match the checksum value
	 *          supplied in the <code>CreateMultipartUpload</code> request.</p>
	 * @public
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the Base64 encoded, 32-bit <code>CRC32</code> checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the Base64 encoded, 32-bit <code>CRC32C</code> checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC32C?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is
	 *          the same data that was originally sent. This header specifies the Base64 encoded, 64-bit
	 *          <code>CRC64NVME</code> checksum of the part. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumCRC64NVME?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the Base64 encoded, 160-bit <code>SHA1</code> digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA1?: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the Base64 encoded, 256-bit <code>SHA256</code> digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumSHA256?: string | undefined;
	/**
	 * <p>Object key for which the multipart upload was initiated.</p>
	 * @public
	 */
	Key: string | undefined;
	/**
	 * <p>Part number of part being uploaded. This is a positive integer between 1 and
	 *          10,000.</p>
	 * @public
	 */
	PartNumber: number | undefined;
	/**
	 * <p>Upload ID identifying the multipart upload whose part is being uploaded.</p>
	 * @public
	 */
	UploadId: string | undefined;
	/**
	 * <p>Specifies the algorithm to use when encrypting the object (for example, AES256).</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerAlgorithm?: string | undefined;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This
	 *          value is used to store the object and then it is discarded; Amazon S3 does not store the
	 *          encryption key. The key must be appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm header</code>. This must be the
	 *          same encryption key specified in the initiate multipart upload request.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKey?: string | undefined;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	SSECustomerKeyMD5?: string | undefined;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. If either the source or
	 *          destination S3 bucket has Requester Pays enabled, the requester will pay for corresponding
	 *          charges to copy the object. For information about downloading objects from Requester Pays
	 *          buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.</p>
	 *          </note>
	 * @public
	 */
	RequestPayer?: RequestPayer | undefined;
	/**
	 * <p>The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 * @public
	 */
	ExpectedBucketOwner?: string | undefined;
}
/**
 * <p>An object consists of data and its descriptive metadata.</p>
 * @public
 */
export interface _Object {
	/**
	 * <p>The name that you assign to an object. You use the object key to retrieve the
	 *          object.</p>
	 * @public
	 */
	Key?: string | undefined;
	/**
	 * <p>Creation date of the object.</p>
	 * @public
	 */
	LastModified?: Date | undefined;
	/**
	 * <p>The entity tag is a hash of the object. The ETag reflects changes only to the contents
	 *          of an object, not its metadata. The ETag may or may not be an MD5 digest of the object
	 *          data. Whether or not it is depends on how the object was created and how it is encrypted as
	 *          described below:</p>
	 *          <ul>
	 *             <li>
	 *                <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the
	 *                Amazon Web Services Management Console, and are encrypted by SSE-S3 or plaintext, have ETags that
	 *                are an MD5 digest of their object data.</p>
	 *             </li>
	 *             <li>
	 *                <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the
	 *                Amazon Web Services Management Console, and are encrypted by SSE-C or SSE-KMS, have ETags that are
	 *                not an MD5 digest of their object data.</p>
	 *             </li>
	 *             <li>
	 *                <p>If an object is created by either the Multipart Upload or Part Copy operation, the
	 *                ETag is not an MD5 digest, regardless of the method of encryption. If an object is
	 *                larger than 16 MB, the Amazon Web Services Management Console will upload or copy that object as a
	 *                Multipart Upload, and therefore the ETag will not be an MD5 digest.</p>
	 *             </li>
	 *          </ul>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> - MD5 is not supported by directory buckets.</p>
	 *          </note>
	 * @public
	 */
	ETag?: string | undefined;
	/**
	 * <p>The algorithm that was used to create a checksum of the object.</p>
	 * @public
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm[] | undefined;
	/**
	 * <p>The checksum type that is used to calculate the objectâ€™s
	 *          checksum value. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * @public
	 */
	ChecksumType?: ChecksumType | undefined;
	/**
	 * <p>Size in bytes of the object</p>
	 * @public
	 */
	Size?: number | undefined;
	/**
	 * <p>The class of storage used to store the object.</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> -
	 *             Directory buckets only support <code>EXPRESS_ONEZONE</code> (the S3 Express One Zone storage class) in Availability Zones and <code>ONEZONE_IA</code> (the S3 One Zone-Infrequent Access storage class) in Dedicated Local Zones.</p>
	 *          </note>
	 * @public
	 */
	StorageClass?: ObjectStorageClass | undefined;
	/**
	 * <p>The owner of the object</p>
	 *          <note>
	 *             <p>
	 *                <b>Directory buckets</b> - The bucket owner is
	 *             returned as the object owner.</p>
	 *          </note>
	 * @public
	 */
	Owner?: Owner | undefined;
	/**
	 * <p>Specifies the restoration status of an object. Objects in certain storage classes must
	 *          be restored before they can be retrieved. For more information about these storage classes
	 *          and how to work with archived objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/archived-objects.html"> Working with archived
	 *             objects</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <note>
	 *             <p>This functionality is not supported for directory buckets.
	 *             Directory buckets only support <code>EXPRESS_ONEZONE</code> (the S3 Express One Zone storage class) in Availability Zones and <code>ONEZONE_IA</code> (the S3 One Zone-Infrequent Access storage class) in Dedicated Local Zones.</p>
	 *          </note>
	 * @public
	 */
	RestoreStatus?: RestoreStatus | undefined;
}
/**
 * @public
 */
export type ArchiveStatus = (typeof ArchiveStatus)[keyof typeof ArchiveStatus];
/**
 * @public
 */
export type ChecksumAlgorithm =
	(typeof ChecksumAlgorithm)[keyof typeof ChecksumAlgorithm];
/**
 * @public
 */
export type ChecksumMode = (typeof ChecksumMode)[keyof typeof ChecksumMode];
/**
 * @public
 */
export type ChecksumType = (typeof ChecksumType)[keyof typeof ChecksumType];
/**
 * @public
 */
export type EncodingType = (typeof EncodingType)[keyof typeof EncodingType];
/**
 * @public
 */
export type MetadataDirective =
	(typeof MetadataDirective)[keyof typeof MetadataDirective];
/**
 * @public
 */
export type ObjectCannedACL =
	(typeof ObjectCannedACL)[keyof typeof ObjectCannedACL];
/**
 * @public
 */
export type ObjectLockLegalHoldStatus =
	(typeof ObjectLockLegalHoldStatus)[keyof typeof ObjectLockLegalHoldStatus];
/**
 * @public
 */
export type ObjectLockMode =
	(typeof ObjectLockMode)[keyof typeof ObjectLockMode];
/**
 * @public
 */
export type ObjectStorageClass =
	(typeof ObjectStorageClass)[keyof typeof ObjectStorageClass];
/**
 * @public
 */
export type OptionalObjectAttributes =
	(typeof OptionalObjectAttributes)[keyof typeof OptionalObjectAttributes];
/**
 * @public
 */
export type ReplicationStatus =
	(typeof ReplicationStatus)[keyof typeof ReplicationStatus];
/**
 * @public
 */
export type RequestCharged =
	(typeof RequestCharged)[keyof typeof RequestCharged];
/**
 * @public
 */
export type RequestPayer = (typeof RequestPayer)[keyof typeof RequestPayer];
/**
 * @public
 */
export type ServerSideEncryption =
	(typeof ServerSideEncryption)[keyof typeof ServerSideEncryption];
/**
 * @public
 */
export type StorageClass = (typeof StorageClass)[keyof typeof StorageClass];
/**
 * @public
 */
export type TaggingDirective =
	(typeof TaggingDirective)[keyof typeof TaggingDirective];

export {};
