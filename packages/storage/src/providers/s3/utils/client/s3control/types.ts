// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/**
 * Generated by scripts/dts-bundler/README.md
 */

import { MetadataBearer as __MetadataBearer } from '@aws-sdk/types';

declare const Permission: {
	readonly READ: 'READ';
	readonly READWRITE: 'READWRITE';
	readonly WRITE: 'WRITE';
};
declare const Privilege: {
	readonly Default: 'Default';
	readonly Minimal: 'Minimal';
};
declare const S3PrefixType: {
	readonly Object: 'Object';
};

/**
 * <p>The Amazon Web Services Security Token Service temporary credential that S3 Access Grants vends to grantees and client applications. </p>
 * @public
 */
export interface Credentials {
	/**
	 * <p>The unique access key ID of the Amazon Web Services STS temporary credential that S3 Access Grants vends to grantees and client applications. </p>
	 * @public
	 */
	AccessKeyId?: string;
	/**
	 * <p>The secret access key of the Amazon Web Services STS temporary credential that S3 Access Grants vends to grantees and client applications. </p>
	 * @public
	 */
	SecretAccessKey?: string;
	/**
	 * <p>The Amazon Web Services STS temporary credential that S3 Access Grants vends to grantees and client applications. </p>
	 * @public
	 */
	SessionToken?: string;
	/**
	 * <p>The expiration date and time of the temporary credential that S3 Access Grants vends to grantees and client applications. </p>
	 * @public
	 */
	Expiration?: Date;
}
/**
 * @public
 *
 * The input for {@link GetDataAccessCommand}.
 */
export interface GetDataAccessCommandInput extends GetDataAccessRequest {}
/**
 * @public
 *
 * The output of {@link GetDataAccessCommand}.
 */
export interface GetDataAccessCommandOutput
	extends GetDataAccessResult,
		__MetadataBearer {}
/**
 * @public
 */
export interface GetDataAccessRequest {
	/**
	 * <p>The Amazon Web Services account ID of the S3 Access Grants instance.</p>
	 * @public
	 */
	AccountId?: string;
	/**
	 * <p>The S3 URI path of the data to which you are requesting temporary access credentials. If the requesting account has an access grant for this data, S3 Access Grants vends temporary access credentials in the response.</p>
	 * @public
	 */
	Target: string | undefined;
	/**
	 * <p>The type of permission granted to your S3 data, which can be set to one of the following values:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>READ</code> – Grant read-only access to the S3 data.</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>WRITE</code> – Grant write-only access to the S3 data.</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>READWRITE</code> – Grant both read and write access to the S3 data.</p>
	 *             </li>
	 *          </ul>
	 * @public
	 */
	Permission: Permission | undefined;
	/**
	 * <p>The session duration, in seconds, of the temporary access credential that S3 Access Grants vends to the grantee or client application. The default value is 1 hour, but the grantee can specify a range from 900 seconds (15 minutes) up to 43200 seconds (12 hours). If the grantee requests a value higher than this maximum, the operation fails. </p>
	 * @public
	 */
	DurationSeconds?: number;
	/**
	 * <p>The scope of the temporary access credential that S3 Access Grants vends to the grantee or client application. </p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>Default</code> – The scope of the returned temporary access token is the scope of the grant that is closest to the target scope.</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>Minimal</code> – The scope of the returned temporary access token is the same as the requested target scope as long as the requested scope is the same as or a subset of the grant scope. </p>
	 *             </li>
	 *          </ul>
	 * @public
	 */
	Privilege?: Privilege;
	/**
	 * <p>The type of <code>Target</code>. The only possible value is <code>Object</code>. Pass this value if the target data that you would like to access is a path to an object. Do not pass this value if the target data is a bucket or a bucket and a prefix. </p>
	 * @public
	 */
	TargetType?: S3PrefixType;
}
/**
 * @public
 */
export interface GetDataAccessResult {
	/**
	 * <p>The temporary credential token that S3 Access Grants vends.</p>
	 * @public
	 */
	Credentials?: Credentials;
	/**
	 * <p>The S3 URI path of the data to which you are being granted temporary access credentials. </p>
	 * @public
	 */
	MatchedGrantTarget?: string;
}
/**
 * @public
 *
 * The input for {@link ListCallerAccessGrantsCommand}.
 */
export interface ListCallerAccessGrantsCommandInput
	extends ListCallerAccessGrantsRequest {}
/**
 * @public
 *
 * The output of {@link ListCallerAccessGrantsCommand}.
 */
export interface ListCallerAccessGrantsCommandOutput
	extends ListCallerAccessGrantsResult,
		__MetadataBearer {}
/**
 * <p>Part of <code>ListCallerAccessGrantsResult</code>. Each entry includes the
 *          permission level (READ, WRITE, or READWRITE) and the grant scope of the access grant. If the grant also includes an application ARN, the grantee can only access the S3 data through this application.</p>
 * @public
 */
export interface ListCallerAccessGrantsEntry {
	/**
	 * <p>The type of permission granted, which can be one of the following values:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <code>READ</code> - Grants read-only access to the S3 data.</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>WRITE</code> - Grants write-only access to the S3 data.</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <code>READWRITE</code> - Grants both read and write access to the S3 data.</p>
	 *             </li>
	 *          </ul>
	 * @public
	 */
	Permission?: Permission;
	/**
	 * <p>The S3 path of the data to which you have been granted access. </p>
	 * @public
	 */
	GrantScope?: string;
	/**
	 * <p>The Amazon Resource Name (ARN) of an Amazon Web Services IAM Identity Center application associated with your Identity Center instance. If the grant includes an application ARN, the grantee can only access the S3 data through this application. </p>
	 * @public
	 */
	ApplicationArn?: string;
}
/**
 * @public
 */
export interface ListCallerAccessGrantsRequest {
	/**
	 * <p>The Amazon Web Services account ID of the S3 Access Grants instance.</p>
	 * @public
	 */
	AccountId?: string;
	/**
	 * <p>The S3 path of the data that you would like to access. Must start with <code>s3://</code>. You can optionally pass only the beginning characters of a path, and S3 Access Grants will search for all applicable grants for the path fragment. </p>
	 * @public
	 */
	GrantScope?: string;
	/**
	 * <p>A pagination token to request the next page of results. Pass this value into a subsequent <code>List Caller Access Grants</code> request in order to retrieve the next page of results.</p>
	 * @public
	 */
	NextToken?: string;
	/**
	 * <p>The maximum number of access grants that you would like returned in the <code>List Caller Access Grants</code> response. If the results include the pagination token <code>NextToken</code>, make another call using the <code>NextToken</code> to determine if there are more results.</p>
	 * @public
	 */
	MaxResults?: number;
	/**
	 * <p>If this optional parameter is passed in the request, a filter is applied to the results. The results will include only the access grants for the caller's Identity Center application or for any other applications (<code>ALL</code>).</p>
	 * @public
	 */
	AllowedByApplication?: boolean;
}
/**
 * @public
 */
export interface ListCallerAccessGrantsResult {
	/**
	 * <p>A pagination token that you can use to request the next page of results. Pass this value into a subsequent <code>List Caller Access Grants</code> request in order to retrieve the next page of results.</p>
	 * @public
	 */
	NextToken?: string;
	/**
	 * <p>A list of the caller's access grants that were created using S3 Access Grants and that grant the caller access to the S3 data of the Amazon Web Services account ID that was specified in the request. </p>
	 * @public
	 */
	CallerAccessGrantsList?: ListCallerAccessGrantsEntry[];
}
/**
 * @public
 */
export type Permission = (typeof Permission)[keyof typeof Permission];
/**
 * @public
 */
export type Privilege = (typeof Privilege)[keyof typeof Privilege];
/**
 * @public
 */
export type S3PrefixType = (typeof S3PrefixType)[keyof typeof S3PrefixType];

export {};
