// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/**
 * Generated by scripts/dts-bundler/README.md
 * Manual change contained:
 * * {@link CompatibleHttpResponse}: Add compatible interface for response payload to harmonize AWS SDK and custom
 * 		clients.
 * * {@link GetObjectCommandOutput.Body}: Update the type to `CompatibleHttpResponse` and make it required as fetch
 * 		Response always extends from Body class, the body consumption utilities always presents.
 * * {@link PutObjectRequest.Body}: Remove Node.js specific `Readable` type and add `ArrayBuffer` and `ArrayBufferView`
 * * {@link UploadPartRequest.Body}: Remove Node.js specific `Readable` type and add `ArrayBuffer` and `ArrayBufferView`
 */
import { MetadataBearer as __MetadataBearer } from '@aws-sdk/types';
import {
	HttpResponse,
	ResponseBodyMixin,
} from '@aws-amplify/core/internals/aws-client-utils';

/**
 * Compatible type for S3 streaming body exposed via Amplify public interfaces, like {@link GetObjectCommandOutput}
 * exposed via download API. It's also compatible with the custom transfer handler interface {@link HttpResponse.body}.
 *
 * @internal
 */
export type CompatibleHttpResponse = Omit<HttpResponse, 'body'> & {
	body: ResponseBodyMixin & Blob;
};
declare const ArchiveStatus: {
	readonly ARCHIVE_ACCESS: 'ARCHIVE_ACCESS';
	readonly DEEP_ARCHIVE_ACCESS: 'DEEP_ARCHIVE_ACCESS';
};
declare const ChecksumAlgorithm: {
	readonly CRC32: 'CRC32';
	readonly CRC32C: 'CRC32C';
	readonly SHA1: 'SHA1';
	readonly SHA256: 'SHA256';
};
declare const ChecksumMode: {
	readonly ENABLED: 'ENABLED';
};
declare const EncodingType: {
	readonly url: 'url';
};
declare const MetadataDirective: {
	readonly COPY: 'COPY';
	readonly REPLACE: 'REPLACE';
};
declare const ObjectCannedACL: {
	readonly authenticated_read: 'authenticated-read';
	readonly aws_exec_read: 'aws-exec-read';
	readonly bucket_owner_full_control: 'bucket-owner-full-control';
	readonly bucket_owner_read: 'bucket-owner-read';
	readonly private: 'private';
	readonly public_read: 'public-read';
	readonly public_read_write: 'public-read-write';
};
declare const ObjectLockLegalHoldStatus: {
	readonly OFF: 'OFF';
	readonly ON: 'ON';
};
declare const ObjectLockMode: {
	readonly COMPLIANCE: 'COMPLIANCE';
	readonly GOVERNANCE: 'GOVERNANCE';
};
declare const ObjectStorageClass: {
	readonly DEEP_ARCHIVE: 'DEEP_ARCHIVE';
	readonly GLACIER: 'GLACIER';
	readonly GLACIER_IR: 'GLACIER_IR';
	readonly INTELLIGENT_TIERING: 'INTELLIGENT_TIERING';
	readonly ONEZONE_IA: 'ONEZONE_IA';
	readonly OUTPOSTS: 'OUTPOSTS';
	readonly REDUCED_REDUNDANCY: 'REDUCED_REDUNDANCY';
	readonly SNOW: 'SNOW';
	readonly STANDARD: 'STANDARD';
	readonly STANDARD_IA: 'STANDARD_IA';
};
declare const ReplicationStatus: {
	readonly COMPLETE: 'COMPLETE';
	readonly FAILED: 'FAILED';
	readonly PENDING: 'PENDING';
	readonly REPLICA: 'REPLICA';
};
declare const RequestCharged: {
	readonly requester: 'requester';
};
declare const RequestPayer: {
	readonly requester: 'requester';
};
declare const ServerSideEncryption: {
	readonly AES256: 'AES256';
	readonly aws_kms: 'aws:kms';
};
declare const StorageClass: {
	readonly DEEP_ARCHIVE: 'DEEP_ARCHIVE';
	readonly GLACIER: 'GLACIER';
	readonly GLACIER_IR: 'GLACIER_IR';
	readonly INTELLIGENT_TIERING: 'INTELLIGENT_TIERING';
	readonly ONEZONE_IA: 'ONEZONE_IA';
	readonly OUTPOSTS: 'OUTPOSTS';
	readonly REDUCED_REDUNDANCY: 'REDUCED_REDUNDANCY';
	readonly SNOW: 'SNOW';
	readonly STANDARD: 'STANDARD';
	readonly STANDARD_IA: 'STANDARD_IA';
};
declare const TaggingDirective: {
	readonly COPY: 'COPY';
	readonly REPLACE: 'REPLACE';
};
/**
 * @public
 *
 * The input for {@link AbortMultipartUploadCommand}.
 */
export type AbortMultipartUploadCommandInput = AbortMultipartUploadRequest;
/**
 * @public
 *
 * The output of {@link AbortMultipartUploadCommand}.
 */
export interface AbortMultipartUploadCommandOutput
	extends AbortMultipartUploadOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface AbortMultipartUploadOutput {
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 */
	RequestCharged?: RequestCharged | string;
}
/**
 * @public
 */
export interface AbortMultipartUploadRequest {
	/**
	 * <p>The bucket name to which the upload was taking place. </p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>Key of the object for which the multipart upload was initiated.</p>
	 */
	Key: string | undefined;
	/**
	 * <p>Upload ID that identifies the multipart upload.</p>
	 */
	UploadId: string | undefined;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. For information about downloading
	 *          objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
}
/**
 * @public
 * <p>Container for all (if there are any) keys between Prefix and the next occurrence of the
 *          string specified by a delimiter. CommonPrefixes lists keys that act like subdirectories in
 *          the directory specified by Prefix. For example, if the prefix is notes/ and the delimiter
 *          is a slash (/) as in notes/summer/july, the common prefix is notes/summer/. </p>
 */
export interface CommonPrefix {
	/**
	 * <p>Container for the specified common prefix.</p>
	 */
	Prefix?: string;
}
/**
 * @public
 *
 * The input for {@link CompleteMultipartUploadCommand}.
 */
export type CompleteMultipartUploadCommandInput =
	CompleteMultipartUploadRequest;
/**
 * @public
 *
 * The output of {@link CompleteMultipartUploadCommand}.
 */
export interface CompleteMultipartUploadCommandOutput
	extends CompleteMultipartUploadOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface CompleteMultipartUploadOutput {
	/**
	 * <p>The URI that identifies the newly created object.</p>
	 */
	Location?: string;
	/**
	 * <p>The name of the bucket that contains the newly created object. Does not return the access point
	 *          ARN or access point alias if used.</p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	Bucket?: string;
	/**
	 * <p>The object key of the newly created object.</p>
	 */
	Key?: string;
	/**
	 * <p>If the object expiration is configured, this will contain the expiration date
	 *             (<code>expiry-date</code>) and rule ID (<code>rule-id</code>). The value of
	 *             <code>rule-id</code> is URL-encoded.</p>
	 */
	Expiration?: string;
	/**
	 * <p>Entity tag that identifies the newly created object's data. Objects with different
	 *          object data will have different entity tags. The entity tag is an opaque string. The entity
	 *          tag may or may not be an MD5 digest of the object data. If the entity tag is not an MD5
	 *          digest of the object data, it will contain one or more nonhexadecimal characters and/or
	 *          will consist of less than 32 or more than 32 hexadecimal digits. For more information about
	 *          how the entity tag is calculated, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object
	 *             integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ETag?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32C?: string;
	/**
	 * <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA1?: string;
	/**
	 * <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA256?: string;
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
	 *          AES256, <code>aws:kms</code>).</p>
	 */
	ServerSideEncryption?: ServerSideEncryption | string;
	/**
	 * <p>Version ID of the newly created object, in case the bucket has versioning turned
	 *          on.</p>
	 */
	VersionId?: string;
	/**
	 * <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
	 *          encryption customer managed key that was used for the object.</p>
	 */
	SSEKMSKeyId?: string;
	/**
	 * <p>Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption
	 *          with Amazon Web Services KMS (SSE-KMS).</p>
	 */
	BucketKeyEnabled?: boolean;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 */
	RequestCharged?: RequestCharged | string;
}
/**
 * @public
 */
export interface CompleteMultipartUploadRequest {
	/**
	 * <p>Name of the bucket to which the multipart upload was initiated.</p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>Object key for which the multipart upload was initiated.</p>
	 */
	Key: string | undefined;
	/**
	 * <p>The container for the multipart upload request information.</p>
	 */
	MultipartUpload?: CompletedMultipartUpload;
	/**
	 * <p>ID for the initiated multipart upload.</p>
	 */
	UploadId: string | undefined;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32?: string;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32C?: string;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA1?: string;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA256?: string;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. For information about downloading
	 *          objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
	/**
	 * <p>The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created
	 *     using a checksum algorithm. For more information,
	 *     see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm.
	 *     For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	SSECustomerKey?: string;
	/**
	 * <p>The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum
	 *     algorithm. For more information,
	 *     see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	SSECustomerKeyMD5?: string;
}
/**
 * @public
 * <p>The container for the completed multipart upload details.</p>
 */
export interface CompletedMultipartUpload {
	/**
	 * <p>Array of CompletedPart data types.</p>
	 *          <p>If you do not supply a valid <code>Part</code> with your request, the service sends back
	 *          an HTTP 400 response.</p>
	 */
	Parts?: CompletedPart[];
}
/**
 * @public
 * <p>Details of the parts that were uploaded.</p>
 */
export interface CompletedPart {
	/**
	 * <p>Entity tag returned when the part was uploaded.</p>
	 */
	ETag?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32C?: string;
	/**
	 * <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA1?: string;
	/**
	 * <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA256?: string;
	/**
	 * <p>Part number that identifies the part. This is a positive integer between 1 and
	 *          10,000.</p>
	 */
	PartNumber?: number;
}
/**
 * @public
 *
 * The input for {@link CopyObjectCommand}.
 */
export type CopyObjectCommandInput = CopyObjectRequest;
/**
 * @public
 *
 * The output of {@link CopyObjectCommand}.
 */
export interface CopyObjectCommandOutput
	extends CopyObjectOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface CopyObjectOutput {
	/**
	 * <p>Container for all response elements.</p>
	 */
	CopyObjectResult?: CopyObjectResult;
	/**
	 * <p>If the object expiration is configured, the response includes this header.</p>
	 */
	Expiration?: string;
	/**
	 * <p>Version of the copied object in the destination bucket.</p>
	 */
	CopySourceVersionId?: string;
	/**
	 * <p>Version ID of the newly created copy.</p>
	 */
	VersionId?: string;
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
	 *          AES256, <code>aws:kms</code>).</p>
	 */
	ServerSideEncryption?: ServerSideEncryption | string;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header confirming the encryption algorithm used.</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide round-trip message integrity verification of
	 *          the customer-provided encryption key.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
	 *          encryption customer managed key that was used for the object.</p>
	 */
	SSEKMSKeyId?: string;
	/**
	 * <p>If present, specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The
	 *          value of this header is a base64-encoded UTF-8 string holding JSON with the encryption
	 *          context key-value pairs.</p>
	 */
	SSEKMSEncryptionContext?: string;
	/**
	 * <p>Indicates whether the copied object uses an S3 Bucket Key for server-side encryption
	 *          with Amazon Web Services KMS (SSE-KMS).</p>
	 */
	BucketKeyEnabled?: boolean;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 */
	RequestCharged?: RequestCharged | string;
}
/**
 * @public
 */
export interface CopyObjectRequest {
	/**
	 * <p>The canned ACL to apply to the object.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	ACL?: ObjectCannedACL | string;
	/**
	 * <p>The name of the destination bucket.</p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>Specifies caching behavior along the request/reply chain.</p>
	 */
	CacheControl?: string;
	/**
	 * <p>Indicates the algorithm you want Amazon S3 to use to create the checksum for the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in
	 *     the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm | string;
	/**
	 * <p>Specifies presentational information for the object.</p>
	 */
	ContentDisposition?: string;
	/**
	 * <p>Specifies what content encodings have been applied to the object and thus what decoding
	 *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header
	 *          field.</p>
	 */
	ContentEncoding?: string;
	/**
	 * <p>The language the content is in.</p>
	 */
	ContentLanguage?: string;
	/**
	 * <p>A standard MIME type describing the format of the object data.</p>
	 */
	ContentType?: string;
	/**
	 * <p>Specifies the source object for the copy operation. You specify the value in one of two
	 *          formats, depending on whether you want to access the source object through an <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">access point</a>:</p>
	 *          <ul>
	 *             <li>
	 *                <p>For objects not accessed through an access point, specify the name of the source bucket
	 *                and the key of the source object, separated by a slash (/). For example, to copy the
	 *                object <code>reports/january.pdf</code> from the bucket
	 *                <code>awsexamplebucket</code>, use <code>awsexamplebucket/reports/january.pdf</code>.
	 *                The value must be URL-encoded.</p>
	 *             </li>
	 *             <li>
	 *                <p>For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format <code>arn:aws:s3:<Region>:<account-id>:accesspoint/<access-point-name>/object/<key></code>. For example, to copy the object <code>reports/january.pdf</code> through access point <code>my-access-point</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/reports/january.pdf</code>. The value must be URL encoded.</p>
	 *                <note>
	 *                   <p>Amazon S3 supports copy operations using access points only when the source and destination buckets are in the same Amazon Web Services Region.</p>
	 *                </note>
	 *                <p>Alternatively, for objects accessed through Amazon S3 on Outposts, specify the ARN of the object as accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/object/<key></code>. For example, to copy the object <code>reports/january.pdf</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/object/reports/january.pdf</code>. The value must be URL-encoded.  </p>
	 *             </li>
	 *          </ul>
	 *          <p>To copy a specific version of an object, append <code>?versionId=<version-id></code>
	 *          to the value (for example,
	 *             <code>awsexamplebucket/reports/january.pdf?versionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893</code>).
	 *          If you don't specify a version ID, Amazon S3 copies the latest version of the source
	 *          object.</p>
	 */
	CopySource: string | undefined;
	/**
	 * <p>Copies the object if its entity tag (ETag) matches the specified tag.</p>
	 */
	CopySourceIfMatch?: string;
	/**
	 * <p>Copies the object if it has been modified since the specified time.</p>
	 */
	CopySourceIfModifiedSince?: Date;
	/**
	 * <p>Copies the object if its entity tag (ETag) is different than the specified ETag.</p>
	 */
	CopySourceIfNoneMatch?: string;
	/**
	 * <p>Copies the object if it hasn't been modified since the specified time.</p>
	 */
	CopySourceIfUnmodifiedSince?: Date;
	/**
	 * <p>The date and time at which the object is no longer cacheable.</p>
	 */
	Expires?: Date;
	/**
	 * <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	GrantFullControl?: string;
	/**
	 * <p>Allows grantee to read the object data and its metadata.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	GrantRead?: string;
	/**
	 * <p>Allows grantee to read the object ACL.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	GrantReadACP?: string;
	/**
	 * <p>Allows grantee to write the ACL for the applicable object.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	GrantWriteACP?: string;
	/**
	 * <p>The key of the destination object.</p>
	 */
	Key: string | undefined;
	/**
	 * <p>A map of metadata to store with the object in S3.</p>
	 */
	Metadata?: Record<string, string>;
	/**
	 * <p>Specifies whether the metadata is copied from the source object or replaced with
	 *          metadata provided in the request.</p>
	 */
	MetadataDirective?: MetadataDirective | string;
	/**
	 * <p>Specifies whether the object tag-set are copied from the source object or replaced with
	 *          tag-set provided in the request.</p>
	 */
	TaggingDirective?: TaggingDirective | string;
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
	 *          AES256, <code>aws:kms</code>).</p>
	 */
	ServerSideEncryption?: ServerSideEncryption | string;
	/**
	 * <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The
	 *          STANDARD storage class provides high durability and high availability. Depending on
	 *          performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses
	 *          the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 */
	StorageClass?: StorageClass | string;
	/**
	 * <p>If the bucket is configured as a website, redirects requests for this object to another
	 *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
	 *          the object metadata. This value is unique to each object and is not copied when using the
	 *             <code>x-amz-metadata-directive</code> header. Instead, you may opt to provide this
	 *          header in combination with the directive.</p>
	 */
	WebsiteRedirectLocation?: string;
	/**
	 * <p>Specifies the algorithm to use to when encrypting the object (for example,
	 *          AES256).</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This
	 *          value is used to store the object and then it is discarded; Amazon S3 does not store the
	 *          encryption key. The key must be appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
	 */
	SSECustomerKey?: string;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>Specifies the Amazon Web Services KMS key ID to use for object encryption. All GET and PUT requests
	 *          for an object protected by Amazon Web Services KMS will fail if not made via SSL or using SigV4. For
	 *          information about configuring using any of the officially supported Amazon Web Services SDKs and Amazon Web Services
	 *          CLI, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version">Specifying the
	 *             Signature Version in Request Authentication</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 */
	SSEKMSKeyId?: string;
	/**
	 * <p>Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of
	 *          this header is a base64-encoded UTF-8 string holding JSON with the encryption context
	 *          key-value pairs.</p>
	 */
	SSEKMSEncryptionContext?: string;
	/**
	 * <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with
	 *          server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code>
	 *          causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS. </p>
	 *          <p>Specifying this header with a COPY action doesn’t affect bucket-level settings for S3
	 *          Bucket Key.</p>
	 */
	BucketKeyEnabled?: boolean;
	/**
	 * <p>Specifies the algorithm to use when decrypting the source object (for example,
	 *          AES256).</p>
	 */
	CopySourceSSECustomerAlgorithm?: string;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source
	 *          object. The encryption key provided in this header must be one that was used when the
	 *          source object was created.</p>
	 */
	CopySourceSSECustomerKey?: string;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 */
	CopySourceSSECustomerKeyMD5?: string;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. For information about downloading
	 *          objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>The tag-set for the object destination object this value must be used in conjunction
	 *          with the <code>TaggingDirective</code>. The tag-set must be encoded as URL Query
	 *          parameters.</p>
	 */
	Tagging?: string;
	/**
	 * <p>The Object Lock mode that you want to apply to the copied object.</p>
	 */
	ObjectLockMode?: ObjectLockMode | string;
	/**
	 * <p>The date and time when you want the copied object's Object Lock to expire.</p>
	 */
	ObjectLockRetainUntilDate?: Date;
	/**
	 * <p>Specifies whether you want to apply a legal hold to the copied object.</p>
	 */
	ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;
	/**
	 * <p>The account ID of the expected destination bucket owner. If the destination bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
	/**
	 * <p>The account ID of the expected source bucket owner. If the source bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedSourceBucketOwner?: string;
}
/**
 * @public
 * <p>Container for all response elements.</p>
 */
export interface CopyObjectResult {
	/**
	 * <p>Returns the ETag of the new object. The ETag reflects only changes to the contents of an
	 *          object, not its metadata.</p>
	 */
	ETag?: string;
	/**
	 * <p>Creation date of the object.</p>
	 */
	LastModified?: Date;
	/**
	 * <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32C?: string;
	/**
	 * <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA1?: string;
	/**
	 * <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA256?: string;
}
/**
 * @public
 *
 * The input for {@link CreateMultipartUploadCommand}.
 */
export type CreateMultipartUploadCommandInput = CreateMultipartUploadRequest;
/**
 * @public
 *
 * The output of {@link CreateMultipartUploadCommand}.
 */
export interface CreateMultipartUploadCommandOutput
	extends CreateMultipartUploadOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface CreateMultipartUploadOutput {
	/**
	 * <p>If the bucket has a lifecycle rule configured with an action to abort incomplete
	 *          multipart uploads and the prefix in the lifecycle rule matches the object name in the
	 *          request, the response includes this header. The header indicates when the initiated
	 *          multipart upload becomes eligible for an abort operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config">
	 *             Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Configuration</a>.</p>
	 *          <p>The response also includes the <code>x-amz-abort-rule-id</code> header that provides the
	 *          ID of the lifecycle configuration rule that defines this action.</p>
	 */
	AbortDate?: Date;
	/**
	 * <p>This header is returned along with the <code>x-amz-abort-date</code> header. It
	 *          identifies the applicable lifecycle configuration rule that defines the action to abort
	 *          incomplete multipart uploads.</p>
	 */
	AbortRuleId?: string;
	/**
	 * <p>The name of the bucket to which the multipart upload was initiated. Does not return the
	 *          access point ARN or access point alias if used.</p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	Bucket?: string;
	/**
	 * <p>Object key for which the multipart upload was initiated.</p>
	 */
	Key?: string;
	/**
	 * <p>ID for the initiated multipart upload.</p>
	 */
	UploadId?: string;
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
	 *          AES256, <code>aws:kms</code>).</p>
	 */
	ServerSideEncryption?: ServerSideEncryption | string;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header confirming the encryption algorithm used.</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide round-trip message integrity verification of
	 *          the customer-provided encryption key.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
	 *          encryption customer managed key that was used for the object.</p>
	 */
	SSEKMSKeyId?: string;
	/**
	 * <p>If present, specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The
	 *          value of this header is a base64-encoded UTF-8 string holding JSON with the encryption
	 *          context key-value pairs.</p>
	 */
	SSEKMSEncryptionContext?: string;
	/**
	 * <p>Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption
	 *          with Amazon Web Services KMS (SSE-KMS).</p>
	 */
	BucketKeyEnabled?: boolean;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 */
	RequestCharged?: RequestCharged | string;
	/**
	 * <p>The algorithm that was used to create a checksum of the object.</p>
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm | string;
}
/**
 * @public
 */
export interface CreateMultipartUploadRequest {
	/**
	 * <p>The canned ACL to apply to the object.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	ACL?: ObjectCannedACL | string;
	/**
	 * <p>The name of the bucket to which to initiate the upload</p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>Specifies caching behavior along the request/reply chain.</p>
	 */
	CacheControl?: string;
	/**
	 * <p>Specifies presentational information for the object.</p>
	 */
	ContentDisposition?: string;
	/**
	 * <p>Specifies what content encodings have been applied to the object and thus what decoding
	 *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header
	 *          field.</p>
	 */
	ContentEncoding?: string;
	/**
	 * <p>The language the content is in.</p>
	 */
	ContentLanguage?: string;
	/**
	 * <p>A standard MIME type describing the format of the object data.</p>
	 */
	ContentType?: string;
	/**
	 * <p>The date and time at which the object is no longer cacheable.</p>
	 */
	Expires?: Date;
	/**
	 * <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	GrantFullControl?: string;
	/**
	 * <p>Allows grantee to read the object data and its metadata.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	GrantRead?: string;
	/**
	 * <p>Allows grantee to read the object ACL.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	GrantReadACP?: string;
	/**
	 * <p>Allows grantee to write the ACL for the applicable object.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	GrantWriteACP?: string;
	/**
	 * <p>Object key for which the multipart upload is to be initiated.</p>
	 */
	Key: string | undefined;
	/**
	 * <p>A map of metadata to store with the object in S3.</p>
	 */
	Metadata?: Record<string, string>;
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
	 *          AES256, <code>aws:kms</code>).</p>
	 */
	ServerSideEncryption?: ServerSideEncryption | string;
	/**
	 * <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The
	 *          STANDARD storage class provides high durability and high availability. Depending on
	 *          performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses
	 *          the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 */
	StorageClass?: StorageClass | string;
	/**
	 * <p>If the bucket is configured as a website, redirects requests for this object to another
	 *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
	 *          the object metadata.</p>
	 */
	WebsiteRedirectLocation?: string;
	/**
	 * <p>Specifies the algorithm to use to when encrypting the object (for example,
	 *          AES256).</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This
	 *          value is used to store the object and then it is discarded; Amazon S3 does not store the
	 *          encryption key. The key must be appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
	 */
	SSECustomerKey?: string;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>Specifies the ID of the symmetric encryption customer managed key to use for object encryption.
	 *          All GET and PUT requests for an object protected by Amazon Web Services KMS will fail if not made via SSL
	 *          or using SigV4. For information about configuring using any of the officially supported
	 *          Amazon Web Services SDKs and Amazon Web Services CLI, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version">Specifying the Signature Version in Request Authentication</a>
	 *          in the <i>Amazon S3 User Guide</i>.</p>
	 */
	SSEKMSKeyId?: string;
	/**
	 * <p>Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of
	 *          this header is a base64-encoded UTF-8 string holding JSON with the encryption context
	 *          key-value pairs.</p>
	 */
	SSEKMSEncryptionContext?: string;
	/**
	 * <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with
	 *          server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code>
	 *          causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p>
	 *          <p>Specifying this header with an object action doesn’t affect bucket-level settings for S3
	 *          Bucket Key.</p>
	 */
	BucketKeyEnabled?: boolean;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. For information about downloading
	 *          objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>The tag-set for the object. The tag-set must be encoded as URL Query parameters.</p>
	 */
	Tagging?: string;
	/**
	 * <p>Specifies the Object Lock mode that you want to apply to the uploaded object.</p>
	 */
	ObjectLockMode?: ObjectLockMode | string;
	/**
	 * <p>Specifies the date and time when you want the Object Lock to expire.</p>
	 */
	ObjectLockRetainUntilDate?: Date;
	/**
	 * <p>Specifies whether you want to apply a legal hold to the uploaded object.</p>
	 */
	ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
	/**
	 * <p>Indicates the algorithm you want Amazon S3 to use to create the checksum for the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in
	 *     the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm | string;
}
/**
 * @public
 *
 * The input for {@link DeleteObjectCommand}.
 */
export type DeleteObjectCommandInput = DeleteObjectRequest;
/**
 * @public
 *
 * The output of {@link DeleteObjectCommand}.
 */
export interface DeleteObjectCommandOutput
	extends DeleteObjectOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface DeleteObjectOutput {
	/**
	 * <p>Specifies whether the versioned object that was permanently deleted was (true) or was
	 *          not (false) a delete marker.</p>
	 */
	DeleteMarker?: boolean;
	/**
	 * <p>Returns the version ID of the delete marker created as a result of the DELETE
	 *          operation.</p>
	 */
	VersionId?: string;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 */
	RequestCharged?: RequestCharged | string;
}
/**
 * @public
 */
export interface DeleteObjectRequest {
	/**
	 * <p>The bucket name of the bucket containing the object. </p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>Key name of the object to delete.</p>
	 */
	Key: string | undefined;
	/**
	 * <p>The concatenation of the authentication device's serial number, a space, and the value
	 *          that is displayed on your authentication device. Required to permanently delete a versioned
	 *          object if versioning is configured with MFA delete enabled.</p>
	 */
	MFA?: string;
	/**
	 * <p>VersionId used to reference a specific version of the object.</p>
	 */
	VersionId?: string;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. For information about downloading
	 *          objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process
	 *          this operation. To use this header, you must have the
	 *             <code>s3:BypassGovernanceRetention</code> permission.</p>
	 */
	BypassGovernanceRetention?: boolean;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
}
/**
 * @public
 *
 * The input for {@link GetObjectCommand}.
 */
export type GetObjectCommandInput = GetObjectRequest;
/**
 * @public
 *
 * The output of {@link GetObjectCommand}.
 */
export interface GetObjectCommandOutput
	extends GetObjectOutput,
		__MetadataBearer {
	Body: CompatibleHttpResponse['body'];
}
/**
 * @public
 */
export interface GetObjectOutput {
	/**
	 * <p>Object data.</p>
	 */
	Body?: CompatibleHttpResponse['body'];
	/**
	 * <p>Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If
	 *          false, this response header does not appear in the response.</p>
	 */
	DeleteMarker?: boolean;
	/**
	 * <p>Indicates that a range of bytes was specified.</p>
	 */
	AcceptRanges?: string;
	/**
	 * <p>If the object expiration is configured (see PUT Bucket lifecycle), the response includes
	 *          this header. It includes the <code>expiry-date</code> and <code>rule-id</code> key-value
	 *          pairs providing object expiration information. The value of the <code>rule-id</code> is
	 *          URL-encoded.</p>
	 */
	Expiration?: string;
	/**
	 * <p>Provides information about object restoration action and expiration time of the restored
	 *          object copy.</p>
	 */
	Restore?: string;
	/**
	 * <p>Creation date of the object.</p>
	 */
	LastModified?: Date;
	/**
	 * <p>Size of the body in bytes.</p>
	 */
	ContentLength?: number;
	/**
	 * <p>An entity tag (ETag) is an opaque identifier assigned by a web server to a specific
	 *          version of a resource found at a URL.</p>
	 */
	ETag?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32C?: string;
	/**
	 * <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA1?: string;
	/**
	 * <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA256?: string;
	/**
	 * <p>This is set to the number of metadata entries not returned in <code>x-amz-meta</code>
	 *          headers. This can happen if you create metadata using an API like SOAP that supports more
	 *          flexible metadata than the REST API. For example, using SOAP, you can create metadata whose
	 *          values are not legal HTTP headers.</p>
	 */
	MissingMeta?: number;
	/**
	 * <p>Version of the object.</p>
	 */
	VersionId?: string;
	/**
	 * <p>Specifies caching behavior along the request/reply chain.</p>
	 */
	CacheControl?: string;
	/**
	 * <p>Specifies presentational information for the object.</p>
	 */
	ContentDisposition?: string;
	/**
	 * <p>Specifies what content encodings have been applied to the object and thus what decoding
	 *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header
	 *          field.</p>
	 */
	ContentEncoding?: string;
	/**
	 * <p>The language the content is in.</p>
	 */
	ContentLanguage?: string;
	/**
	 * <p>The portion of the object returned in the response.</p>
	 */
	ContentRange?: string;
	/**
	 * <p>A standard MIME type describing the format of the object data.</p>
	 */
	ContentType?: string;
	/**
	 * <p>The date and time at which the object is no longer cacheable.</p>
	 */
	Expires?: Date;
	/**
	 * <p>If the bucket is configured as a website, redirects requests for this object to another
	 *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
	 *          the object metadata.</p>
	 */
	WebsiteRedirectLocation?: string;
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
	 *          AES256, <code>aws:kms</code>).</p>
	 */
	ServerSideEncryption?: ServerSideEncryption | string;
	/**
	 * <p>A map of metadata to store with the object in S3.</p>
	 */
	Metadata?: Record<string, string>;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header confirming the encryption algorithm used.</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide round-trip message integrity verification of
	 *          the customer-provided encryption key.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
	 *          encryption customer managed key that was used for the object.</p>
	 */
	SSEKMSKeyId?: string;
	/**
	 * <p>Indicates whether the object uses an S3 Bucket Key for server-side encryption with Amazon Web Services
	 *          KMS (SSE-KMS).</p>
	 */
	BucketKeyEnabled?: boolean;
	/**
	 * <p>Provides storage class information of the object. Amazon S3 returns this header for all
	 *          objects except for S3 Standard storage class objects.</p>
	 */
	StorageClass?: StorageClass | string;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 */
	RequestCharged?: RequestCharged | string;
	/**
	 * <p>Amazon S3 can return this if your request involves a bucket that is either a source or
	 *          destination in a replication rule.</p>
	 */
	ReplicationStatus?: ReplicationStatus | string;
	/**
	 * <p>The count of parts this object has. This value is only returned if you specify
	 *             <code>partNumber</code> in your request and the object was uploaded as a multipart
	 *          upload.</p>
	 */
	PartsCount?: number;
	/**
	 * <p>The number of tags, if any, on the object.</p>
	 */
	TagCount?: number;
	/**
	 * <p>The Object Lock mode currently in place for this object.</p>
	 */
	ObjectLockMode?: ObjectLockMode | string;
	/**
	 * <p>The date and time when this object's Object Lock will expire.</p>
	 */
	ObjectLockRetainUntilDate?: Date;
	/**
	 * <p>Indicates whether this object has an active legal hold. This field is only returned if
	 *          you have permission to view an object's legal hold status. </p>
	 */
	ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;
}
/**
 * @public
 */
export interface GetObjectRequest {
	/**
	 * <p>The bucket name containing the object. </p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When using an Object Lambda access point the hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-object-lambda.<i>Region</i>.amazonaws.com.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>Return the object only if its entity tag (ETag) is the same as the one specified;
	 *          otherwise, return a 412 (precondition failed) error.</p>
	 */
	IfMatch?: string;
	/**
	 * <p>Return the object only if it has been modified since the specified time; otherwise,
	 *          return a 304 (not modified) error.</p>
	 */
	IfModifiedSince?: Date;
	/**
	 * <p>Return the object only if its entity tag (ETag) is different from the one specified;
	 *          otherwise, return a 304 (not modified) error.</p>
	 */
	IfNoneMatch?: string;
	/**
	 * <p>Return the object only if it has not been modified since the specified time; otherwise,
	 *          return a 412 (precondition failed) error.</p>
	 */
	IfUnmodifiedSince?: Date;
	/**
	 * <p>Key of the object to get.</p>
	 */
	Key: string | undefined;
	/**
	 * <p>Downloads the specified range bytes of an object. For more information about the HTTP
	 *          Range header, see <a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-range">https://www.rfc-editor.org/rfc/rfc9110.html#name-range</a>.</p>
	 *          <note>
	 *             <p>Amazon S3 doesn't support retrieving multiple ranges of data per <code>GET</code>
	 *             request.</p>
	 *          </note>
	 */
	Range?: string;
	/**
	 * <p>Sets the <code>Cache-Control</code> header of the response.</p>
	 */
	ResponseCacheControl?: string;
	/**
	 * <p>Sets the <code>Content-Disposition</code> header of the response</p>
	 */
	ResponseContentDisposition?: string;
	/**
	 * <p>Sets the <code>Content-Encoding</code> header of the response.</p>
	 */
	ResponseContentEncoding?: string;
	/**
	 * <p>Sets the <code>Content-Language</code> header of the response.</p>
	 */
	ResponseContentLanguage?: string;
	/**
	 * <p>Sets the <code>Content-Type</code> header of the response.</p>
	 */
	ResponseContentType?: string;
	/**
	 * <p>Sets the <code>Expires</code> header of the response.</p>
	 */
	ResponseExpires?: Date;
	/**
	 * <p>VersionId used to reference a specific version of the object.</p>
	 */
	VersionId?: string;
	/**
	 * <p>Specifies the algorithm to use to when decrypting the object (for example,
	 *          AES256).</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 used to encrypt the data. This
	 *          value is used to decrypt the object when recovering it and must match the one used when
	 *          storing the data. The key must be appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
	 */
	SSECustomerKey?: string;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. For information about downloading
	 *          objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>Part number of the object being read. This is a positive integer between 1 and 10,000.
	 *          Effectively performs a 'ranged' GET request for the part specified. Useful for downloading
	 *          just a part of an object.</p>
	 */
	PartNumber?: number;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
	/**
	 * <p>To retrieve the checksum, this mode must be enabled.</p>
	 */
	ChecksumMode?: ChecksumMode | string;
}
/**
 * @public
 *
 * The input for {@link HeadObjectCommand}.
 */
export type HeadObjectCommandInput = HeadObjectRequest;
/**
 * @public
 *
 * The output of {@link HeadObjectCommand}.
 */
export interface HeadObjectCommandOutput
	extends HeadObjectOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface HeadObjectOutput {
	/**
	 * <p>Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If
	 *          false, this response header does not appear in the response.</p>
	 */
	DeleteMarker?: boolean;
	/**
	 * <p>Indicates that a range of bytes was specified.</p>
	 */
	AcceptRanges?: string;
	/**
	 * <p>If the object expiration is configured (see PUT Bucket lifecycle), the response includes
	 *          this header. It includes the <code>expiry-date</code> and <code>rule-id</code> key-value
	 *          pairs providing object expiration information. The value of the <code>rule-id</code> is
	 *          URL-encoded.</p>
	 */
	Expiration?: string;
	/**
	 * <p>If the object is an archived object (an object whose storage class is GLACIER), the
	 *          response includes this header if either the archive restoration is in progress (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html">RestoreObject</a> or an archive copy is already restored.</p>
	 *          <p> If an archive copy is already restored, the header value indicates when Amazon S3 is
	 *          scheduled to delete the object copy. For example:</p>
	 *          <p>
	 *             <code>x-amz-restore: ongoing-request="false", expiry-date="Fri, 21 Dec 2012 00:00:00
	 *             GMT"</code>
	 *          </p>
	 *          <p>If the object restoration is in progress, the header returns the value
	 *             <code>ongoing-request="true"</code>.</p>
	 *          <p>For more information about archiving objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html#lifecycle-transition-general-considerations">Transitioning Objects: General Considerations</a>.</p>
	 */
	Restore?: string;
	/**
	 * <p>The archive state of the head object.</p>
	 */
	ArchiveStatus?: ArchiveStatus | string;
	/**
	 * <p>Creation date of the object.</p>
	 */
	LastModified?: Date;
	/**
	 * <p>Size of the body in bytes.</p>
	 */
	ContentLength?: number;
	/**
	 * <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32C?: string;
	/**
	 * <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA1?: string;
	/**
	 * <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA256?: string;
	/**
	 * <p>An entity tag (ETag) is an opaque identifier assigned by a web server to a specific
	 *          version of a resource found at a URL.</p>
	 */
	ETag?: string;
	/**
	 * <p>This is set to the number of metadata entries not returned in <code>x-amz-meta</code>
	 *          headers. This can happen if you create metadata using an API like SOAP that supports more
	 *          flexible metadata than the REST API. For example, using SOAP, you can create metadata whose
	 *          values are not legal HTTP headers.</p>
	 */
	MissingMeta?: number;
	/**
	 * <p>Version of the object.</p>
	 */
	VersionId?: string;
	/**
	 * <p>Specifies caching behavior along the request/reply chain.</p>
	 */
	CacheControl?: string;
	/**
	 * <p>Specifies presentational information for the object.</p>
	 */
	ContentDisposition?: string;
	/**
	 * <p>Specifies what content encodings have been applied to the object and thus what decoding
	 *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header
	 *          field.</p>
	 */
	ContentEncoding?: string;
	/**
	 * <p>The language the content is in.</p>
	 */
	ContentLanguage?: string;
	/**
	 * <p>A standard MIME type describing the format of the object data.</p>
	 */
	ContentType?: string;
	/**
	 * <p>The date and time at which the object is no longer cacheable.</p>
	 */
	Expires?: Date;
	/**
	 * <p>If the bucket is configured as a website, redirects requests for this object to another
	 *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
	 *          the object metadata.</p>
	 */
	WebsiteRedirectLocation?: string;
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
	 *          AES256, <code>aws:kms</code>).</p>
	 */
	ServerSideEncryption?: ServerSideEncryption | string;
	/**
	 * <p>A map of metadata to store with the object in S3.</p>
	 */
	Metadata?: Record<string, string>;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header confirming the encryption algorithm used.</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide round-trip message integrity verification of
	 *          the customer-provided encryption key.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
	 *          encryption customer managed key that was used for the object.</p>
	 */
	SSEKMSKeyId?: string;
	/**
	 * <p>Indicates whether the object uses an S3 Bucket Key for server-side encryption with Amazon Web Services
	 *          KMS (SSE-KMS).</p>
	 */
	BucketKeyEnabled?: boolean;
	/**
	 * <p>Provides storage class information of the object. Amazon S3 returns this header for all
	 *          objects except for S3 Standard storage class objects.</p>
	 *          <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a>.</p>
	 */
	StorageClass?: StorageClass | string;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 */
	RequestCharged?: RequestCharged | string;
	/**
	 * <p>Amazon S3 can return this header if your request involves a bucket that is either a source or
	 *          a destination in a replication rule.</p>
	 *          <p>In replication, you have a source bucket on which you configure replication and
	 *          destination bucket or buckets where Amazon S3 stores object replicas. When you request an object
	 *             (<code>GetObject</code>) or object metadata (<code>HeadObject</code>) from these
	 *          buckets, Amazon S3 will return the <code>x-amz-replication-status</code> header in the response
	 *          as follows:</p>
	 *          <ul>
	 *             <li>
	 *                <p>
	 *                   <b>If requesting an object from the source bucket</b>,
	 *                Amazon S3 will return the <code>x-amz-replication-status</code> header if the object in
	 *                your request is eligible for replication.</p>
	 *                <p> For example, suppose that in your replication configuration, you specify object
	 *                prefix <code>TaxDocs</code> requesting Amazon S3 to replicate objects with key prefix
	 *                   <code>TaxDocs</code>. Any objects you upload with this key name prefix, for
	 *                example <code>TaxDocs/document1.pdf</code>, are eligible for replication. For any
	 *                object request with this key name prefix, Amazon S3 will return the
	 *                   <code>x-amz-replication-status</code> header with value PENDING, COMPLETED or
	 *                FAILED indicating object replication status.</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <b>If requesting an object from a destination
	 *                bucket</b>, Amazon S3 will return the <code>x-amz-replication-status</code> header
	 *                with value REPLICA if the object in your request is a replica that Amazon S3 created and
	 *                there is no replica modification replication in progress.</p>
	 *             </li>
	 *             <li>
	 *                <p>
	 *                   <b>When replicating objects to multiple destination
	 *                   buckets</b>, the <code>x-amz-replication-status</code> header acts
	 *                differently. The header of the source object will only return a value of COMPLETED
	 *                when replication is successful to all destinations. The header will remain at value
	 *                PENDING until replication has completed for all destinations. If one or more
	 *                destinations fails replication the header will return FAILED. </p>
	 *             </li>
	 *          </ul>
	 *          <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Replication</a>.</p>
	 */
	ReplicationStatus?: ReplicationStatus | string;
	/**
	 * <p>The count of parts this object has. This value is only returned if you specify
	 *             <code>partNumber</code> in your request and the object was uploaded as a multipart
	 *          upload.</p>
	 */
	PartsCount?: number;
	/**
	 * <p>The Object Lock mode, if any, that's in effect for this object. This header is only
	 *          returned if the requester has the <code>s3:GetObjectRetention</code> permission. For more
	 *          information about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Object Lock</a>. </p>
	 */
	ObjectLockMode?: ObjectLockMode | string;
	/**
	 * <p>The date and time when the Object Lock retention period expires. This header is only
	 *          returned if the requester has the <code>s3:GetObjectRetention</code> permission.</p>
	 */
	ObjectLockRetainUntilDate?: Date;
	/**
	 * <p>Specifies whether a legal hold is in effect for this object. This header is only
	 *          returned if the requester has the <code>s3:GetObjectLegalHold</code> permission. This
	 *          header is not returned if the specified version of this object has never had a legal hold
	 *          applied. For more information about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Object Lock</a>.</p>
	 */
	ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;
}
/**
 * @public
 */
export interface HeadObjectRequest {
	/**
	 * <p>The name of the bucket containing the object.</p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>Return the object only if its entity tag (ETag) is the same as the one specified;
	 *          otherwise, return a 412 (precondition failed) error.</p>
	 */
	IfMatch?: string;
	/**
	 * <p>Return the object only if it has been modified since the specified time; otherwise,
	 *          return a 304 (not modified) error.</p>
	 */
	IfModifiedSince?: Date;
	/**
	 * <p>Return the object only if its entity tag (ETag) is different from the one specified;
	 *          otherwise, return a 304 (not modified) error.</p>
	 */
	IfNoneMatch?: string;
	/**
	 * <p>Return the object only if it has not been modified since the specified time; otherwise,
	 *          return a 412 (precondition failed) error.</p>
	 */
	IfUnmodifiedSince?: Date;
	/**
	 * <p>The object key.</p>
	 */
	Key: string | undefined;
	/**
	 * <p>HeadObject returns only the metadata for an object. If the Range is satisfiable, only
	 *          the <code>ContentLength</code> is affected in the response. If the Range is not
	 *          satisfiable, S3 returns a <code>416 - Requested Range Not Satisfiable</code> error.</p>
	 */
	Range?: string;
	/**
	 * <p>VersionId used to reference a specific version of the object.</p>
	 */
	VersionId?: string;
	/**
	 * <p>Specifies the algorithm to use to when encrypting the object (for example,
	 *          AES256).</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This
	 *          value is used to store the object and then it is discarded; Amazon S3 does not store the
	 *          encryption key. The key must be appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
	 */
	SSECustomerKey?: string;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. For information about downloading
	 *          objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>Part number of the object being read. This is a positive integer between 1 and 10,000.
	 *          Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about
	 *          the size of the part and the number of parts in this object.</p>
	 */
	PartNumber?: number;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
	/**
	 * <p>To retrieve the checksum, this parameter must be enabled.</p>
	 *          <p>In addition, if you enable <code>ChecksumMode</code> and the object is encrypted with
	 *          Amazon Web Services Key Management Service (Amazon Web Services KMS), you must have permission to use the
	 *             <code>kms:Decrypt</code> action for the request to succeed.</p>
	 */
	ChecksumMode?: ChecksumMode | string;
}
/**
 * @public
 * <p>Container element that identifies who initiated the multipart upload. </p>
 */
export interface Initiator {
	/**
	 * <p>If the principal is an Amazon Web Services account, it provides the Canonical User ID. If the
	 *          principal is an IAM User, it provides a user ARN value.</p>
	 */
	ID?: string;
	/**
	 * <p>Name of the Principal.</p>
	 */
	DisplayName?: string;
}
/**
 * @public
 *
 * The input for {@link ListObjectsV2Command}.
 */
export type ListObjectsV2CommandInput = ListObjectsV2Request;
/**
 * @public
 *
 * The output of {@link ListObjectsV2Command}.
 */
export interface ListObjectsV2CommandOutput
	extends ListObjectsV2Output,
		__MetadataBearer {}
/**
 * @public
 */
export interface ListObjectsV2Output {
	/**
	 * <p>Set to false if all of the results were returned. Set to true if more keys are available
	 *          to return. If the number of results exceeds that specified by MaxKeys, all of the results
	 *          might not be returned.</p>
	 */
	IsTruncated?: boolean;
	/**
	 * <p>Metadata about each object returned.</p>
	 */
	Contents?: _Object[];
	/**
	 * <p>The bucket name.</p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	Name?: string;
	/**
	 * <p> Keys that begin with the indicated prefix.</p>
	 */
	Prefix?: string;
	/**
	 * <p>Causes keys that contain the same string between the prefix and the first occurrence of
	 *          the delimiter to be rolled up into a single result element in the CommonPrefixes
	 *          collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up
	 *          result counts as only one return against the <code>MaxKeys</code> value.</p>
	 */
	Delimiter?: string;
	/**
	 * <p>Sets the maximum number of keys returned in the response. By default the action returns
	 *          up to 1,000 key names. The response might contain fewer keys but will never contain
	 *          more.</p>
	 */
	MaxKeys?: number;
	/**
	 * <p>All of the keys (up to 1,000) rolled up into a common prefix count as a single return
	 *          when calculating the number of returns.</p>
	 *          <p>A response can contain <code>CommonPrefixes</code> only if you specify a
	 *          delimiter.</p>
	 *          <p>
	 *             <code>CommonPrefixes</code> contains all (if there are any) keys between
	 *             <code>Prefix</code> and the next occurrence of the string specified by a
	 *          delimiter.</p>
	 *          <p>
	 *             <code>CommonPrefixes</code> lists keys that act like subdirectories in the directory
	 *          specified by <code>Prefix</code>.</p>
	 *          <p>For example, if the prefix is <code>notes/</code> and the delimiter is a slash
	 *             (<code>/</code>) as in <code>notes/summer/july</code>, the common prefix is
	 *             <code>notes/summer/</code>. All of the keys that roll up into a common prefix count as a
	 *          single return when calculating the number of returns. </p>
	 */
	CommonPrefixes?: CommonPrefix[];
	/**
	 * <p>Encoding type used by Amazon S3 to encode object key names in the XML response.</p>
	 *          <p>If you specify the encoding-type request parameter, Amazon S3 includes this element in the
	 *          response, and returns encoded key name values in the following response elements:</p>
	 *          <p>
	 *             <code>Delimiter, Prefix, Key,</code> and <code>StartAfter</code>.</p>
	 */
	EncodingType?: EncodingType | string;
	/**
	 * <p>KeyCount is the number of keys returned with this request. KeyCount will always be less
	 *          than or equal to the <code>MaxKeys</code> field. Say you ask for 50 keys, your result will
	 *          include 50 keys or fewer.</p>
	 */
	KeyCount?: number;
	/**
	 * <p> If ContinuationToken was sent with the request, it is included in the response.</p>
	 */
	ContinuationToken?: string;
	/**
	 * <p>
	 *             <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which
	 *          means there are more keys in the bucket that can be listed. The next list requests to Amazon S3
	 *          can be continued with this <code>NextContinuationToken</code>.
	 *             <code>NextContinuationToken</code> is obfuscated and is not a real key</p>
	 */
	NextContinuationToken?: string;
	/**
	 * <p>If StartAfter was sent with the request, it is included in the response.</p>
	 */
	StartAfter?: string;
}
/**
 * @public
 */
export interface ListObjectsV2Request {
	/**
	 * <p>Bucket name to list. </p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>A delimiter is a character you use to group keys.</p>
	 */
	Delimiter?: string;
	/**
	 * <p>Encoding type used by Amazon S3 to encode object keys in the response.</p>
	 */
	EncodingType?: EncodingType | string;
	/**
	 * <p>Sets the maximum number of keys returned in the response. By default the action returns
	 *          up to 1,000 key names. The response might contain fewer keys but will never contain
	 *          more.</p>
	 */
	MaxKeys?: number;
	/**
	 * <p>Limits the response to keys that begin with the specified prefix.</p>
	 */
	Prefix?: string;
	/**
	 * <p>ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a
	 *          token. ContinuationToken is obfuscated and is not a real key.</p>
	 */
	ContinuationToken?: string;
	/**
	 * <p>The owner field is not present in listV2 by default, if you want to return owner field
	 *          with each key in the result then set the fetch owner field to true.</p>
	 */
	FetchOwner?: boolean;
	/**
	 * <p>StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this
	 *          specified key. StartAfter can be any key in the bucket.</p>
	 */
	StartAfter?: string;
	/**
	 * <p>Confirms that the requester knows that she or he will be charged for the list objects
	 *          request in V2 style. Bucket owners need not specify this parameter in their
	 *          requests.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
}
/**
 * @public
 *
 * The input for {@link ListPartsCommand}.
 */
export type ListPartsCommandInput = ListPartsRequest;
/**
 * @public
 *
 * The output of {@link ListPartsCommand}.
 */
export interface ListPartsCommandOutput
	extends ListPartsOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface ListPartsOutput {
	/**
	 * <p>If the bucket has a lifecycle rule configured with an action to abort incomplete
	 *          multipart uploads and the prefix in the lifecycle rule matches the object name in the
	 *          request, then the response includes this header indicating when the initiated multipart
	 *          upload will become eligible for abort operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config">Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Configuration</a>.</p>
	 *          <p>The response will also include the <code>x-amz-abort-rule-id</code> header that will
	 *          provide the ID of the lifecycle configuration rule that defines this action.</p>
	 */
	AbortDate?: Date;
	/**
	 * <p>This header is returned along with the <code>x-amz-abort-date</code> header. It
	 *          identifies applicable lifecycle configuration rule that defines the action to abort
	 *          incomplete multipart uploads.</p>
	 */
	AbortRuleId?: string;
	/**
	 * <p>The name of the bucket to which the multipart upload was initiated. Does not return the
	 *          access point ARN or access point alias if used.</p>
	 */
	Bucket?: string;
	/**
	 * <p>Object key for which the multipart upload was initiated.</p>
	 */
	Key?: string;
	/**
	 * <p>Upload ID identifying the multipart upload whose parts are being listed.</p>
	 */
	UploadId?: string;
	/**
	 * <p>When a list is truncated, this element specifies the last part in the list, as well as
	 *          the value to use for the part-number-marker request parameter in a subsequent
	 *          request.</p>
	 */
	PartNumberMarker?: string;
	/**
	 * <p>When a list is truncated, this element specifies the last part in the list, as well as
	 *          the value to use for the part-number-marker request parameter in a subsequent
	 *          request.</p>
	 */
	NextPartNumberMarker?: string;
	/**
	 * <p>Maximum number of parts that were allowed in the response.</p>
	 */
	MaxParts?: number;
	/**
	 * <p> Indicates whether the returned list of parts is truncated. A true value indicates that
	 *          the list was truncated. A list can be truncated if the number of parts exceeds the limit
	 *          returned in the MaxParts element.</p>
	 */
	IsTruncated?: boolean;
	/**
	 * <p> Container for elements related to a particular part. A response can contain zero or
	 *          more <code>Part</code> elements.</p>
	 */
	Parts?: Part[];
	/**
	 * <p>Container element that identifies who initiated the multipart upload. If the initiator
	 *          is an Amazon Web Services account, this element provides the same information as the <code>Owner</code>
	 *          element. If the initiator is an IAM User, this element provides the user ARN and display
	 *          name.</p>
	 */
	Initiator?: Initiator;
	/**
	 * <p> Container element that identifies the object owner, after the object is created. If
	 *          multipart upload is initiated by an IAM user, this element provides the parent account ID
	 *          and display name.</p>
	 */
	Owner?: Owner;
	/**
	 * <p>Class of storage (STANDARD or REDUCED_REDUNDANCY) used to store the uploaded
	 *          object.</p>
	 */
	StorageClass?: StorageClass | string;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 */
	RequestCharged?: RequestCharged | string;
	/**
	 * <p>The algorithm that was used to create a checksum of the object.</p>
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm | string;
}
/**
 * @public
 */
export interface ListPartsRequest {
	/**
	 * <p>The name of the bucket to which the parts are being uploaded. </p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>Object key for which the multipart upload was initiated.</p>
	 */
	Key: string | undefined;
	/**
	 * <p>Sets the maximum number of parts to return.</p>
	 */
	MaxParts?: number;
	/**
	 * <p>Specifies the part after which listing should begin. Only parts with higher part numbers
	 *          will be listed.</p>
	 */
	PartNumberMarker?: string;
	/**
	 * <p>Upload ID identifying the multipart upload whose parts are being listed.</p>
	 */
	UploadId: string | undefined;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. For information about downloading
	 *          objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
	/**
	 * <p>The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created
	 *     using a checksum algorithm. For more information,
	 *     see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm.
	 *     For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	SSECustomerKey?: string;
	/**
	 * <p>The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum
	 *     algorithm. For more information,
	 *     see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	SSECustomerKeyMD5?: string;
}
/**
 * @public
 * <p>Container for the owner's display name and ID.</p>
 */
export interface Owner {
	/**
	 * <p>Container for the display name of the owner. This value is only supported in the
	 *          following Amazon Web Services Regions:</p>
	 *          <ul>
	 *             <li>
	 *                <p>US East (N. Virginia)</p>
	 *             </li>
	 *             <li>
	 *                <p>US West (N. California)</p>
	 *             </li>
	 *             <li>
	 *                <p>US West (Oregon)</p>
	 *             </li>
	 *             <li>
	 *                <p>Asia Pacific (Singapore)</p>
	 *             </li>
	 *             <li>
	 *                <p>Asia Pacific (Sydney)</p>
	 *             </li>
	 *             <li>
	 *                <p>Asia Pacific (Tokyo)</p>
	 *             </li>
	 *             <li>
	 *                <p>Europe (Ireland)</p>
	 *             </li>
	 *             <li>
	 *                <p>South America (São Paulo)</p>
	 *             </li>
	 *          </ul>
	 */
	DisplayName?: string;
	/**
	 * <p>Container for the ID of the owner.</p>
	 */
	ID?: string;
}
/**
 * @public
 * <p>Container for elements related to a part.</p>
 */
export interface Part {
	/**
	 * <p>Part number identifying the part. This is a positive integer between 1 and
	 *          10,000.</p>
	 */
	PartNumber?: number;
	/**
	 * <p>Date and time at which the part was uploaded.</p>
	 */
	LastModified?: Date;
	/**
	 * <p>Entity tag returned when the part was uploaded.</p>
	 */
	ETag?: string;
	/**
	 * <p>Size in bytes of the uploaded part data.</p>
	 */
	Size?: number;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32C?: string;
	/**
	 * <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA1?: string;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA256?: string;
}
/**
 * This interface extends from `PutObjectRequest` interface. There are more parameters than `Body` defined in {@link PutObjectRequest}
 */
export type PutObjectCommandInput = PutObjectCommandInputType;
/**
 * @public
 *
 * The output of {@link PutObjectCommand}.
 */
export interface PutObjectCommandOutput
	extends PutObjectOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface PutObjectOutput {
	/**
	 * <p>If the expiration is configured for the object (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a>), the response includes this header. It
	 *          includes the <code>expiry-date</code> and <code>rule-id</code> key-value pairs that provide
	 *          information about object expiration. The value of the <code>rule-id</code> is
	 *          URL-encoded.</p>
	 */
	Expiration?: string;
	/**
	 * <p>Entity tag for the uploaded object.</p>
	 */
	ETag?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32C?: string;
	/**
	 * <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA1?: string;
	/**
	 * <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA256?: string;
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
	 *          AES256, <code>aws:kms</code>).</p>
	 */
	ServerSideEncryption?: ServerSideEncryption | string;
	/**
	 * <p>Version of the object.</p>
	 */
	VersionId?: string;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header confirming the encryption algorithm used.</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide round-trip message integrity verification of
	 *          the customer-provided encryption key.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>If <code>x-amz-server-side-encryption</code> is has a valid value of
	 *             <code>aws:kms</code>, this header specifies the ID of the Amazon Web Services Key Management Service
	 *          (Amazon Web Services KMS) symmetric encryption customer managed key that was used for the object. </p>
	 */
	SSEKMSKeyId?: string;
	/**
	 * <p>If present, specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The
	 *          value of this header is a base64-encoded UTF-8 string holding JSON with the encryption
	 *          context key-value pairs. This value is stored as object metadata and automatically gets passed
	 *          on to Amazon Web Services KMS for future <code>GetObject</code> or <code>CopyObject</code> operations on
	 *          this object.</p>
	 */
	SSEKMSEncryptionContext?: string;
	/**
	 * <p>Indicates whether the uploaded object uses an S3 Bucket Key for server-side encryption
	 *          with Amazon Web Services KMS (SSE-KMS).</p>
	 */
	BucketKeyEnabled?: boolean;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 */
	RequestCharged?: RequestCharged | string;
}
/**
 * @public
 */
export interface PutObjectRequest {
	/**
	 * <p>The canned ACL to apply to the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned
	 *             ACL</a>.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	ACL?: ObjectCannedACL | string;
	/**
	 * <p>Object data.</p>
	 */
	Body?: ReadableStream | Blob;
	/**
	 * <p>The bucket name to which the PUT action was initiated. </p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p> Can be used to specify caching behavior along the request/reply chain. For more
	 *          information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p>
	 */
	CacheControl?: string;
	/**
	 * <p>Specifies presentational information for the object. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc6266#section-4">https://www.rfc-editor.org/rfc/rfc6266#section-4</a>.</p>
	 */
	ContentDisposition?: string;
	/**
	 * <p>Specifies what content encodings have been applied to the object and thus what decoding
	 *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header
	 *          field. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc9110.html#field.content-encoding">https://www.rfc-editor.org/rfc/rfc9110.html#field.content-encoding</a>.</p>
	 */
	ContentEncoding?: string;
	/**
	 * <p>The language the content is in.</p>
	 */
	ContentLanguage?: string;
	/**
	 * <p>Size of the body in bytes. This parameter is useful when the size of the body cannot be
	 *          determined automatically. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-content-length">https://www.rfc-editor.org/rfc/rfc9110.html#name-content-length</a>.</p>
	 */
	ContentLength?: number;
	/**
	 * <p>The base64-encoded 128-bit MD5 digest of the message (without the headers) according to
	 *          RFC 1864. This header can be used as a message integrity check to verify that the data is
	 *          the same data that was originally sent. Although it is optional, we recommend using the
	 *          Content-MD5 mechanism as an end-to-end integrity check. For more information about REST
	 *          request authentication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">REST Authentication</a>.</p>
	 */
	ContentMD5?: string;
	/**
	 * <p>A standard MIME type describing the format of the contents. For more information, see
	 *             <a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-content-type">https://www.rfc-editor.org/rfc/rfc9110.html#name-content-type</a>.</p>
	 */
	ContentType?: string;
	/**
	 * <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any
	 *     additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or
	 *     <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more
	 *     information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in
	 *     the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>If you provide an individual checksum, Amazon S3 ignores any provided
	 *             <code>ChecksumAlgorithm</code> parameter.</p>
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm | string;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32?: string;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32C?: string;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA1?: string;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA256?: string;
	/**
	 * <p>The date and time at which the object is no longer cacheable. For more information, see
	 *             <a href="https://www.rfc-editor.org/rfc/rfc7234#section-5.3">https://www.rfc-editor.org/rfc/rfc7234#section-5.3</a>.</p>
	 */
	Expires?: Date;
	/**
	 * <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	GrantFullControl?: string;
	/**
	 * <p>Allows grantee to read the object data and its metadata.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	GrantRead?: string;
	/**
	 * <p>Allows grantee to read the object ACL.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	GrantReadACP?: string;
	/**
	 * <p>Allows grantee to write the ACL for the applicable object.</p>
	 *          <p>This action is not supported by Amazon S3 on Outposts.</p>
	 */
	GrantWriteACP?: string;
	/**
	 * <p>Object key for which the PUT action was initiated.</p>
	 */
	Key: string | undefined;
	/**
	 * <p>A map of metadata to store with the object in S3.</p>
	 */
	Metadata?: Record<string, string>;
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
	 *          AES256, <code>aws:kms</code>).</p>
	 */
	ServerSideEncryption?: ServerSideEncryption | string;
	/**
	 * <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The
	 *          STANDARD storage class provides high durability and high availability. Depending on
	 *          performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses
	 *          the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the
	 *             <i>Amazon S3 User Guide</i>.</p>
	 */
	StorageClass?: StorageClass | string;
	/**
	 * <p>If the bucket is configured as a website, redirects requests for this object to another
	 *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
	 *          the object metadata. For information about object metadata, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html">Object Key and Metadata</a>.</p>
	 *          <p>In the following example, the request header sets the redirect to an object
	 *          (anotherPage.html) in the same bucket:</p>
	 *          <p>
	 *             <code>x-amz-website-redirect-location: /anotherPage.html</code>
	 *          </p>
	 *          <p>In the following example, the request header sets the object redirect to another
	 *          website:</p>
	 *          <p>
	 *             <code>x-amz-website-redirect-location: http://www.example.com/</code>
	 *          </p>
	 *          <p>For more information about website hosting in Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting Websites on Amazon S3</a> and
	 *             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html">How to
	 *             Configure Website Page Redirects</a>. </p>
	 */
	WebsiteRedirectLocation?: string;
	/**
	 * <p>Specifies the algorithm to use to when encrypting the object (for example,
	 *          AES256).</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This
	 *          value is used to store the object and then it is discarded; Amazon S3 does not store the
	 *          encryption key. The key must be appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
	 */
	SSECustomerKey?: string;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>If <code>x-amz-server-side-encryption</code> has a valid value of <code>aws:kms</code>,
	 *          this header specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
	 *          encryption customer managed key that was used for the object. If you specify
	 *             <code>x-amz-server-side-encryption:aws:kms</code>, but do not provide<code>
	 *             x-amz-server-side-encryption-aws-kms-key-id</code>, Amazon S3 uses the Amazon Web Services managed key to
	 *          protect the data. If the KMS key does not exist in the same account issuing the command,
	 *          you must use the full ARN and not just the ID. </p>
	 */
	SSEKMSKeyId?: string;
	/**
	 * <p>Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of
	 *          this header is a base64-encoded UTF-8 string holding JSON with the encryption context
	 *          key-value pairs. This value is stored as object metadata and automatically gets passed on to
	 *          Amazon Web Services KMS for future <code>GetObject</code> or <code>CopyObject</code> operations on this
	 *          object.</p>
	 */
	SSEKMSEncryptionContext?: string;
	/**
	 * <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with
	 *          server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code>
	 *          causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p>
	 *          <p>Specifying this header with a PUT action doesn’t affect bucket-level settings for S3
	 *          Bucket Key.</p>
	 */
	BucketKeyEnabled?: boolean;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. For information about downloading
	 *          objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For
	 *          example, "Key1=Value1")</p>
	 */
	Tagging?: string;
	/**
	 * <p>The Object Lock mode that you want to apply to this object.</p>
	 */
	ObjectLockMode?: ObjectLockMode | string;
	/**
	 * <p>The date and time when you want this object's Object Lock to expire. Must be formatted
	 *          as a timestamp parameter.</p>
	 */
	ObjectLockRetainUntilDate?: Date;
	/**
	 * <p>Specifies whether a legal hold will be applied to this object. For more information
	 *          about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Object Lock</a>.</p>
	 */
	ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
}
/**
 * This interface extends from `UploadPartRequest` interface. There are more parameters than `Body` defined in {@link UploadPartRequest}
 */
export type UploadPartCommandInput = UploadPartCommandInputType;
/**
 * @public
 *
 * The output of {@link UploadPartCommand}.
 */
export interface UploadPartCommandOutput
	extends UploadPartOutput,
		__MetadataBearer {}
/**
 * @public
 */
export interface UploadPartOutput {
	/**
	 * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
	 *          AES256, <code>aws:kms</code>).</p>
	 */
	ServerSideEncryption?: ServerSideEncryption | string;
	/**
	 * <p>Entity tag for the uploaded object.</p>
	 */
	ETag?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32?: string;
	/**
	 * <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32C?: string;
	/**
	 * <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA1?: string;
	/**
	 * <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded
	 *     with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated
	 *     with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums">
	 *     Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA256?: string;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header confirming the encryption algorithm used.</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>If server-side encryption with a customer-provided encryption key was requested, the
	 *          response will include this header to provide round-trip message integrity verification of
	 *          the customer-provided encryption key.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
	 *          encryption customer managed key was used for the object.</p>
	 */
	SSEKMSKeyId?: string;
	/**
	 * <p>Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption
	 *          with Amazon Web Services KMS (SSE-KMS).</p>
	 */
	BucketKeyEnabled?: boolean;
	/**
	 * <p>If present, indicates that the requester was successfully charged for the
	 *          request.</p>
	 */
	RequestCharged?: RequestCharged | string;
}
/**
 * @public
 */
export interface UploadPartRequest {
	/**
	 * <p>Object data.</p>
	 */
	Body?: ReadableStream | Blob;
	/**
	 * <p>The name of the bucket to which the multipart upload was initiated.</p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>Size of the body in bytes. This parameter is useful when the size of the body cannot be
	 *          determined automatically.</p>
	 */
	ContentLength?: number;
	/**
	 * <p>The base64-encoded 128-bit MD5 digest of the part data. This parameter is auto-populated
	 *          when using the command from the CLI. This parameter is required if object lock parameters
	 *          are specified.</p>
	 */
	ContentMD5?: string;
	/**
	 * <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any
	 *     additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or
	 *     <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more
	 *     information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in
	 *     the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>If you provide an individual checksum, Amazon S3 ignores any provided
	 *             <code>ChecksumAlgorithm</code> parameter.</p>
	 *          <p>This checksum algorithm must be the same for all parts and it match the checksum value
	 *          supplied in the <code>CreateMultipartUpload</code> request.</p>
	 */
	ChecksumAlgorithm?: ChecksumAlgorithm | string;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32?: string;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumCRC32C?: string;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA1?: string;
	/**
	 * <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent.
	 *     This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see
	 *     <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the
	 *     <i>Amazon S3 User Guide</i>.</p>
	 */
	ChecksumSHA256?: string;
	/**
	 * <p>Object key for which the multipart upload was initiated.</p>
	 */
	Key: string | undefined;
	/**
	 * <p>Part number of part being uploaded. This is a positive integer between 1 and
	 *          10,000.</p>
	 */
	PartNumber: number | undefined;
	/**
	 * <p>Upload ID identifying the multipart upload whose part is being uploaded.</p>
	 */
	UploadId: string | undefined;
	/**
	 * <p>Specifies the algorithm to use to when encrypting the object (for example,
	 *          AES256).</p>
	 */
	SSECustomerAlgorithm?: string;
	/**
	 * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This
	 *          value is used to store the object and then it is discarded; Amazon S3 does not store the
	 *          encryption key. The key must be appropriate for use with the algorithm specified in the
	 *             <code>x-amz-server-side-encryption-customer-algorithm header</code>. This must be the
	 *          same encryption key specified in the initiate multipart upload request.</p>
	 */
	SSECustomerKey?: string;
	/**
	 * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
	 *          this header for a message integrity check to ensure that the encryption key was transmitted
	 *          without error.</p>
	 */
	SSECustomerKeyMD5?: string;
	/**
	 * <p>Confirms that the requester knows that they will be charged for the request. Bucket
	 *          owners need not specify this parameter in their requests. For information about downloading
	 *          objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
	 *             Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
}
/**
 * @public
 * <p>An object consists of data and its descriptive metadata.</p>
 */
export interface _Object {
	/**
	 * <p>The name that you assign to an object. You use the object key to retrieve the
	 *          object.</p>
	 */
	Key?: string;
	/**
	 * <p>Creation date of the object.</p>
	 */
	LastModified?: Date;
	/**
	 * <p>The entity tag is a hash of the object. The ETag reflects changes only to the contents
	 *          of an object, not its metadata. The ETag may or may not be an MD5 digest of the object
	 *          data. Whether or not it is depends on how the object was created and how it is encrypted as
	 *          described below:</p>
	 *          <ul>
	 *             <li>
	 *                <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the
	 *                Amazon Web Services Management Console, and are encrypted by SSE-S3 or plaintext, have ETags that
	 *                are an MD5 digest of their object data.</p>
	 *             </li>
	 *             <li>
	 *                <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the
	 *                Amazon Web Services Management Console, and are encrypted by SSE-C or SSE-KMS, have ETags that are
	 *                not an MD5 digest of their object data.</p>
	 *             </li>
	 *             <li>
	 *                <p>If an object is created by either the Multipart Upload or Part Copy operation, the
	 *                ETag is not an MD5 digest, regardless of the method of encryption. If an object is
	 *                larger than 16 MB, the Amazon Web Services Management Console will upload or copy that object as a
	 *                Multipart Upload, and therefore the ETag will not be an MD5 digest.</p>
	 *             </li>
	 *          </ul>
	 */
	ETag?: string;
	/**
	 * <p>The algorithm that was used to create a checksum of the object.</p>
	 */
	ChecksumAlgorithm?: (ChecksumAlgorithm | string)[];
	/**
	 * <p>Size in bytes of the object</p>
	 */
	Size?: number;
	/**
	 * <p>The class of storage used to store the object.</p>
	 */
	StorageClass?: ObjectStorageClass | string;
	/**
	 * <p>The owner of the object</p>
	 */
	Owner?: Owner;
}
/**
 * @public
 */
export type ArchiveStatus = (typeof ArchiveStatus)[keyof typeof ArchiveStatus];
/**
 * @public
 */
export type ChecksumAlgorithm =
	(typeof ChecksumAlgorithm)[keyof typeof ChecksumAlgorithm];
/**
 * @public
 */
export type ChecksumMode = (typeof ChecksumMode)[keyof typeof ChecksumMode];
/**
 * @public
 */
export type EncodingType = (typeof EncodingType)[keyof typeof EncodingType];
/**
 * @public
 */
export type MetadataDirective =
	(typeof MetadataDirective)[keyof typeof MetadataDirective];
/**
 * @public
 */
export type ObjectCannedACL =
	(typeof ObjectCannedACL)[keyof typeof ObjectCannedACL];
/**
 * @public
 */
export type ObjectLockLegalHoldStatus =
	(typeof ObjectLockLegalHoldStatus)[keyof typeof ObjectLockLegalHoldStatus];
/**
 * @public
 */
export type ObjectLockMode =
	(typeof ObjectLockMode)[keyof typeof ObjectLockMode];
/**
 * @public
 */
export type ObjectStorageClass =
	(typeof ObjectStorageClass)[keyof typeof ObjectStorageClass];
/**
 * @public
 *
 * The input for {@link PutObjectCommand}.
 */
export type PutObjectCommandInputType = Omit<PutObjectRequest, 'Body'> & {
	/**
	 * For *`PutObjectRequest["Body"]`*, see {@link PutObjectRequest.Body}.
	 */
	Body?: string | Blob | ArrayBuffer | ArrayBufferView;
};
/**
 * @public
 */
export type ReplicationStatus =
	(typeof ReplicationStatus)[keyof typeof ReplicationStatus];
/**
 * @public
 */
export type RequestCharged =
	(typeof RequestCharged)[keyof typeof RequestCharged];
/**
 * @public
 */
export type RequestPayer = (typeof RequestPayer)[keyof typeof RequestPayer];
/**
 * @public
 */
export type ServerSideEncryption =
	(typeof ServerSideEncryption)[keyof typeof ServerSideEncryption];
/**
 * @public
 */
export type StorageClass = (typeof StorageClass)[keyof typeof StorageClass];
/**
 * @public
 */
export type TaggingDirective =
	(typeof TaggingDirective)[keyof typeof TaggingDirective];
/**
 * @public
 *
 * The input for {@link UploadPartCommand}.
 */
export type UploadPartCommandInputType = Omit<UploadPartRequest, 'Body'> & {
	/**
	 * For *`UploadPartRequest["Body"]`*, see {@link UploadPartRequest.Body}.
	 */
	Body?: string | Blob | ArrayBuffer | ArrayBufferView;
};

export {};
