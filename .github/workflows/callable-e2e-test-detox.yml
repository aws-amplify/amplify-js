name: E2E Test - Detox
run-name: e2e-detox.${{ inputs.test_name }}

on:
  workflow_call:
    inputs:
      test_name:
        required: true
        type: string
      working_directory:
        required: true
        type: string
      timeout_minutes:
        required: true
        type: number

jobs:
  e2e-test:
    name: E2E-Detox ${{ inputs.test_name }}
    runs-on: macos-latest
    timeout-minutes: ${{ inputs.timeout_minutes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0 https://github.com/actions/checkout/commit/24cb9080177205b6e8c946b17badbe402adc938f
        with:
          path: amplify-js
      - name: Setup node and build the repository
        uses: ./amplify-js/.github/actions/node-and-build
      - name: Setup samples staging repository
        uses: ./amplify-js/.github/actions/setup-samples-staging
        with:
          GH_TOKEN_STAGING_READ: ${{ secrets.GH_TOKEN_STAGING_READ }}
      - name: Load Verdaccio with AmplifyJs
        uses: ./amplify-js/.github/actions/load-verdaccio-with-amplify-js
      - name: Yarn Install
        working-directory: ${{ inputs.working_directory }}
        run: |
          echo "Current NPM registry: " $(yarn config get registry)
          $GITHUB_WORKSPACE/amplify-js/scripts/retry-yarn-script.sh -s 'install --frozen-lockfile --non-interactive' -n 3
        shell: bash
      - name: Install CocoaPods
        run: |
          cd ios && pod install
        working-directory: ${{ inputs.working_directory }}
        shell: bash
      - name: Setup iOS Simulator
        run: |
          # Check if iPhone 15 device exists
          if ! xcrun simctl list devices | grep -q "iPhone 15"; then
            echo "iPhone 15 device not found, creating one..."
            
            # Get the latest available iOS runtime
            RUNTIME=$(xcrun simctl list runtimes | grep iOS | tail -1 | awk '{print $NF}')
            echo "Using runtime: $RUNTIME"
            
            # Create iPhone 15 device with available runtime
            xcrun simctl create "iPhone 15" "com.apple.CoreSimulator.SimDeviceType.iPhone-15" "$RUNTIME" || \
            xcrun simctl create "iPhone 15" "iPhone 15" "$RUNTIME" || \
            echo "Could not create iPhone 15, will use available device"
          fi
          
          # Boot iPhone 15 if it exists, otherwise use first available iPhone
          if xcrun simctl list devices | grep -q "iPhone 15"; then
            xcrun simctl boot "iPhone 15" &
          else
            DEVICE=$(xcrun simctl list devices available | grep "iPhone" | head -1 | sed 's/.*\(iPhone[^(]*\).*/\1/' | xargs)
            echo "Using fallback device: $DEVICE"
            xcrun simctl boot "$DEVICE" &
          fi
        shell: bash
      - name: Start Metro Packager (background)
        run: |
          yarn start &
        working-directory: ${{ inputs.working_directory }}
        shell: bash
      - name: Configure Detox
        env:
          HOMEBREW_NO_AUTO_UPDATE: '1'
        run: |
          brew tap wix/brew
          brew install applesimutils
          yarn global add detox-cli
        working-directory: ${{ inputs.working_directory }}
        shell: bash
      - name: Detox Build
        run: |
          detox build -c ios.sim.debug
        env:
          JEST_JUNIT_OUTPUT_DIR: reports/junit
          JEST_JUNIT_OUTPUT_NAME: detox-test-results.xml
        working-directory: ${{ inputs.working_directory }}
        shell: bash
      - name: Detox run
        run: |
          $GITHUB_WORKSPACE/amplify-js/scripts/retry-yarn-script.sh -s 'detox test -c ios.sim.debug -u' -n 3
        working-directory: ${{ inputs.working_directory }}
        shell: bash
